{"version":3,"file":"d3plus-shape.js","sources":["../src/Image.js","../src/geom/pointDistanceSquared.js","../src/geom/pointDistance.js","../src/Shape/Shape.js","../src/geom/lineIntersection.js","../src/geom/segmentBoxContains.js","../src/geom/segmentsIntersect.js","../src/geom/polygonInside.js","../src/geom/polygonRayCast.js","../src/geom/pointRotate.js","../src/geom/polygonRotate.js","../src/geom/simplify.js","../src/geom/largestRect.js","../src/Shape/Area.js","../src/Shape/Bar.js","../src/Shape/Circle.js","../src/Shape/Rect.js","../src/Shape/Line.js","../src/Shape/Whisker.js","../src/Shape/Box.js","../src/geom/path2polygon.js","../src/Shape/Path.js","../src/geom/shapeEdgePoint.js"],"sourcesContent":["import {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, constant} from \"d3plus-common\";\n\n/**\n    @class Image\n    @desc Creates SVG images based on an array of data.\n    @example <caption>a sample row of data</caption>\nvar data = {\"url\": \"file.png\", \"width\": \"100\", \"height\": \"50\"};\n@example <caption>passed to the generator</caption>\nnew Image().data([data]).render();\n@example <caption>creates the following</caption>\n<image class=\"d3plus-Image\" opacity=\"1\" href=\"file.png\" width=\"100\" height=\"50\" x=\"0\" y=\"0\"></image>\n@example <caption>this is shorthand for the following</caption>\nimage().data([data])();\n@example <caption>which also allows a post-draw callback function</caption>\nimage().data([data])(function() { alert(\"draw complete!\"); })\n*/\nexport default class Image {\n\n  /**\n      @memberof Image\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    this._duration = 600;\n    this._height = accessor(\"height\");\n    this._id = accessor(\"id\");\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"auto\");\n    this._select;\n    this._url = accessor(\"url\");\n    this._width = accessor(\"width\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n  }\n\n  /**\n      @memberof Image\n      @desc Renders the current Image to the page. If a *callback* is specified, it will be called once the images are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").style(\"width\", `${window.innerWidth}px`).style(\"height\", `${window.innerHeight}px`).style(\"display\", \"block\").node());\n\n    const images = this._select.selectAll(\".d3plus-Image\").data(this._data, this._id);\n\n    const enter = images.enter().append(\"image\")\n      .attr(\"class\", \"d3plus-Image\")\n      .attr(\"opacity\", 0)\n      .attr(\"width\", 0)\n      .attr(\"height\", 0)\n      .attr(\"x\", (d, i) => this._x(d, i) + this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => this._y(d, i) + this._height(d, i) / 2);\n\n    const t = transition().duration(this._duration),\n          that = this,\n          update = enter.merge(images);\n\n    update\n      .attr(\"xlink:href\", this._url)\n      .style(\"pointer-events\", this._pointerEvents)\n      .transition(t)\n      .attr(\"opacity\", this._opacity)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .each(function(d, i) {\n        const image = select(this), link = that._url(d, i);\n        const fullAddress = link.indexOf(\"http://\") === 0 || link.indexOf(\"https://\") === 0;\n        if (!fullAddress || link.indexOf(window.location.hostname) === 0) {\n          const img = new Image();\n          img.src = link;\n          img.crossOrigin = \"Anonymous\";\n          img.onload = function() {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.width;\n            canvas.height = this.height;\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(this, 0, 0);\n            image.attr(\"xlink:href\", canvas.toDataURL(\"image/png\"));\n          };\n        }\n      });\n\n    images.exit().transition(t)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .attr(\"opacity\", 0).remove();\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Image\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. An <image> tag will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Image\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Image\n      @desc Sets the opacity of the image.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the pointer-events accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"auto\"]\n      @chainable\n  */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Image\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the URL accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.url;\n}\n  */\n  url(_) {\n    return arguments.length ? (this._url = _, this) : this._url;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x || 0;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y || 0;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function pointDistanceSquared\n    @desc Returns the squared euclidean distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => {\n\n  const dx = p2[0] - p1[0],\n        dy = p2[1] - p1[1];\n\n  return dx * dx + dy * dy;\n\n};\n","import pointDistanceSquared from \"./pointDistanceSquared.js\";\n\n/**\n    @function pointDistance\n    @desc Calculates the pixel distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => Math.sqrt(pointDistanceSquared(p1, p2));\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {min} from \"d3-array\";\nimport {color} from \"d3-color\";\nimport {pointer, select, selectAll} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, assign, attrize, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorContrast} from \"d3plus-color\";\nimport * as paths from \"d3-shape\";\nimport {strip, TextBox} from \"d3plus-text\";\n\nimport Image from \"../Image.js\";\nimport pointDistance from \"../geom/pointDistance.js\";\n\n/**\n    @class Shape\n    @extends external:BaseClass\n    @desc An abstracted class for generating shapes.\n*/\nexport default class Shape extends BaseClass {\n\n  /**\n      @memberof Shape\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor(tagName = \"g\") {\n\n    super();\n\n    this._activeOpacity = 0.25;\n    this._activeStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(1);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 3;\n      }\n    };\n    this._ariaLabel = constant(\"\");\n    this._backgroundImage = constant(false);\n    this._backgroundImageClass = new Image();\n    this._data = [];\n    this._duration = 600;\n    this._fill = constant(\"black\");\n    this._fillOpacity = constant(1);\n\n    this._hoverOpacity = 0.5;\n    this._hoverStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(0.5);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 2;\n      }\n    };\n    this._id = (d, i) => d.id !== void 0 ? d.id : i;\n    this._label = constant(false);\n    this._labelClass = new TextBox();\n    this._labelConfig = {\n      fontColor: (d, i) => colorContrast(this._fill(d, i)),\n      fontSize: 12,\n      padding: 5\n    };\n    this._name = \"Shape\";\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"visiblePainted\");\n    this._role = constant(\"presentation\");\n    this._rotate = constant(0);\n    this._rx = constant(0);\n    this._ry = constant(0);\n    this._scale = constant(1);\n    this._shapeRendering = constant(\"geometricPrecision\");\n    this._stroke = (d, i) => color(this._fill(d, i)).darker(1);\n    this._strokeDasharray = constant(\"0\");\n    this._strokeLinecap = constant(\"butt\");\n    this._strokeOpacity = constant(1);\n    this._strokeWidth = constant(0);\n    this._tagName = tagName;\n    this._textAnchor = constant(\"start\");\n    this._vectorEffect = constant(\"non-scaling-stroke\");\n    this._verticalAlign = constant(\"top\");\n\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes() {\n    return {};\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds event listeners to each shape group or hit area.\n      @param {D3Selection} *update* The update cycle of the data binding.\n      @private\n  */\n  _applyEvents(handler) {\n\n    const events = Object.keys(this._on);\n    for (let e = 0; e < events.length; e++) {\n      handler.on(events[e], (event, d, i) => {\n        if (!this._on[events[e]]) return;\n        if (d.i !== void 0) i = d.i;\n        if (d.nested && d.values) {\n          const calcPoint = (d, i) => {\n            if (this._discrete === \"x\") return [this._x(d, i), cursor[1]];\n            else if (this._discrete === \"y\") return [cursor[0], this._y(d, i)];\n            else return [this._x(d, i), this._y(d, i)];\n          };\n          const cursor = pointer(event, this._select.node()),\n                values = d.values.map(d => pointDistance(cursor, calcPoint(d, i)));\n          i = values.indexOf(min(values));\n          d = d.values[i];\n        }\n        this._on[events[e]].bind(this)(d, i, undefined, event);\n      });\n    }\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the updated styling to the given shape elements.\n      @param {HTMLElement} *elem*\n      @param {Object} *style*\n      @private\n  */\n  _updateStyle(elem, style) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    const styleObject = {};\n    for (const key in style) {\n      if ({}.hasOwnProperty.call(style, key)) {\n        styleObject[key] = styleLogic.bind(style[key]);\n      }\n    }\n\n    elem.transition().duration(0).call(attrize, styleObject);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the default styling to the shape elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyStyle(elem) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    elem\n      .attr(\"fill\", styleLogic.bind(this._fill))\n      .attr(\"fill-opacity\", styleLogic.bind(this._fillOpacity))\n      .attr(\"rx\", styleLogic.bind(this._rx))\n      .attr(\"ry\", styleLogic.bind(this._ry))\n      .attr(\"stroke\", styleLogic.bind(this._stroke))\n      .attr(\"stroke-dasharray\", styleLogic.bind(this._strokeDasharray))\n      .attr(\"stroke-linecap\", styleLogic.bind(this._strokeLinecap))\n      .attr(\"stroke-opacity\", styleLogic.bind(this._strokeOpacity))\n      .attr(\"stroke-width\", styleLogic.bind(this._strokeWidth))\n      .attr(\"vector-effect\", styleLogic.bind(this._vectorEffect));\n  }\n\n  /**\n      @memberof Shape\n      @desc Calculates the transform for the group elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyTransform(elem) {\n\n    elem\n      .attr(\"transform\", (d, i) => `\n        translate(${d.__d3plusShape__\n    ? d.translate ? d.translate\n    : `${this._x(d.data, d.i)},${this._y(d.data, d.i)}`\n    : `${this._x(d, i)},${this._y(d, i)}`})\n        scale(${d.__d3plusShape__ ? d.scale || this._scale(d.data, d.i)\n  : this._scale(d, i)})\n        rotate(${d.__d3plusShape__ ? d.rotate ? d.rotate\n  : this._rotate(d.data || d, d.i)\n  : this._rotate(d.data || d, d.i)})`);\n  }\n\n  /**\n      @memberof Shape\n      @desc Checks for nested data and uses the appropriate variables for accessor functions.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _nestWrapper(method) {\n    return (d, i) => method(d.__d3plusShape__ ? d.data : d, d.__d3plusShape__ ? d.i : i);\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show active status.\n      @private\n  */\n  _renderActive() {\n\n    const that = this;\n\n    this._group.selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._active || typeof that._active !== \"function\" || !that._active(d, i) ? parent : that._activeGroup.node();\n        if (group !== this.parentNode) {\n          group.appendChild(this);\n          if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n            if (parent === group) select(this).call(that._applyStyle.bind(that));\n            else select(this).call(that._updateStyle.bind(that, select(this), that._activeStyle));\n          }\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show hover status.\n      @private\n  */\n  _renderHover() {\n\n    const that = this;\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text, g.d3plus-${this._name}-hover`)\n      .selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._hover || typeof that._hover !== \"function\" || !that._hover(d, i) ? parent : that._hoverGroup.node();\n        if (group !== this.parentNode) group.appendChild(this);\n        if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n          if (parent === group) select(this).call(that._applyStyle.bind(that));\n          else select(this).call(that._updateStyle.bind(that, select(this), that._hoverStyle));\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds background image to each shape group.\n      @private\n  */\n  _renderImage() {\n\n    const imageData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        const aes = this._aes(datum, i);\n\n        if (aes.r || aes.width && aes.height) {\n\n          let d = datum;\n          if (datum.nested && datum.key && datum.values) {\n            d = datum.values[0];\n            i = this._data.indexOf(d);\n          }\n\n          const height = aes.r ? aes.r * 2 : aes.height,\n                url = this._backgroundImage(d, i),\n                width = aes.r ? aes.r * 2 : aes.width;\n\n          if (url) {\n\n            let x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                  : this._x(d.data, d.i) : this._x(d, i),\n                y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                : this._y(d.data, d.i) : this._y(d, i);\n\n            if (aes.x) x += aes.x;\n            if (aes.y) y += aes.y;\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            imageData.push({\n              __d3plus__: true,\n              data: d,\n              height,\n              i,\n              id: this._id(d, i),\n              url,\n              width,\n              x: x + -width / 2,\n              y: y + -height / 2\n            });\n\n          }\n\n        }\n\n      });\n\n    this._backgroundImageClass\n      .data(imageData)\n      .duration(this._duration)\n      .opacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .select(elem(`g.d3plus-${this._name}-image`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds labels to each shape group.\n      @private\n  */\n  _renderLabels() {\n\n    const labelData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        let d = datum;\n        if (datum.nested && datum.key && datum.values) {\n          d = datum.values[0];\n          i = this._data.indexOf(d);\n        }\n\n        let labels = this._label(d, i);\n\n        if (this._labelBounds && labels !== false && labels !== undefined && labels !== null) {\n\n          const bounds = this._labelBounds.bind(this)(d, i, this._aes(datum, i));\n\n          if (bounds) {\n\n            if (labels.constructor !== Array) labels = [labels];\n\n            const x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                    : this._x(d.data, d.i) : this._x(d, i),\n                  y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                  : this._y(d.data, d.i) : this._y(d, i);\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            for (let l = 0; l < labels.length; l++) {\n\n              const b = bounds.constructor === Array ? bounds[l] : Object.assign({}, bounds);\n              const rotate = this._rotate(d, i);\n              let r = d.labelConfig && d.labelConfig.rotate ? d.labelConfig.rotate : bounds.angle !== undefined ? bounds.angle : 0;\n              r += rotate;\n              const rotateAnchor = rotate !== 0 ? [b.x * -1 || 0, b.y * -1 || 0] : [b.width / 2, b.height / 2];\n\n              labelData.push({\n                __d3plus__: true,\n                data: d,\n                height: b.height,\n                l,\n                id: `${this._id(d, i)}_${l}`,\n                r,\n                rotateAnchor,\n                text: labels[l],\n                width: b.width,\n                x: x + b.x,\n                y: y + b.y\n              });\n\n            }\n\n          }\n\n        }\n\n      });\n\n    this._labelClass\n      .data(labelData)\n      .duration(this._duration)\n      .fontOpacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .rotate(d => d.__d3plus__ ? d.r : d.data.r)\n      .rotateAnchor(d => d.__d3plus__ ? d.rotateAnchor : d.data.rotateAnchor)\n      .select(elem(`g.d3plus-${this._name}-text`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .config(configPrep.bind(this)(this._labelConfig))\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Renders the current Shape to the page. If a *callback* is specified, it will be called once the shapes are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    this._transition = transition(this._uuid)\n      .duration(this._duration);\n\n    let data = this._data, key = this._id;\n    if (this._dataFilter) {\n      data = this._dataFilter(data);\n      if (data.key) key = data.key;\n    }\n\n    if (this._sort) {\n      data = data.sort((a, b) => {\n        while (a.__d3plusShape__ || a.__d3plus__) a = a.data;\n        while (b.__d3plusShape__ || b.__d3plus__) b = b.data;\n        return this._sort(a, b);\n      });\n    }\n\n    selectAll(`g.d3plus-${this._name}-hover > *, g.d3plus-${this._name}-active > *`).each(function(d) {\n      if (d && d.parentNode) d.parentNode.appendChild(this);\n      else this.parentNode.removeChild(this);\n    });\n\n    // Makes the update state of the group selection accessible.\n    this._group = elem(`g.d3plus-${this._name}-group`, {parent: this._select});\n    const update = this._update = elem(`g.d3plus-${this._name}-shape`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}})\n      .selectAll(`.d3plus-${this._name}`)\n      .data(data, key);\n\n    // Orders and transforms the updating Shapes.\n    update.order();\n    if (this._duration) {\n      update.transition(this._transition)\n        .call(this._applyTransform.bind(this));\n    }\n    else {\n      update.call(this._applyTransform.bind(this));\n    }\n\n    // Makes the enter state of the group selection accessible.\n    const enter = this._enter = update.enter().append(this._tagName)\n      .attr(\"class\", (d, i) => `d3plus-Shape d3plus-${this._name} d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .call(this._applyTransform.bind(this))\n      .attr(\"aria-label\", this._ariaLabel)\n      .attr(\"role\", this._role)\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    const enterUpdate = enter.merge(update);\n\n    let enterUpdateRender = enterUpdate.attr(\"shape-rendering\", this._nestWrapper(this._shapeRendering));\n\n    if (this._duration) {\n      enterUpdateRender = enterUpdateRender\n        .attr(\"pointer-events\", \"none\")\n        .transition(this._transition).transition().delay(100)\n        .attr(\"pointer-events\", this._pointerEvents);\n    }\n\n    enterUpdateRender\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    // Makes the exit state of the group selection accessible.\n    const exit = this._exit = update.exit();\n    if (this._duration) exit.transition().delay(this._duration).remove();\n    else exit.remove();\n\n    this._renderImage();\n    this._renderLabels();\n\n    this._hoverGroup = elem(`g.d3plus-${this._name}-hover`, {parent: this._group});\n    this._activeGroup = elem(`g.d3plus-${this._name}-active`, {parent: this._group});\n\n    const hitAreas = this._group.selectAll(\".d3plus-HitArea\")\n      .data(this._hitArea && Object.keys(this._on).length ? data : [], key);\n\n    hitAreas.order()\n      .call(this._applyTransform.bind(this));\n\n    const isLine = this._name === \"Line\";\n\n    if (isLine) {\n      const curve = this._curve.bind(this)(this.config());\n      isLine && this._path\n        .curve(paths[`curve${curve.charAt(0).toUpperCase()}${curve.slice(1)}`])\n        .defined(this._defined)\n        .x(this._x)\n        .y(this._y);\n    }\n\n    const hitEnter = hitAreas.enter().append(isLine ? \"path\" : \"rect\")\n      .attr(\"class\", (d, i) => `d3plus-HitArea d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .attr(\"fill\", \"black\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"pointer-events\", \"painted\")\n      .attr(\"opacity\", 0)\n      .call(this._applyTransform.bind(this));\n\n    const that = this;\n\n    const hitUpdates = hitAreas.merge(hitEnter)\n      .each(function(d) {\n        const i = that._data.indexOf(d);\n        const h = that._hitArea(d, i, that._aes(d, i));\n        return h && !(that._name === \"Line\" && parseFloat(that._strokeWidth(d, i)) > 10) ? select(this).call(attrize, h) : select(this).remove();\n      });\n\n    hitAreas.exit().remove();\n\n    this._applyEvents(this._hitArea ? hitUpdates : enterUpdate);\n\n    setTimeout(() => {\n      if (this._active) this._renderActive();\n      else if (this._hover) this._renderHover();\n      if (callback) callback();\n    }, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n\n    if (!arguments.length || _ === undefined) return this._active;\n    this._active = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderActive();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc When shapes are active, this is the opacity of any shape that is not active.\n      @param {Number} *value* = 0.25\n      @chainable\n  */\n  activeOpacity(_) {\n    return arguments.length ? (this._activeOpacity = _, this) : this._activeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to active shapes.\n      @param {Object} *value*\n      @chainable\n  */\n  activeStyle(_) {\n    return arguments.length ? (this._activeStyle = assign({}, this._activeStyle, _), this) : this._activeStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the aria-label attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  ariaLabel(_) {\n    return _ !== undefined\n      ? (this._ariaLabel = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._ariaLabel;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the background-image accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = false]\n      @chainable\n  */\n  backgroundImage(_) {\n    return arguments.length\n      ? (this._backgroundImage = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._backgroundImage;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length\n      ? (this._data = _, this)\n      : this._data;\n  }\n\n  /**\n      @memberof Shape\n      @desc Determines if either the X or Y position is discrete along a Line, which helps in determining the nearest data point on a line for a hit area event.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length\n      ? (this._duration = _, this)\n      : this._duration;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the fill accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  fill(_) {\n    return arguments.length\n      ? (this._fill = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fill;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"fill-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  fillOpacity(_) {\n    return arguments.length\n      ? (this._fillOpacity = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fillOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n\n    if (!arguments.length || _ === void 0) return this._hover;\n    this._hover = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderHover();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to hovered shapes.\n      @param {Object} *value*\n      @chainable\n   */\n  hoverStyle(_) {\n    return arguments.length ? (this._hoverStyle = assign({}, this._hoverStyle, _), this) : this._hoverStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the hover opacity to the specified function and returns the current class instance.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  hoverOpacity(_) {\n    return arguments.length ? (this._hoverOpacity = _, this) : this._hoverOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the mouse hit area to the specified function and returns the current class instance. If *bounds* is not specified, returns the current mouse hit area accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  hitArea(_) {\n    return arguments.length ? (this._hitArea = typeof _ === \"function\" ? _ : constant(_), this) : this._hitArea;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the label bounds to the specified function and returns the current class instance. If *bounds* is not specified, returns the current inner bounds accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`. If an array is returned from the function, each value will be used in conjunction with each label.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  labelBounds(_) {\n    return arguments.length ? (this._labelBounds = typeof _ === \"function\" ? _ : constant(_), this) : this._labelBounds;\n  }\n\n  /**\n      @memberof Shape\n      @desc A pass-through to the config method of the TextBox class used to create a shape's labels.\n      @param {Object} [*value*]\n      @chainable\n  */\n  labelConfig(_) {\n    return arguments.length ? (this._labelConfig = assign(this._labelConfig, _), this) : this._labelConfig;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the pointerEvents accessor to the specified function or string and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n   */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the role attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  role(_) {\n    return _ !== undefined\n      ? (this._role = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._role;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the rotate accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n   */\n  rotate(_) {\n    return arguments.length ? (this._rotate = typeof _ === \"function\" ? _ : constant(_), this) : this._rotate;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  rx(_) {\n    return arguments.length ? (this._rx = typeof _ === \"function\" ? _ : constant(_), this) : this._rx;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  ry(_) {\n    return arguments.length ? (this._ry = typeof _ === \"function\" ? _ : constant(_), this) : this._ry;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the scale accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = typeof _ === \"function\" ? _ : constant(_), this) : this._scale;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the shape-rendering accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"geometricPrecision\"]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  shapeRendering(_) {\n    return arguments.length ? (this._shapeRendering = typeof _ === \"function\" ? _ : constant(_), this) : this._shapeRendering;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the sort comparator to the specified function and returns the current class instance.\n      @param {false|Function} [*value* = []]\n      @chainable\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  stroke(_) {\n    return arguments.length ? (this._stroke = typeof _ === \"function\" ? _ : constant(_), this) : this._stroke;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-dasharray\" attribute for the shapes.\n      @param {Function|String} [*value* = \"1\"]\n      @chainable\n  */\n  strokeDasharray(_) {\n    return arguments.length ? (this._strokeDasharray = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeDasharray;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-linecap\" attribute for the shapes. Accepted values are `\"butt\"`, `\"round\"`, and `\"square\"`.\n      @param {Function|String} [*value* = \"butt\"]\n      @chainable\n  */\n  strokeLinecap(_) {\n    return arguments.length ? (this._strokeLinecap = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeLinecap;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  strokeOpacity(_) {\n    return arguments.length ? (this._strokeOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke-width accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  strokeWidth(_) {\n    return arguments.length ? (this._strokeWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeWidth;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the text-anchor accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  textAnchor(_) {\n    return arguments.length ? (this._textAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._textAnchor;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vector-effect accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"non-scaling-stroke\"]\n      @chainable\n  */\n  vectorEffect(_) {\n    return arguments.length ? (this._vectorEffect = typeof _ === \"function\" ? _ : constant(_), this) : this._vectorEffect;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vertical alignment accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = typeof _ === \"function\" ? _ : constant(_), this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function lineIntersection\n    @desc Finds the intersection point (if there is one) of the lines p1q1 and p2q2.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  // allow for some margins due to numerical errors\n  const eps = 1e-9;\n\n  // find the intersection point between the two infinite lines\n  const dx1 = p1[0] - q1[0],\n        dx2 = p2[0] - q2[0],\n        dy1 = p1[1] - q1[1],\n        dy2 = p2[1] - q2[1];\n\n  const denom = dx1 * dy2 - dy1 * dx2;\n\n  if (Math.abs(denom) < eps) return null;\n\n  const cross1 = p1[0] * q1[1] - p1[1] * q1[0],\n        cross2 = p2[0] * q2[1] - p2[1] * q2[0];\n\n  const px = (cross1 * dx2 - cross2 * dx1) / denom,\n        py = (cross1 * dy2 - cross2 * dy1) / denom;\n\n  return [px, py];\n\n}\n","/**\n    @function segmentBoxContains\n    @desc Checks whether a point is inside the bounding box of a line segment.\n    @param {Array} s1 The first point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} s2 The second point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} p The point to be checked, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(s1, s2, p) {\n\n  const eps = 1e-9, [px, py] = p;\n\n  return !(px < Math.min(s1[0], s2[0]) - eps || px > Math.max(s1[0], s2[0]) + eps ||\n           py < Math.min(s1[1], s2[1]) - eps || py > Math.max(s1[1], s2[1]) + eps);\n\n}\n","import lineIntersection from \"./lineIntersection.js\";\nimport segmentBoxContains from \"./segmentBoxContains.js\";\n\n/**\n    @function segmentsIntersect\n    @desc Checks whether the line segments p1q1 && p2q2 intersect.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  const p = lineIntersection(p1, q1, p2, q2);\n  if (!p) return false;\n  return segmentBoxContains(p1, q1, p) && segmentBoxContains(p2, q2, p);\n\n}\n","import {polygonContains} from \"d3-polygon\";\n\nimport segmentsIntersect from \"./segmentsIntersect.js\";\n\n/**\n    @function polygonInside\n    @desc Checks if one polygon is inside another polygon.\n    @param {Array} polyA An Array of `[x, y]` points to be used as the inner polygon, checking if it is inside polyA.\n    @param {Array} polyB An Array of `[x, y]` points to be used as the containing polygon.\n    @returns {Boolean}\n*/\nexport default function(polyA, polyB) {\n\n  let iA = -1;\n  const nA = polyA.length;\n  const nB = polyB.length;\n  let bA = polyA[nA - 1];\n\n  while (++iA < nA) {\n\n    const aA = bA;\n    bA = polyA[iA];\n\n    let iB = -1;\n    let bB = polyB[nB - 1];\n    while (++iB < nB) {\n      const aB = bB;\n      bB = polyB[iB];\n      if (segmentsIntersect(aA, bA, aB, bB)) return false;\n    }\n  }\n\n  return polygonContains(polyB, polyA[0]);\n\n}\n","import lineIntersection from \"./lineIntersection.js\";\nimport segmentBoxContains from \"./segmentBoxContains.js\";\nimport pointDistanceSquared from \"./pointDistanceSquared.js\";\n\n/**\n    @function polygonRayCast\n    @desc Gives the two closest intersection points between a ray cast from a point inside a polygon. The two points should lie on opposite sides of the origin.\n    @param {Array} poly The polygon to test against, which should be an `[x, y]` formatted Array.\n    @param {Array} origin The origin point of the ray to be cast, which should be an `[x, y]` formatted Array.\n    @param {Number} [alpha = 0] The angle in radians of the ray.\n    @returns {Array} An array containing two values, the closest point on the left and the closest point on the right. If either point cannot be found, that value will be `null`.\n*/\nexport default function(poly, origin, alpha = 0) {\n\n  const eps = 1e-9;\n  origin = [origin[0] + eps * Math.cos(alpha), origin[1] + eps * Math.sin(alpha)];\n  const [x0, y0] = origin;\n  const shiftedOrigin = [x0 + Math.cos(alpha), y0 + Math.sin(alpha)];\n\n  let idx = 0;\n  if (Math.abs(shiftedOrigin[0] - x0) < eps) idx = 1;\n  let i = -1;\n  const n = poly.length;\n  let b = poly[n - 1];\n  let minSqDistLeft = Number.MAX_VALUE;\n  let minSqDistRight = Number.MAX_VALUE;\n  let closestPointLeft = null;\n  let closestPointRight = null;\n  while (++i < n) {\n    const a = b;\n    b = poly[i];\n    const p = lineIntersection(origin, shiftedOrigin, a, b);\n    if (p && segmentBoxContains(a, b, p)) {\n      const sqDist = pointDistanceSquared(origin, p);\n      if (p[idx] < origin[idx]) {\n        if (sqDist < minSqDistLeft) {\n          minSqDistLeft = sqDist;\n          closestPointLeft = p;\n        }\n      }\n      else if (p[idx] > origin[idx]) {\n        if (sqDist < minSqDistRight) {\n          minSqDistRight = sqDist;\n          closestPointRight = p;\n        }\n      }\n    }\n  }\n\n  return [closestPointLeft, closestPointRight];\n\n}\n","/**\n    @function pointRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} p The point to be rotated, which should always be an `[x, y]` formatted Array.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p, alpha, origin = [0, 0]) {\n\n  const cosAlpha = Math.cos(alpha),\n        sinAlpha = Math.sin(alpha),\n        xshifted = p[0] - origin[0],\n        yshifted = p[1] - origin[1];\n\n  return [\n    cosAlpha * xshifted - sinAlpha * yshifted + origin[0],\n    sinAlpha * xshifted + cosAlpha * yshifted + origin[1]\n  ];\n\n}\n","import pointRotate from \"./pointRotate.js\";\n\n/**\n    @function polygonRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} poly The polygon to be rotated, which should be an Array of `[x, y]` values.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default (poly, alpha, origin = [0, 0]) => poly.map(p => pointRotate(p, alpha, origin));\n","import pointDistanceSquared from \"./pointDistanceSquared.js\";\n\n/**\n    @desc square distance from a point to a segment\n    @param {Array} point\n    @param {Array} segmentAnchor1\n    @param {Array} segmentAnchor2\n    @private\n*/\nfunction getSqSegDist(p, p1, p2) {\n\n  let x = p1[0],\n      y = p1[1];\n\n  let dx = p2[0] - x,\n      dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n\n    const t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n\n    }\n    else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n\n}\n\n/**\n    @desc basic distance-based simplification\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyRadialDist(poly, sqTolerance) {\n\n  let point,\n      prevPoint = poly[0];\n\n  const newPoints = [prevPoint];\n\n  for (let i = 1, len = poly.length; i < len; i++) {\n    point = poly[i];\n\n    if (pointDistanceSquared(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\n/**\n    @param {Array} polygon\n    @param {Number} first\n    @param {Number} last\n    @param {Number} sqTolerance\n    @param {Array} simplified\n    @private\n*/\nfunction simplifyDPStep(poly, first, last, sqTolerance, simplified) {\n\n  let index, maxSqDist = sqTolerance;\n\n  for (let i = first + 1; i < last; i++) {\n    const sqDist = getSqSegDist(poly[i], poly[first], poly[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(poly, first, index, sqTolerance, simplified);\n    simplified.push(poly[index]);\n    if (last - index > 1) simplifyDPStep(poly, index, last, sqTolerance, simplified);\n  }\n}\n\n/**\n    @desc simplification using Ramer-Douglas-Peucker algorithm\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyDouglasPeucker(poly, sqTolerance) {\n  const last = poly.length - 1;\n\n  const simplified = [poly[0]];\n  simplifyDPStep(poly, 0, last, sqTolerance, simplified);\n  simplified.push(poly[last]);\n\n  return simplified;\n}\n\n/**\n    @function largestRect\n    @desc Simplifies the points of a polygon using both the Ramer-Douglas-Peucker algorithm and basic distance-based simplification. Adapted to an ES6 module from the excellent [Simplify.js](http://mourner.github.io/simplify-js/).\n    @author Vladimir Agafonkin\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Number} [tolerance = 1] Affects the amount of simplification (in the same metric as the point coordinates).\n    @param {Boolean} [highestQuality = false] Excludes distance-based preprocessing step which leads to highest quality simplification but runs ~10-20 times slower.\n\n*/\nexport default (poly, tolerance = 1, highestQuality = false) => {\n\n  if (poly.length <= 2) return poly;\n\n  const sqTolerance = tolerance * tolerance;\n\n  poly = highestQuality ? poly : simplifyRadialDist(poly, sqTolerance);\n  poly = simplifyDouglasPeucker(poly, sqTolerance);\n\n  return poly;\n\n};\n","import {extent, merge, range} from \"d3-array\";\nimport {polygonArea, polygonCentroid, polygonContains} from \"d3-polygon\";\n\nimport polygonInside from \"./polygonInside.js\";\nimport polygonRayCast from \"./polygonRayCast.js\";\nimport polygonRotate from \"./polygonRotate.js\";\nimport simplify from \"./simplify.js\";\nimport pointDistanceSquared from \"./pointDistanceSquared.js\";\n\n// Algorithm constants\nconst aspectRatioStep = 0.5; // step size for the aspect ratio\nconst angleStep = 5; // step size for angles (in degrees); has linear impact on running time\n\nconst polyCache = {};\n\n/**\n    @typedef {Object} LargestRect\n    @desc The returned Object of the largestRect function.\n    @property {Number} width The width of the rectangle\n    @property {Number} height The height of the rectangle\n    @property {Number} cx The x coordinate of the rectangle's center\n    @property {Number} cy The y coordinate of the rectangle's center\n    @property {Number} angle The rotation angle of the rectangle in degrees. The anchor of rotation is the center point.\n    @property {Number} area The area of the largest rectangle.\n    @property {Array} points An array of x/y coordinates for each point in the rectangle, useful for rendering paths.\n*/\n\n/**\n    @function largestRect\n    @author Daniel Smilkov [dsmilkov@gmail.com]\n    @desc An angle of zero means that the longer side of the polygon (the width) will be aligned with the x axis. An angle of 90 and/or -90 means that the longer side of the polygon (the width) will be aligned with the y axis. The value can be a number between -90 and 90 specifying the angle of rotation of the polygon, a string which is parsed to a number, or an array of numbers specifying the possible rotations of the polygon.\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Object} [options] An Object that allows for overriding various parameters of the algorithm.\n    @param {Number|String|Array} [options.angle = d3.range(-90, 95, 5)] The allowed rotations of the final rectangle.\n    @param {Number|String|Array} [options.aspectRatio] The ratio between the width and height of the rectangle. The value can be a number, a string which is parsed to a number, or an array of numbers specifying the possible aspect ratios of the final rectangle.\n    @param {Number} [options.maxAspectRatio = 15] The maximum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.minAspectRatio = 1] The minimum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.nTries = 20] The number of randomly drawn points inside the polygon which the algorithm explores as possible center points of the maximal rectangle.\n    @param {Number} [options.minHeight = 0] The minimum height of the rectangle.\n    @param {Number} [options.minWidth = 0] The minimum width of the rectangle.\n    @param {Number} [options.tolerance = 0.02] The simplification tolerance factor, between 0 and 1. A larger tolerance corresponds to more extensive simplification.\n    @param {Array} [options.origin] The center point of the rectangle. If specified, the rectangle will be fixed at that point, otherwise the algorithm optimizes across all possible points. The given value can be either a two dimensional array specifying the x and y coordinate of the origin or an array of two dimensional points specifying multiple possible center points of the rectangle.\n    @param {Boolean} [options.cache] Whether or not to cache the result, which would be used in subsequent calculations to preserve consistency and speed up calculation time.\n    @return {LargestRect}\n*/\nexport default function(poly, options = {}) {\n\n  if (poly.length < 3) {\n    if (options.verbose) console.error(\"polygon has to have at least 3 points\", poly);\n    return null;\n  }\n\n  // For visualization debugging purposes\n  const events = [];\n\n  // User's input normalization\n  options = Object.assign({\n    angle: range(-90, 90 + angleStep, angleStep),\n    cache: true,\n    maxAspectRatio: 15,\n    minAspectRatio: 1,\n    minHeight: 0,\n    minWidth: 0,\n    nTries: 20,\n    tolerance: 0.02,\n    verbose: false\n  }, options);\n\n  const angles = options.angle instanceof Array ? options.angle\n    : typeof options.angle === \"number\" ? [options.angle]\n    : typeof options.angle === \"string\" && !isNaN(options.angle) ? [Number(options.angle)]\n    : [];\n\n  const aspectRatios = options.aspectRatio instanceof Array ? options.aspectRatio\n    : typeof options.aspectRatio === \"number\" ? [options.aspectRatio]\n    : typeof options.aspectRatio === \"string\" && !isNaN(options.aspectRatio) ? [Number(options.aspectRatio)]\n    : [];\n\n  const origins = options.origin && options.origin instanceof Array\n    ? options.origin[0] instanceof Array ? options.origin\n    : [options.origin] : [];\n\n  let cacheString;\n  if (options.cache) {\n    cacheString = merge(poly).join(\",\");\n    cacheString += `-${options.minAspectRatio}`;\n    cacheString += `-${options.maxAspectRatio}`;\n    cacheString += `-${options.minHeight}`;\n    cacheString += `-${options.minWidth}`;\n    cacheString += `-${angles.join(\",\")}`;\n    cacheString += `-${origins.join(\",\")}`;\n    if (polyCache[cacheString]) return polyCache[cacheString];\n  }\n\n  const area = Math.abs(polygonArea(poly)); // take absolute value of the signed area\n  if (area === 0) {\n    if (options.verbose) console.error(\"polygon has 0 area\", poly);\n    return null;\n  }\n  // get the width of the bounding box of the original polygon to determine tolerance\n  let [minx, maxx] = extent(poly, d => d[0]);\n  let [miny, maxy] = extent(poly, d => d[1]);\n\n  // simplify polygon\n  const tolerance = Math.min(maxx - minx, maxy - miny) * options.tolerance;\n\n  if (tolerance > 0) poly = simplify(poly, tolerance);\n  if (options.events) events.push({type: \"simplify\", poly});\n\n  // get the width of the bounding box of the simplified polygon\n  [minx, maxx] = extent(poly, d => d[0]);\n  [miny, maxy] = extent(poly, d => d[1]);\n  const [boxWidth, boxHeight] = [maxx - minx, maxy - miny];\n\n  // discretize the binary search for optimal width to a resolution of this times the polygon width\n  const widthStep = Math.min(boxWidth, boxHeight) / 50;\n\n  // populate possible center points with random points inside the polygon\n  if (!origins.length) {\n    // get the centroid of the polygon\n    const centroid = polygonCentroid(poly);\n    if (!isFinite(centroid[0])) {\n      if (options.verbose) console.error(\"cannot find centroid\", poly);\n      return null;\n    }\n    if (polygonContains(poly, centroid)) origins.push(centroid);\n\n    let nTries = options.nTries;\n    // get few more points inside the polygon\n    while (nTries) {\n      const rndX = Math.random() * boxWidth + minx;\n      const rndY = Math.random() * boxHeight + miny;\n      const rndPoint = [rndX, rndY];\n      if (polygonContains(poly, rndPoint)) {\n        origins.push(rndPoint);\n      }\n      nTries--;\n    }\n  }\n  if (options.events) events.push({type: \"origins\", points: origins});\n  let maxArea = 0;\n  let maxRect = null;\n\n  for (let ai = 0; ai < angles.length; ai++) {\n    const angle = angles[ai];\n    const angleRad = -angle * Math.PI / 180;\n    if (options.events) events.push({type: \"angle\", angle});\n    for (let i = 0; i < origins.length; i++) {\n      const origOrigin = origins[i];\n      // generate improved origins\n      const [p1W, p2W] = polygonRayCast(poly, origOrigin, angleRad);\n      const [p1H, p2H] = polygonRayCast(poly, origOrigin, angleRad + Math.PI / 2);\n      const modifOrigins = [];\n      if (p1W && p2W) modifOrigins.push([(p1W[0] + p2W[0]) / 2, (p1W[1] + p2W[1]) / 2]); // average along with width axis\n      if (p1H && p2H) modifOrigins.push([(p1H[0] + p2H[0]) / 2, (p1H[1] + p2H[1]) / 2]); // average along with height axis\n\n      if (options.events) events.push({type: \"modifOrigin\", idx: i, p1W, p2W, p1H, p2H, modifOrigins});\n\n      for (let i = 0; i < modifOrigins.length; i++) {\n\n        const origin = modifOrigins[i];\n\n        if (options.events) events.push({type: \"origin\", cx: origin[0], cy: origin[1]});\n\n        const [p1W, p2W] = polygonRayCast(poly, origin, angleRad);\n        if (p1W === null || p2W === null) continue;\n        const minSqDistW = Math.min(pointDistanceSquared(origin, p1W), pointDistanceSquared(origin, p2W));\n        const maxWidth = 2 * Math.sqrt(minSqDistW);\n\n        const [p1H, p2H] = polygonRayCast(poly, origin, angleRad + Math.PI / 2);\n        if (p1H === null || p2H === null) continue;\n        const minSqDistH = Math.min(pointDistanceSquared(origin, p1H), pointDistanceSquared(origin, p2H));\n        const maxHeight = 2 * Math.sqrt(minSqDistH);\n\n        if (maxWidth * maxHeight < maxArea) continue;\n\n        let aRatios = aspectRatios;\n        if (!aRatios.length) {\n          const minAspectRatio = Math.max(options.minAspectRatio, options.minWidth / maxHeight, maxArea / (maxHeight * maxHeight));\n          const maxAspectRatio = Math.min(options.maxAspectRatio, maxWidth / options.minHeight, maxWidth * maxWidth / maxArea);\n          aRatios = range(minAspectRatio, maxAspectRatio + aspectRatioStep, aspectRatioStep);\n        }\n\n        for (let a = 0; a < aRatios.length; a++) {\n\n          const aRatio = aRatios[a];\n\n          // do a binary search to find the max width that works\n          let left = Math.max(options.minWidth, Math.sqrt(maxArea * aRatio));\n          let right = Math.min(maxWidth, maxHeight * aRatio);\n          if (right * maxHeight < maxArea) continue;\n\n          if (options.events && right - left >= widthStep) events.push({type: \"aRatio\", aRatio});\n\n          while (right - left >= widthStep) {\n            const width = (left + right) / 2;\n            const height = width / aRatio;\n            const [cx, cy] = origin;\n            let rectPoly = [\n              [cx - width / 2, cy - height / 2],\n              [cx + width / 2, cy - height / 2],\n              [cx + width / 2, cy + height / 2],\n              [cx - width / 2, cy + height / 2]\n            ];\n            rectPoly = polygonRotate(rectPoly, angleRad, origin);\n            const insidePoly = polygonInside(rectPoly, poly);\n            if (insidePoly) {\n              // we know that the area is already greater than the maxArea found so far\n              maxArea = width * height;\n              rectPoly.push(rectPoly[0]);\n              maxRect = {area: maxArea, cx, cy, width, height, angle: -angle, points: rectPoly};\n              left = width; // increase the width in the binary search\n            }\n            else {\n              right = width; // decrease the width in the binary search\n            }\n            if (options.events) events.push({type: \"rectangle\", areaFraction: width * height / area, cx, cy, width, height, angle, insidePoly});\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  if (options.cache) {\n    polyCache[cacheString] = maxRect;\n  }\n\n  return options.events ? Object.assign(maxRect || {}, {events}) : maxRect;\n\n}\n","import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {accessor, constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\nimport largestRect from \"../geom/largestRect.js\";\n\n/**\n    @class Area\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Area extends Shape {\n\n  /**\n      @memberof Area\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = constant(\"linear\");\n    this._defined = () => true;\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points);\n      if (!r) return null;\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2 - this._x(d, i), y: r.cy - r.height / 2 - this._y(d, i)};\n    };\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Area\";\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Area\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d) {\n    const values = d.values.slice().sort((a, b) => this._y1 ? this._x(a) - this._x(b) : this._y(a) - this._y(b));\n    const points1 = values.map((v, z) => [this._x0(v, z), this._y0(v, z)]);\n    const points2 = values.reverse().map((v, z) => this._y1 ? [this._x(v, z), this._y1(v, z)] : [this._x1(v, z), this._y(v, z)]);\n    let points = points1.concat(points2);\n    if (points1[0][1] > points2[0][1]) points = points.reverse();\n    points.push(points[0]);\n    return {points};\n  }\n\n  /**\n      @memberof Area\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const areas = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values.map(this._x)\n        .concat(d.values.map(this._x0))\n        .concat(this._x1 ? d.values.map(this._x1) : [])\n      );\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values.map(this._y)\n        .concat(d.values.map(this._y0))\n        .concat(this._y1 ? d.values.map(this._y1) : [])\n      );\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    areas.key = d => d.key;\n    return areas;\n\n  }\n\n  /**\n      @memberof Area\n      @desc Draws the area polygons.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const userCurve = this._curve.bind(this)(this.config());\n    const curve = paths[`curve${userCurve.charAt(0).toUpperCase()}${userCurve.slice(1)}`];\n\n    const path = this._path = paths.area()\n      .defined(this._defined)\n      .curve(curve)\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    const exitPath = paths.area()\n      .defined(d => d)\n      .curve(curve)\n      .x(this._x).y(this._y)\n      .x0((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .x1((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .y0((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i))\n      .y1((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i));\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => exitPath(d.values))\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), path(d.values));\n        });\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    this._exit.select(\"path\").transition(this._transition)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), exitPath(d.values));\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {Function|String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = typeof _ === \"function\" ? _ : constant(_), this) : this._curve;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (!arguments.length) return this._x;\n    this._x = typeof _ === \"function\" ? _ : constant(_);\n    this._x0 = this._x;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (!arguments.length) return this._y;\n    this._y = typeof _ === \"function\" ? _ : constant(_);\n    this._y0 = this._y;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\n\n/**\n    @class Bar\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Bar extends Shape {\n\n  /**\n      @memberof Bar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super(\"rect\");\n\n    this._name = \"Bar\";\n    this._height = constant(10);\n    this._labelBounds = (d, i, s) => ({\n      width: s.width,\n      height: s.height,\n      x: this._x1 !== null ? this._getX(d, i) : -s.width / 2,\n      y: this._x1 === null ? this._getY(d, i) : -s.height / 2\n    });\n    this._width = constant(10);\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Draws the bars.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n      .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n      .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n      .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n        .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n        .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n        .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {height: this._getHeight(d, i), width: this._getWidth(d, i)};\n  }\n\n  /**\n      @memberof Bar\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._getWidth(d, i))\n      .attr(\"height\", (d, i) => this._getHeight(d, i))\n      .attr(\"x\", (d, i) => this._x1 !== null ? this._getX(d, i) : -this._getWidth(d, i) / 2)\n      .attr(\"y\", (d, i) => this._x1 === null ? this._getY(d, i) : -this._getHeight(d, i) / 2);\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the height of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getHeight(d, i) {\n    if (this._x1 !== null) return this._height(d, i);\n    return Math.abs(this._y1(d, i) - this._y(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the width of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getWidth(d, i) {\n    if (this._x1 === null) return this._width(d, i);\n    return Math.abs(this._x1(d, i) - this._x(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the x of the <rect> by assessing the x and width properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getX(d, i) {\n    const w = this._x1 === null ? this._x(d, i) : this._x1(d, i) - this._x(d, i);\n    if (w < 0) return w;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the y of the <rect> by assessing the y and height properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getY(d, i) {\n    const h = this._x1 !== null ? this._y(d, i) : this._y1(d, i) - this._y(d, i);\n    if (h < 0) return h;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, assign, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\n\n/**\n    @class Circle\n    @extends Shape\n    @desc Creates SVG circles based on an array of data.\n*/\nexport default class Circle extends Shape {\n\n  /**\n      @memberof Circle\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"circle\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.r * 1.5, height: s.r * 1.5, x: -s.r * 0.75, y: -s.r * 0.75});\n    this._labelConfig = assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Circle\";\n    this._r = accessor(\"r\");\n  }\n\n  /**\n      @memberof Circle\n      @desc Provides the default positioning to the <rect> elements.\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"r\", (d, i) => this._r(d, i))\n      .attr(\"x\", (d, i) => -this._r(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._r(d, i) / 2);\n  }\n\n  /**\n      @memberof Circle\n      @desc Draws the circles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0)\n        .transition(this._transition)\n          .call(this._applyPosition.bind(this));\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0);\n    }\n    else {\n      enter.call(this._applyPosition.bind(this));\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Circle\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {r: this._r(d, i)};\n  }\n\n  /**\n      @memberof Circle\n      @desc If *value* is specified, sets the radius accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.r;\n}\n  */\n  r(_) {\n    return arguments.length ? (this._r = typeof _ === \"function\" ? _ : constant(_), this) : this._r;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\n\n/**\n    @class Rect\n    @extends Shape\n    @desc Creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-shape/getting-started/) for help getting started using the rectangle generator.\n*/\nexport default class Rect extends Shape {\n\n  /**\n      @memberof Rect\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"rect\");\n    this._height = accessor(\"height\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2});\n    this._name = \"Rect\";\n    this._width = accessor(\"width\");\n  }\n\n  /**\n      @memberof Rect\n      @desc Draws the rectangles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", 0).attr(\"height\", 0)\n      .attr(\"x\", 0).attr(\"y\", 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", 0).attr(\"height\", 0)\n        .attr(\"x\", 0).attr(\"y\", 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Rect\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {width: this._width(d, i), height: this._height(d, i)};\n  }\n\n  /**\n      @memberof Rect\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => -this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._height(d, i) / 2);\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n}\n","import {extent, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\n\n/**\n    @class Line\n    @extends Shape\n    @desc Creates SVG lines based on an array of data.\n*/\nexport default class Line extends Shape {\n\n  /**\n      @memberof Line\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = constant(\"linear\");\n    this._defined = d => d;\n    this._fill = constant(\"none\");\n    this._hitArea = constant({\n      \"d\": d => this._path(d.values),\n      \"fill\": \"none\",\n      \"stroke-width\": 10,\n      \"transform\": null\n    });\n    this._name = \"Line\";\n    this._path = paths.line();\n    this._stroke = constant(\"black\");\n    this._strokeWidth = constant(1);\n\n  }\n\n  /**\n      @memberof Line\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const lines = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values, this._x);\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values, this._y);\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    lines.key = d => d.key;\n    return lines;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Draws the lines.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const that = this;\n\n    /**\n        @desc Calculates the stroke-dasharray used for animations\n        @param {Object} *d* data point\n        @private\n    */\n    function calculateStrokeDashArray(d) {\n\n      d.initialLength = this.getTotalLength();\n\n      let strokeArray = that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0]))\n        .split(\" \").map(Number);\n\n      if (strokeArray.length === 1 && strokeArray[0] === 0) strokeArray = [d.initialLength];\n      else if (strokeArray.length === 1) strokeArray.push(strokeArray[0]);\n      else if (strokeArray.length % 2) strokeArray = strokeArray.concat(strokeArray);\n\n      const newStrokeArray = [];\n      let strokeLength = 0;\n      while (strokeLength < d.initialLength) {\n        for (let i = 0; i < strokeArray.length; i++) {\n          const num = strokeArray[i];\n          strokeLength += num;\n          newStrokeArray.push(num);\n          if (strokeLength >= d.initialLength) break;\n        }\n      }\n\n      if (newStrokeArray.length > 1 && newStrokeArray.length % 2) newStrokeArray.pop();\n      newStrokeArray[newStrokeArray.length - 1] += d.initialLength - sum(newStrokeArray);\n      if (newStrokeArray.length % 2 === 0) newStrokeArray.push(0);\n      d.initialStrokeArray = newStrokeArray.join(\" \");\n\n    }\n\n    const userCurve = this._curve.bind(this)(this.config());\n    const curve = paths[`curve${userCurve.charAt(0).toUpperCase()}${userCurve.slice(1)}`];\n\n    this._path\n      .curve(curve)\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    const enter = this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => this._path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update.select(\"path\")\n      .attr(\"stroke-dasharray\", d => that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0])));\n\n    if (this._duration) {\n      enter\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .attr(\"stroke-dashoffset\", d => d.initialLength)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", 0);\n      update = update.transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), that._path(d.values));\n        });\n      this._exit.selectAll(\"path\")\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", d => -d.initialLength);\n\n    }\n    else {\n      update = update\n        .attr(\"d\", d => that._path(d.values));\n    }\n\n    update\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .call(this._applyStyle.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: d.values.map(p => [this._x(p, i), this._y(p, i)])};\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {Function|String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = typeof _ === \"function\" ? _ : constant(_), this) : this._curve;\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n}\n","import {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {nest} from \"d3-collection\";\n\nimport Circle from \"./Circle.js\";\nimport Line from \"./Line.js\";\nimport Rect from \"./Rect.js\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Whisker\n    @extends BaseClass\n    @desc Creates SVG whisker based on an array of data.\n*/\nexport default class Whisker extends BaseClass {\n\n  /**\n      @memberof Whisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._endpoint = accessor(\"endpoint\", \"Rect\");\n    this._endpointConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      }\n    };\n    this._length = accessor(\"length\", 25);\n    this._lineConfig = {};\n    this._orient = accessor(\"orient\", \"top\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Draws the whisker.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const lineData = [];\n    this._data.forEach((d, i) => {\n\n      const orient = this._orient(d, i);\n      const x = this._x(d, i);\n      const y = this._y(d, i);\n\n      let endpointX = x;\n      if (orient === \"left\") endpointX -= this._length(d, i);\n      else if (orient === \"right\") endpointX += this._length(d, i);\n\n      let endpointY = y;\n      if (orient === \"top\") endpointY -= this._length(d, i);\n      else if (orient === \"bottom\") endpointY += this._length(d, i);\n\n      lineData.push({__d3plus__: true, data: d, i, id: i, x, y});\n      lineData.push({__d3plus__: true, data: d, i, id: i, x: endpointX, y: endpointY});\n    });\n\n    // Draw whisker line.\n    this._line = new Line()\n      .data(lineData)\n      .select(elem(\"g.d3plus-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._lineConfig, \"shape\"))\n      .render(callback);\n\n    const whiskerData = this._data.map((d, i) => {\n\n      const dataObj = {};\n      dataObj.__d3plus__ = true;\n      dataObj.data = d;\n      dataObj.i = i;\n      dataObj.endpoint = this._endpoint(d, i);\n      dataObj.length = this._length(d, i);\n      dataObj.orient = this._orient(d, i);\n\n      let endpointX = this._x(d, i);\n      if (dataObj.orient === \"left\") endpointX -= dataObj.length;\n      else if (dataObj.orient === \"right\") endpointX += dataObj.length;\n\n      let endpointY = this._y(d, i);\n      if (dataObj.orient === \"top\") endpointY -= dataObj.length;\n      else if (dataObj.orient === \"bottom\") endpointY += dataObj.length;\n\n      dataObj.x = endpointX;\n      dataObj.y = endpointY;\n\n      return dataObj;\n\n    });\n\n    // Draw whisker endpoint.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.endpoint)\n      .entries(whiskerData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Whisker-Endpoint-${shapeName}`, {parent: this._select}).node())\n          .config({\n            height: d => d.orient === \"top\" || d.orient === \"bottom\" ? 5 : 20,\n            width: d => d.orient === \"top\" || d.orient === \"bottom\" ? 20 : 5\n          })\n          .config(configPrep.bind(this)(this._endpointConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._line) this._line.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the endpoint accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  endpoint(_) {\n    return arguments.length ? (this._endpoint = typeof _ === \"function\" ? _ : constant(_), this) : this._endpoint;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for each endpoint and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  endpointConfig(_) {\n    return arguments.length ? (this._endpointConfig = assign(this._endpointConfig, _), this) : this._endpointConfig;\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._line) this._line.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the length accessor for whisker and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  length(_) {\n    return arguments.length ? (this._length = typeof _ === \"function\" ? _ : constant(_), this) : this._length;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for line shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  lineConfig(_) {\n    return arguments.length ? (this._lineConfig = assign(this._lineConfig, _), this) : this._lineConfig;\n  }\n  \n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"top\"] Accepts \"top\", \"right\", \"bottom\" or \"left\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n    @memberof Whisker\n    @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n    @param {Function|Number} [*value*]\n    @chainable\n    @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","import {max, min, quantile} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, merge, elem} from \"d3plus-common\";\n\nimport Circle from \"./Circle.js\";\nimport Rect from \"./Rect.js\";\nimport Whisker from \"./Whisker.js\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Box\n    @extends BaseClass\n    @desc Creates SVG box based on an array of data.\n*/\nexport default class Box extends BaseClass {\n\n  /**\n      @memberof Box\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._medianConfig = {\n      fill: constant(\"black\")\n    };\n    this._orient = accessor(\"orient\", \"vertical\");\n    this._outlier = accessor(\"outlier\", \"Circle\");\n    this._outlierConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      },\n      Rect: {\n        height: (d, i) => this._orient(d, i) === \"vertical\" ? 5 : 20,\n        width: (d, i) => this._orient(d, i) === \"vertical\" ? 20 : 5\n      }\n    };\n    this._rectConfig = {\n      fill: constant(\"white\"),\n      stroke: constant(\"black\"),\n      strokeWidth: constant(1)\n    };\n    this._rectWidth = constant(50);\n    this._whiskerConfig = {};\n    this._whiskerMode = [\"tukey\", \"tukey\"];\n    this._x = accessor(\"x\", 250);\n    this._y = accessor(\"y\", 250);\n\n  }\n\n  /**\n      @memberof Box\n      @desc Draws the Box.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render() {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const outlierData = [];\n\n    const filteredData = nest()\n      .key((d, i) => this._orient(d, i) === \"vertical\" ? this._x(d, i) : this._y(d, i))\n      .entries(this._data)\n      .map(d => {\n        d.data = merge(d.values);\n        d.i = this._data.indexOf(d.values[0]);\n        d.orient = this._orient(d.data, d.i);\n        const values = d.values.map(d.orient === \"vertical\" ? this._y : this._x);\n        values.sort((a, b) => a - b);\n\n        d.first = quantile(values, 0.25);\n        d.median = quantile(values, 0.50);\n        d.third = quantile(values, 0.75);\n\n        const mode = this._whiskerMode;\n\n        if (mode[0] === \"tukey\") {\n          d.lowerLimit = d.first - (d.third - d.first) * 1.5;\n          if (d.lowerLimit < min(values)) d.lowerLimit = min(values);\n        }\n        else if (mode[0] === \"extent\") d.lowerLimit = min(values);\n        else if (typeof mode[0] === \"number\") d.lowerLimit = quantile(values, mode[0]);\n\n        if (mode[1] === \"tukey\") {\n          d.upperLimit = d.third + (d.third - d.first) * 1.5;\n          if (d.upperLimit > max(values)) d.upperLimit = max(values);\n        }\n        else if (mode[1] === \"extent\") d.upperLimit = max(values);\n        else if (typeof mode[1] === \"number\") d.upperLimit = quantile(values, mode[1]);\n\n        const rectLength = d.third - d.first;\n\n        // Compute values for vertical orientation.\n        if (d.orient === \"vertical\") {\n          d.height = rectLength;\n          d.width = this._rectWidth(d.data, d.i);\n          d.x = this._x(d.data, d.i);\n          d.y = d.first + rectLength / 2;\n        }\n        else if (d.orient === \"horizontal\") {\n        // Compute values for horizontal orientation.\n          d.height = this._rectWidth(d.data, d.i);\n          d.width = rectLength;\n          d.x = d.first + rectLength / 2;\n          d.y = this._y(d.data, d.i);\n        }\n\n        // Compute data for outliers.\n        d.values.forEach((eachValue, index) => {\n          const value = d.orient === \"vertical\" ? this._y(eachValue, index) : this._x(eachValue, index);\n\n          if (value < d.lowerLimit || value > d.upperLimit) {\n            const dataObj = {};\n            dataObj.__d3plus__ = true;\n            dataObj.data = eachValue;\n            dataObj.i = index;\n            dataObj.outlier = this._outlier(eachValue, index);\n\n            if (d.orient === \"vertical\") {\n              dataObj.x = d.x;\n              dataObj.y = value;\n              outlierData.push(dataObj);\n            }\n            else if (d.orient === \"horizontal\") {\n              dataObj.y = d.y;\n              dataObj.x = value;\n              outlierData.push(dataObj);\n            }\n          }\n\n        });\n\n        d.__d3plus__ = true;\n\n        return d;\n      });\n\n    // Draw box.\n    this._box = new Rect()\n      .data(filteredData)\n      .x(d => d.x)\n      .y(d => d.y)\n      .select(elem(\"g.d3plus-Box\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._rectConfig, \"shape\"))\n      .render();\n\n    // Draw median.\n    this._median = new Rect()\n      .data(filteredData)\n      .x(d => d.orient === \"vertical\" ? d.x : d.median)\n      .y(d => d.orient === \"vertical\" ? d.median : d.y)\n      .height(d => d.orient === \"vertical\" ? 1 : d.height)\n      .width(d => d.orient === \"vertical\" ? d.width : 1)\n      .select(elem(\"g.d3plus-Box-Median\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._medianConfig, \"shape\"))\n      .render();\n\n    // Draw 2 lines using Whisker class.\n    // Construct coordinates for whisker startpoints and push it to the whiskerData.\n    const whiskerData = [];\n    filteredData.forEach((d, i) => {\n      const x = d.x;\n      const y = d.y;\n      const topLength = d.first - d.lowerLimit;\n      const bottomLength = d.upperLimit - d.third;\n\n      if (d.orient === \"vertical\") {\n        const topY = y - d.height / 2;\n        const bottomY = y + d.height / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x, y: topY, length: topLength, orient: \"top\"},\n          {__d3plus__: true, data: d, i, x, y: bottomY, length: bottomLength, orient: \"bottom\"}\n        );\n      }\n      else if (d.orient === \"horizontal\") {\n        const topX = x + d.width / 2;\n        const bottomX = x - d.width / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x: topX, y, length: bottomLength, orient: \"right\"},\n          {__d3plus__: true, data: d, i, x: bottomX, y, length: topLength, orient: \"left\"}\n        );\n      }\n\n    });\n\n    // Draw whiskers.\n    this._whisker = new Whisker()\n      .data(whiskerData)\n      .select(elem(\"g.d3plus-Box-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._whiskerConfig, \"shape\"))\n      .render();\n\n    // Draw outliers.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.outlier)\n      .entries(outlierData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Box-Outlier-${shapeName}`, {parent: this._select}).node())\n          .config(configPrep.bind(this)(this._outlierConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._box) this._box.active(_);\n    if (this._median) this._median.active(_);\n    if (this._whisker) this._whisker.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._box) this._box.hover(_);\n    if (this._median) this._median.hover(_);\n    if (this._whisker) this._whisker.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for median and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  medianConfig(_) {\n    return arguments.length ? (this._medianConfig = assign(this._medianConfig, _), this) : this._medianConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"vertical\"] Accepts \"vertical\" or \"horizontal\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the outlier accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  outlier(_) {\n    return arguments.length ? (this._outlier = typeof _ === \"function\" ? _ : constant(_), this) : this._outlier;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for each outlier point and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  outlierConfig(_) {\n    return arguments.length ? (this._outlierConfig = assign(this._outlierConfig, _), this) : this._outlierConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for rect shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  rectConfig(_) {\n    return arguments.length ? (this._rectConfig = assign(this._rectConfig, _), this) : this._rectConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  rectWidth(_) {\n    return arguments.length ? (this._rectWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._rectWidth;\n  }\n\n  /**\n      @memberof Box\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for whisker and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  whiskerConfig(_) {\n    return arguments.length ? (this._whiskerConfig = assign(this._whiskerConfig, _), this) : this._whiskerConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc Determines the value used for each whisker. Can be passed a single value to apply for both whiskers, or an Array of 2 values for the lower and upper whiskers (in that order). Accepted values are `\"tukey\"`, `\"extent\"`, or a Number representing a quantile.\n      @param {String|Number|String[]|Number[]} [*value* = \"tukey\"]\n      @chainable\n  */\n  whiskerMode(_) {\n    return arguments.length ? (this._whiskerMode = _ instanceof Array ? _ : [_, _], this) : this._whiskerMode;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : accessor(_), this) : this._x;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : accessor(_), this) : this._y;\n  }\n\n}\n","/**\n    @function path2polygon\n    @desc Transforms a path string into an Array of points.\n    @param {String} path An SVG string path, commonly the \"d\" property of a <path> element.\n    @param {Number} [segmentLength = 50] The length of line segments when converting curves line segments. Higher values lower computation time, but will result in curves that are more rigid.\n    @returns {Array}\n*/\nexport default (path, segmentLength = 50) => {\n\n  if (typeof document === \"undefined\") return [];\n\n  const svgPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n  svgPath.setAttribute(\"d\", path);\n\n  const len = svgPath.getTotalLength();\n  const NUM_POINTS = len / segmentLength < 10 ? len / 10 : len / segmentLength;\n\n  const points = [];\n  for (let i = 0; i < NUM_POINTS; i++) {\n    const pt = svgPath.getPointAtLength(i * len / (NUM_POINTS-1));\n    points.push([pt.x, pt.y]);\n  }\n  \n  return points;\n\n};\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape.js\";\nimport largestRect from \"../geom/largestRect.js\";\nimport path2polygon from \"../geom/path2polygon.js\";\n\n/**\n    @class Path\n    @extends Shape\n    @desc Creates SVG Paths based on an array of data.\n*/\nexport default class Path extends Shape {\n\n  /**\n      @memberof Path\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"path\");\n    this._d = accessor(\"path\");\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points, {angle: this._labelConfig.rotate ? this._labelConfig.rotate(d, i) : 0});\n      return r ? {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2, y: r.cy - r.height / 2} : false;\n    };\n    this._name = \"Path\";\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n  }\n\n  /**\n      @memberof Path\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: path2polygon(this._d(d, i))};\n  }\n\n  /**\n      @memberof Path\n      @desc Draws the paths.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .attr(\"d\", this._d)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"opacity\", 0)\n        .transition(this._transition)\n          .attr(\"opacity\", 1);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"opacity\", 0);\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .attr(\"d\", this._d);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Path\n      @desc If *value* is specified, sets the \"d\" attribute accessor to the specified function or number and returns the current class instance.\n      @param {Function|String} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.path;\n}\n  */\n  d(_) {\n    return arguments.length ? (this._d = typeof _ === \"function\" ? _ : constant(_), this) : this._d;\n  }\n\n}\n","const pi = Math.PI;\n\n/**\n    @function shapeEdgePoint\n    @desc Calculates the x/y position of a point at the edge of a shape, from the center of the shape, given a specified pixel distance and radian angle.\n    @param {Number} angle The angle, in radians, of the offset point.\n    @param {Number} distance The pixel distance away from the origin.\n    @returns {String} [shape = \"circle\"] The type of shape, which can be either \"circle\" or \"square\".\n*/\nexport default (angle, distance, shape = \"circle\") => {\n\n  if (angle < 0) angle = pi * 2 + angle;\n\n  if (shape === \"square\") {\n\n    const diagonal = 45 * (pi / 180);\n    let x = 0, y = 0;\n\n    if (angle < pi / 2) {\n      const tan = Math.tan(angle);\n      x += angle < diagonal ? distance : distance / tan;\n      y += angle < diagonal ? tan * distance : distance;\n    }\n    else if (angle <= pi) {\n      const tan = Math.tan(pi - angle);\n      x -= angle < pi - diagonal ? distance / tan : distance;\n      y += angle < pi - diagonal ? distance : tan * distance;\n    }\n    else if (angle < diagonal + pi) {\n      x -= distance;\n      y -= Math.tan(angle - pi) * distance;\n    }\n    else if (angle < 3 * pi / 2) {\n      x -= distance / Math.tan(angle - pi);\n      y -= distance;\n    }\n    else if (angle < 2 * pi - diagonal) {\n      x += distance / Math.tan(2 * pi - angle);\n      y -= distance;\n    }\n    else {\n      x += distance;\n      y -= Math.tan(2 * pi - angle) * distance;\n    }\n\n    return [x, y];\n\n  }\n  else if (shape === \"circle\") {\n    return [distance * Math.cos(angle), distance * Math.sin(angle)];\n  }\n  else return null;\n\n};\n"],"names":["Image","_duration","_height","accessor","_id","_opacity","constant","_pointerEvents","_select","_url","_width","_x","_y","callback","select","append","style","window","innerWidth","innerHeight","node","images","selectAll","data","_data","enter","attr","d","i","t","transition","duration","that","update","merge","each","image","link","fullAddress","indexOf","location","hostname","img","src","crossOrigin","onload","canvas","document","createElement","width","height","context","getContext","drawImage","toDataURL","exit","remove","setTimeout","_","arguments","length","p1","p2","dx","dy","Math","sqrt","pointDistanceSquared","Shape","tagName","_activeOpacity","_activeStyle","c","_fill","includes","_stroke","color","darker","s","_strokeWidth","_ariaLabel","_backgroundImage","_backgroundImageClass","_fillOpacity","_hoverOpacity","_hoverStyle","id","_label","_labelClass","TextBox","_labelConfig","fontColor","colorContrast","fontSize","padding","_name","_role","_rotate","_rx","_ry","_scale","_shapeRendering","_strokeDasharray","_strokeLinecap","_strokeOpacity","_tagName","_textAnchor","_vectorEffect","_verticalAlign","handler","events","Object","keys","_on","on","e","event","nested","values","calcPoint","_discrete","cursor","pointer","map","pointDistance","min","bind","undefined","elem","size","styleLogic","key","styleObject","hasOwnProperty","call","attrize","__d3plusShape__","translate","scale","rotate","method","_group","parentNode","parent","classed","__d3plus__","group","_active","_activeGroup","appendChild","className","baseVal","_applyStyle","_updateStyle","_hover","_hoverGroup","imageData","_update","_enter","forEach","datum","aes","_aes","r","url","x","y","push","opacity","_nestWrapper","pointerEvents","render","labelData","labels","_labelBounds","bounds","constructor","Array","l","b","assign","labelConfig","angle","rotateAnchor","text","fontOpacity","config","configPrep","_transition","_uuid","_dataFilter","_sort","sort","a","removeChild","order","_applyTransform","strip","enterUpdate","enterUpdateRender","delay","_exit","_renderImage","_renderLabels","hitAreas","_hitArea","isLine","curve","_curve","_path","paths","charAt","toUpperCase","slice","defined","_defined","hitEnter","hitUpdates","h","parseFloat","_applyEvents","_renderActive","_renderHover","BaseClass","q1","q2","eps","dx1","dx2","dy1","dy2","denom","abs","cross1","cross2","px","py","s1","s2","p","max","lineIntersection","segmentBoxContains","polyA","polyB","iA","nA","nB","bA","aA","iB","bB","aB","segmentsIntersect","polygonContains","poly","origin","alpha","cos","sin","x0","y0","shiftedOrigin","idx","n","minSqDistLeft","Number","MAX_VALUE","minSqDistRight","closestPointLeft","closestPointRight","sqDist","cosAlpha","sinAlpha","xshifted","yshifted","pointRotate","getSqSegDist","simplifyRadialDist","sqTolerance","point","prevPoint","newPoints","len","simplifyDPStep","first","last","simplified","index","maxSqDist","simplifyDouglasPeucker","tolerance","highestQuality","aspectRatioStep","angleStep","polyCache","options","verbose","console","error","range","cache","maxAspectRatio","minAspectRatio","minHeight","minWidth","nTries","angles","isNaN","aspectRatios","aspectRatio","origins","cacheString","join","area","polygonArea","extent","minx","maxx","miny","maxy","simplify","type","boxWidth","boxHeight","widthStep","centroid","polygonCentroid","isFinite","rndX","random","rndY","rndPoint","points","maxArea","maxRect","ai","angleRad","PI","origOrigin","polygonRayCast","p1W","p2W","p1H","p2H","modifOrigins","cx","cy","minSqDistW","maxWidth","minSqDistH","maxHeight","aRatios","aRatio","left","right","rectPoly","polygonRotate","insidePoly","polygonInside","areaFraction","Area","largestRect","textAnchor","verticalAlign","_x0","_x1","_y0","_y1","points1","v","z","points2","reverse","concat","areas","nest","entries","xR","yR","userCurve","path","x1","y1","exitPath","attrTween","interpolatePath","Bar","_getX","_getY","_getWidth","_getHeight","_applyPosition","w","Circle","_r","Rect","Line","line","lines","calculateStrokeDashArray","initialLength","getTotalLength","strokeArray","split","newStrokeArray","strokeLength","num","pop","sum","initialStrokeArray","shapes","Whisker","_endpoint","_endpointConfig","_length","_lineConfig","_orient","lineData","orient","endpointX","endpointY","_line","whiskerData","dataObj","endpoint","_whiskerEndpoint","shapeData","shapeName","active","endPoint","hover","Box","_medianConfig","fill","_outlier","_outlierConfig","_rectConfig","stroke","strokeWidth","_rectWidth","_whiskerConfig","_whiskerMode","outlierData","filteredData","quantile","median","third","mode","lowerLimit","upperLimit","rectLength","eachValue","value","outlier","_box","_median","topLength","bottomLength","topY","bottomY","topX","bottomX","_whisker","segmentLength","svgPath","createElementNS","setAttribute","NUM_POINTS","pt","getPointAtLength","Path","_d","path2polygon","pi","distance","shape","diagonal","tan"],"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"}