{"version":3,"file":"d3plus-matrix.js","sources":["../src/helpers/getProp.js","../src/helpers/prepData.js","../src/Matrix.js","../src/RadialMatrix.js"],"sourcesContent":["/**\n *\n * @param {String} type\n * @param {Object} d\n * @param {Number} i\n * @private\n */\nexport default function(type, d, i) {\n  return d[type] || this[`_${type}`](d, i);\n}\n","import {unique} from \"d3plus-common\";\n\nconst cartesian = (a, b) => [].concat(...a.map(d => b.map(e => [].concat(d, e))));\n\n/**\n * @private\n */\nexport default function() {\n\n  const data = this._filteredData;\n  const rowValues = (this._rowList || unique(data.map(this._row))).sort(this._rowSort);\n  const columnValues = (this._columnList || unique(data.map(this._column))).sort(this._columnSort);\n\n  if (!rowValues.length || !columnValues.length) return this;\n\n  const shapeData = cartesian(rowValues, columnValues)\n    .map(([rowValue, columnValue]) => {\n      const dataObj = {\n        __d3plusTooltip__: true,\n        __d3plus__: true,\n        column: columnValue,\n        row: rowValue\n      };\n      const dataIndex = data\n        .findIndex((d, i) => this._row(d, i) === rowValue && this._column(d, i) === columnValue);\n      if (dataIndex >= 0) {\n        dataObj.i = dataIndex;\n        dataObj.data = data[dataIndex];\n      }\n      else {\n        dataObj.data = {row: rowValue, column: columnValue};\n      }\n      return dataObj;\n    });\n\n  return {rowValues, columnValues, shapeData};\n\n}\n","import {Axis} from \"d3plus-axis\";\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\nimport getProp from \"./helpers/getProp.js\";\nimport prepData from \"./helpers/prepData.js\";\n\nconst defaultAxisConfig = {\n  align: \"start\",\n  barConfig: {\n    stroke: 0\n  },\n  gridSize: 0,\n  padding: 5,\n  paddingInner: 0,\n  paddingOuter: 0,\n  scale: \"band\",\n  tickSize: 0\n};\n\n/**\n    @class Matrix\n    @extends Viz\n    @desc Creates a simple rows/columns Matrix view of any dataset. See [this example](https://d3plus.org/examples/d3plus-matrix/getting-started/) for help getting started using the Matrix class.\n*/\nexport default class Matrix extends Viz {\n\n  /**\n    @memberof Matrix\n    @desc Invoked when creating a new class instance, and sets any default parameters.\n    @private\n  */\n  constructor() {\n\n    super();\n\n    this._cellPadding = 2;\n\n    this._column = accessor(\"column\");\n    this._columnAxis = new Axis();\n    this._columnConfig = assign({orient: \"top\"}, defaultAxisConfig);\n    this._columnSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n    this._label = (d, i) => `${getProp.bind(this)(\"row\", d, i)} / ${getProp.bind(this)(\"column\", d, i)}`;\n\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMoveShape(d, i, x, event);\n      const row = getProp.bind(this)(\"row\", d, i);\n      const column = getProp.bind(this)(\"column\", d, i);\n      this.hover((h, ii) => getProp.bind(this)(\"row\", h, ii) === row || getProp.bind(this)(\"column\", h, ii) === column);\n    };\n\n    this._row = accessor(\"row\");\n    this._rowAxis = new Axis();\n    this._rowConfig = assign({orient: \"left\"}, defaultAxisConfig);\n    this._rowSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n  }\n\n  /**\n      @memberof Matrix\n      @desc Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    const {rowValues, columnValues, shapeData} = prepData.bind(this)(this._filteredData);\n\n    if (!rowValues.length || !columnValues.length) return this;\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const hidden = {opacity: 0};\n    const visible = {opacity: 1};\n\n    const columnRotation = width / columnValues.length < 120;\n\n    const selectElem = (name, opts) => elem(`g.d3plus-Matrix-${name}`, Object.assign({parent, transition}, opts)).node();\n\n    this._rowAxis\n      .select(selectElem(\"row\", {enter: hidden, update: hidden}))\n      .domain(rowValues)\n      .height(height - this._margin.top - this._margin.bottom - this._padding.bottom - this._padding.top)\n      .maxSize(width / 4)\n      .width(width)\n      .config(this._rowConfig)\n      .render();\n\n    const rowPadding = this._rowAxis.outerBounds().width;\n    this._padding.left += rowPadding;\n    let columnTransform = `translate(0, ${this._margin.top})`;\n    const hiddenTransform = Object.assign({transform: columnTransform}, hidden);\n\n    this._columnAxis\n      .select(selectElem(\"column\", {enter: hiddenTransform, update: hiddenTransform}))\n      .domain(columnValues)\n      .range([this._margin.left + this._padding.left, width - this._margin.right + this._padding.right])\n      .height(height)\n      .maxSize(height / 4)\n      .width(width)\n      .labelRotation(columnRotation)\n      .config(this._columnConfig)\n      .render();\n\n    const columnPadding = this._columnAxis.outerBounds().height;\n    this._padding.top += columnPadding;\n\n    super._draw(callback);\n\n    const rowTransform = `translate(${this._margin.left}, ${this._margin.top})`;\n    columnTransform = `translate(0, ${this._margin.top})`;\n    const visibleTransform = Object.assign({transform: columnTransform}, visible);\n\n    this._rowAxis\n      .select(selectElem(\"row\", {update: Object.assign({transform: rowTransform}, visible)}))\n      .height(height - this._margin.top - this._margin.bottom - this._padding.bottom)\n      .maxSize(rowPadding)\n      .range([columnPadding + this._columnAxis.padding(), undefined])\n      .render();\n\n    this._columnAxis\n      .select(selectElem(\"column\", {update: visibleTransform}))\n      .range([this._margin.left + this._padding.left + this._rowAxis.padding(), width - this._margin.right + this._padding.right])\n      .maxSize(columnPadding)\n      .render();\n\n    const rowScale = this._rowAxis._getPosition.bind(this._rowAxis);\n    const columnScale = this._columnAxis._getPosition.bind(this._columnAxis);\n    const cellHeight = rowValues.length > 1\n      ? rowScale(rowValues[1]) - rowScale(rowValues[0])\n      : this._rowAxis.height();\n    const cellWidth = columnValues.length > 1\n      ? columnScale(columnValues[1]) - columnScale(columnValues[0])\n      : this._columnAxis.width();\n\n    const transform = `translate(0, ${this._margin.top})`;\n    const rectConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\");\n\n    this._shapes.push(new Rect()\n      .data(shapeData)\n      .select(elem(\"g.d3plus-Matrix-cells\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        height: cellHeight - this._cellPadding,\n        width: cellWidth - this._cellPadding,\n        x: d => columnScale(d.column) + cellWidth / 2,\n        y: d => rowScale(d.row) + cellHeight / 2\n      })\n      .config(rectConfig)\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Matrix\n      @desc The pixel padding in between each cell.\n      @param {Number} [*value* = 2]\n  */\n  cellPadding(_) {\n    return arguments.length ? (this._cellPadding = _, this) : this._cellPadding;\n  }\n\n  /**\n      @memberof Matrix\n      @desc Determines which key in your data should be used for each column in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's column value.\n      @param {String|Function} [*value*]\n      @example\nfunction column(d) {\n  return d.name;\n}\n  */\n  column(_) {\n    return arguments.length ? (this._column = typeof _ === \"function\" ? _ : accessor(_), this) : this._column;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the column labels.\n      @param {Object} *value*\n      @chainable\n  */\n  columnConfig(_) {\n    return arguments.length ? (this._columnConfig = assign(this._columnConfig, _), this) : this._columnConfig;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A manual list of IDs to be used for columns.\n      @param {Array} [*value*]\n  */\n  columnList(_) {\n    return arguments.length ? (this._columnList = _, this) : this._columnList;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A sort comparator function that is run on the unique set of column values.\n      @param {Function} [*value*]\n      @example\nfunction column(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  columnSort(_) {\n    return arguments.length ? (this._columnSort = _, this) : this._columnSort;\n  }\n\n  /**\n      @memberof Matrix\n      @desc Determines which key in your data should be used for each row in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's row value.\n      @param {String|Function} [*value*]\n      @example\nfunction row(d) {\n  return d.name;\n}\n  */\n  row(_) {\n    return arguments.length ? (this._row = typeof _ === \"function\" ? _ : accessor(_), this) : this._row;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the row labels.\n      @param {Object} *value*\n      @chainable\n  */\n  rowConfig(_) {\n    return arguments.length ? (this._rowConfig = assign(this._rowConfig, _), this) : this._rowConfig;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A manual list of IDs to be used for rows.\n      @param {Array} [*value*]\n  */\n  rowList(_) {\n    return arguments.length ? (this._rowList = _, this) : this._rowList;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A sort comparator function that is run on the unique set of row values.\n      @param {Function} [*value*]\n      @example\nfunction row(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  rowSort(_) {\n    return arguments.length ? (this._rowSort = _, this) : this._rowSort;\n  }\n\n}\n","import {min} from \"d3-array\";\nimport {arc} from \"d3-shape\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {TextBox} from \"d3plus-text\";\nimport {Viz} from \"d3plus-viz\";\nimport getProp from \"./helpers/getProp.js\";\nimport prepData from \"./helpers/prepData.js\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class RadialMatrix\n    @extends Viz\n    @desc Creates a radial layout of a rows/columns Matrix of any dataset. See [this example](https://d3plus.org/examples/d3plus-matrix/radial-matrix/) for help getting started using the Matrix class.\n*/\nexport default class RadialMatrix extends Viz {\n\n  /**\n    @memberof RadialMatrix\n    @desc Invoked when creating a new class instance, and sets any default parameters.\n    @private\n  */\n  constructor() {\n\n    super();\n\n    this._cellPadding = 2;\n\n    this._column = accessor(\"column\");\n    this._columnConfig = {\n      shapeConfig: {\n        labelConfig: {\n          fontColor: \"#000\",\n          padding: 5,\n          textAnchor: d => [0, 180].includes(d.angle) ? \"middle\" : [2, 3].includes(d.quadrant) ? \"end\" : \"start\",\n          verticalAlign: d => [90, 270].includes(d.angle) ? \"middle\" : [2, 1].includes(d.quadrant) ? \"bottom\" : \"top\"\n        }\n      }\n    };\n    this._columnSort = (a, b) => `${a}`.localeCompare(`${b}`);\n    this._innerRadius = radius => radius / 5;\n\n    this._label = (d, i) => `${getProp.bind(this)(\"row\", d, i)} / ${getProp.bind(this)(\"column\", d, i)}`;\n\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMoveShape(d, i, x, event);\n      const row = getProp.bind(this)(\"row\", d, i);\n      const column = getProp.bind(this)(\"column\", d, i);\n      this.hover((h, ii) => getProp.bind(this)(\"row\", h, ii) === row || getProp.bind(this)(\"column\", h, ii) === column);\n    };\n\n    this._row = accessor(\"row\");\n    this._rowSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n    this._columnLabels = new TextBox();\n\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    const {rowValues, columnValues, shapeData} = prepData.bind(this)(this._filteredData);\n\n    if (!rowValues.length || !columnValues.length) return this;\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const labelHeight = 50, labelWidth = 100;\n    const radius = min([height - labelHeight * 2, width - labelWidth * 2]) / 2,\n          transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n\n\n    const flippedColumns = columnValues.slice().reverse();\n    flippedColumns.unshift(flippedColumns.pop());\n    const total = flippedColumns.length;\n\n    const labelData = flippedColumns\n      .map((key, i) => {\n\n        const radians = i / total * tau;\n        const angle = Math.round(radians * 180 / Math.PI);\n        const quadrant = Math.floor((angle + 90) / 90 % 4 + 1);\n\n        const xMod = [0, 180].includes(angle) ? -labelWidth / 2 : [2, 3].includes(quadrant) ? -labelWidth : 0;\n        const yMod = [90, 270].includes(angle) ? -labelHeight / 2 : [2, 1].includes(quadrant) ? -labelHeight : 0;\n\n        return {\n          key, angle, quadrant, radians,\n          x: radius * Math.sin(radians + Math.PI) + xMod,\n          y: radius * Math.cos(radians + Math.PI) + yMod\n        };\n      });\n\n    /**\n     * Extracts the axis config \"labels\" Array, if it exists, it filters\n     * the column labels by the values included in the Array.\n     */\n    const displayLabels = this._columnConfig.labels instanceof Array\n      ? labelData.filter(d => this._columnConfig.labels.includes(d.key))\n      : labelData;\n\n    this._columnLabels\n      .data(displayLabels)\n      .x(d => d.x)\n      .y(d => d.y)\n      .text(d => d.key)\n      .width(labelWidth)\n      .height(labelHeight)\n      .config(this._columnConfig.shapeConfig.labelConfig)\n      .select(\n        elem(\"g.d3plus-RadialMatrix-columns\", {\n          parent, transition,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n\n    const innerRadius = this._innerRadius(radius);\n    const rowHeight = (radius - innerRadius) / rowValues.length;\n    const columnWidth = labelData.length > 1 ? labelData[1].radians - labelData[0].radians : tau;\n    const flippedRows = rowValues.slice().reverse();\n\n    const arcData = arc()\n      .padAngle(this._cellPadding / radius)\n      .innerRadius(d => innerRadius + flippedRows.indexOf(d.row) * rowHeight + this._cellPadding / 2)\n      .outerRadius(d => innerRadius + (flippedRows.indexOf(d.row) + 1) * rowHeight - this._cellPadding / 2)\n      .startAngle(d => labelData[columnValues.indexOf(d.column)].radians - columnWidth / 2)\n      .endAngle(d => labelData[columnValues.indexOf(d.column)].radians + columnWidth / 2);\n\n    this._shapes.push(new Path()\n      .data(shapeData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-RadialMatrix-arcs\", {\n        parent, transition,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc The pixel padding in between each cell.\n      @param {Number} [*value* = 2]\n  */\n  cellPadding(_) {\n    return arguments.length ? (this._cellPadding = _, this) : this._cellPadding;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Determines which key in your data should be used for each column in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's column value.\n      @param {String|Function} [*value*]\n      @example\nfunction column(d) {\n  return d.name;\n}\n  */\n  column(_) {\n    return arguments.length ? (this._column = typeof _ === \"function\" ? _ : accessor(_), this) : this._column;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the column labels.\n      @param {Object} *value*\n      @chainable\n  */\n  columnConfig(_) {\n    return arguments.length ? (this._columnConfig = assign(this._columnConfig, _), this) : this._columnConfig;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A manual list of IDs to be used for columns.\n      @param {Array} [*value*]\n  */\n  columnList(_) {\n    return arguments.length ? (this._columnList = _, this) : this._columnList;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A sort comparator function that is run on the unique set of column values.\n      @param {Function} [*value*]\n      @example\nfunction column(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  columnSort(_) {\n    return arguments.length ? (this._columnSort = _, this) : this._columnSort;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc The radius (in pixels) for the inner donut hole of the diagram. Can either be a static Number, or an accessor function that receives the outer radius as it's only argument.\n      @param {Function|Number} [*value*]\n      @example\nfunction(outerRadius) {\n  return outerRadius / 5;\n}\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = typeof _ === \"function\" ? _ : constant(_), this) : this._innerRadius;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Determines which key in your data should be used for each row in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's row value.\n      @param {String|Function} [*value*]\n      @example\nfunction row(d) {\n  return d.name;\n}\n  */\n  row(_) {\n    return arguments.length ? (this._row = typeof _ === \"function\" ? _ : accessor(_), this) : this._row;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A manual list of IDs to be used for rows.\n      @param {Array} [*value*]\n  */\n  rowList(_) {\n    return arguments.length ? (this._rowList = _, this) : this._rowList;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A sort comparator function that is run on the unique set of row values.\n      @param {Function} [*value*]\n      @example\nfunction row(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  rowSort(_) {\n    return arguments.length ? (this._rowSort = _, this) : this._rowSort;\n  }\n\n}\n"],"names":["type","d","i","cartesian","a","b","concat","map","e","data","_filteredData","rowValues","_rowList","unique","_row","sort","_rowSort","columnValues","_columnList","_column","_columnSort","length","shapeData","rowValue","columnValue","dataObj","__d3plusTooltip__","__d3plus__","column","row","dataIndex","findIndex","defaultAxisConfig","align","barConfig","stroke","gridSize","padding","paddingInner","paddingOuter","scale","tickSize","Matrix","_cellPadding","accessor","_columnAxis","Axis","_columnConfig","assign","orient","localeCompare","_label","getProp","bind","defaultMouseMoveShape","_on","x","event","hover","h","ii","_rowAxis","_rowConfig","callback","prepData","height","_height","_margin","top","bottom","parent","_select","transition","_transition","width","_width","left","right","hidden","opacity","visible","columnRotation","selectElem","name","opts","elem","Object","node","select","enter","update","domain","_padding","maxSize","config","render","rowPadding","outerBounds","columnTransform","hiddenTransform","transform","range","labelRotation","columnPadding","rowTransform","visibleTransform","undefined","rowScale","_getPosition","columnScale","cellHeight","cellWidth","rectConfig","configPrep","_shapeConfig","_shapes","push","Rect","y","_","arguments","Viz","tau","Math","PI","RadialMatrix","shapeConfig","labelConfig","fontColor","textAnchor","includes","angle","quadrant","verticalAlign","_innerRadius","radius","_columnLabels","TextBox","labelHeight","labelWidth","min","flippedColumns","slice","reverse","unshift","pop","total","labelData","key","radians","round","floor","xMod","yMod","sin","cos","displayLabels","labels","Array","filter","text","innerRadius","rowHeight","columnWidth","flippedRows","arcData","arc","padAngle","indexOf","outerRadius","startAngle","endAngle","Path","id","_ids","join","constant"],"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"}