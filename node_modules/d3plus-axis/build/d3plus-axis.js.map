{"version":3,"file":"d3plus-axis.js","sources":["../src/date.js","../src/locale.js","../src/Axis.js","../src/AxisBottom.js","../src/AxisLeft.js","../src/AxisRight.js","../src/AxisTop.js"],"sourcesContent":["/**\n    @function date\n    @summary Parses numbers and strings to valid Javascript Date objects.\n    @description Returns a javascript Date object for a given a Number (representing either a 4-digit year or milliseconds since epoch), a String representing a Quarter (ie. \"Q2 1987\", mapping to the last day in that quarter), or a String that is in [valid dateString format](http://dygraphs.com/date-formats.html). Besides the 4-digit year parsing, this function is useful when needing to parse negative (BC) years, which the vanilla Date object cannot parse.\n    @param {Number|String} *date*\n*/\nexport default function(d) {\n\n  // returns if already Date object\n  if (d.constructor === Date) return d;\n  // detects if milliseconds\n  else if (d.constructor === Number && `${d}`.length > 5 && d % 1 === 0) return new Date(d);\n\n  let s = `${d}`;\n\n  // tests for MM/DD/YYYY and MM-DD-YYYY format\n  const dayFormat = new RegExp(/^\\d{1,2}[./-]\\d{1,2}[./-](-*\\d{1,4})$/g).exec(s);\n  if (dayFormat) {\n    const year = dayFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substring(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // tests for full Date object string format\n  const strFormat = new RegExp(/^[A-z]{1,3} [A-z]{1,3} \\d{1,2} (-*\\d{1,4}) \\d{1,2}:\\d{1,2}:\\d{1,2} [A-z]{1,3}-*\\d{1,4} \\([A-z]{1,3}\\)/g).exec(s);\n  if (strFormat) {\n    const year = strFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substring(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // tests for quarterly formats (ie. \"QX YYYY\")\n  const quarterPrefix = new RegExp(/^([qQ]{1}[1-4]{1}|[1-4]{1}[qQ]{1})[\\s|-]{0,1}(-*\\d{1,4})$/g).exec(s);\n  const quarterSuffix = new RegExp(/^(-*\\d{1,4})[\\s|-]{0,1}([qQ]{1}[1-4]{1}|[1-4]{1}[qQ]{1})$/g).exec(s);\n  if (quarterPrefix || quarterSuffix) {\n    const quarter = +(quarterPrefix ? quarterPrefix[1] : quarterSuffix[2]).toLowerCase().replace(\"q\", \"\");\n    const year = +(quarterPrefix ? quarterPrefix[2] : quarterSuffix[1]);\n    const date = new Date(year, quarter * 3 - 3, 1);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // detects if only passing a year value\n  if (!s.includes(\"/\") && !s.includes(\" \") && (!s.includes(\"-\") || !s.indexOf(\"-\"))) {\n    const date = new Date(+s, 0, 1);\n    date.setFullYear(d);\n    return date;\n  }\n\n  // falls back to Date object\n  return new Date(s);\n\n}\n","export default {\n  \"de-DE\": {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sonntag\",\n      \"Montag\",\n      \"Dienstag\",\n      \"Mittwoch\",\n      \"Donnerstag\",\n      \"Freitag\",\n      \"Samstag\"\n    ],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\n      \"Januar\",\n      \"Februar\",\n      \"März\",\n      \"April\",\n      \"Mai\",\n      \"Juni\",\n      \"Juli\",\n      \"August\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"Dezember\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mrz\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Okt\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  },\n  \"en-GB\": {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"en-US\": {\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"es-ES\": {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"es-MX\": {\n    dateTime: \"%x, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%-I:%M:%S %p\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"fr-FR\": {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\n      \"janvier\",\n      \"février\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"août\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"décembre\"\n    ],\n    shortMonths: [\n      \"janv.\",\n      \"févr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"août\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"déc.\"\n    ]\n  },\n  \"it-IT\": {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domenica\",\n      \"Lunedì\",\n      \"Martedì\",\n      \"Mercoledì\",\n      \"Giovedì\",\n      \"Venerdì\",\n      \"Sabato\"\n    ],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\n      \"Gennaio\",\n      \"Febbraio\",\n      \"Marzo\",\n      \"Aprile\",\n      \"Maggio\",\n      \"Giugno\",\n      \"Luglio\",\n      \"Agosto\",\n      \"Settembre\",\n      \"Ottobre\",\n      \"Novembre\",\n      \"Dicembre\"\n    ],\n    shortMonths: [\n      \"Gen\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mag\",\n      \"Giu\",\n      \"Lug\",\n      \"Ago\",\n      \"Set\",\n      \"Ott\",\n      \"Nov\",\n      \"Dic\"\n    ]\n  },\n  \"pt-BR\": {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domingo\",\n      \"Segunda\",\n      \"Terça\",\n      \"Quarta\",\n      \"Quinta\",\n      \"Sexta\",\n      \"Sábado\"\n    ],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\n      \"Janeiro\",\n      \"Fevereiro\",\n      \"Março\",\n      \"Abril\",\n      \"Maio\",\n      \"Junho\",\n      \"Julho\",\n      \"Agosto\",\n      \"Setembro\",\n      \"Outubro\",\n      \"Novembro\",\n      \"Dezembro\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Fev\",\n      \"Mar\",\n      \"Abr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Ago\",\n      \"Set\",\n      \"Out\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  }\n};\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {extent, max, min, range as d3Range, ticks as d3Ticks} from \"d3-array\";\nimport {timeFormatDefaultLocale} from \"d3-time-format\";\nimport * as scales from \"d3-scale\";\nimport {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {assign, attrize, BaseClass, closest, constant, elem} from \"d3plus-common\";\nimport {colorDefaults} from \"d3plus-color\";\nimport {formatAbbreviate, formatDate, formatLocale} from \"d3plus-format\";\nimport * as shapes from \"d3plus-shape\";\nimport {rtl as detectRTL, TextBox, textWrap} from \"d3plus-text\";\n\nimport {default as date} from \"./date.js\";\nimport {default as locale} from \"./locale.js\";\n\nconst floorPow = d => Math.pow(10, Math.floor(Math.log10(d)));\n\n/**\n * Calculates ticks from a given scale (negative and/or positive)\n * @param {scale} scale A d3-scale object\n * @private\n */\nfunction calculateTicks(scale, useData = false) {\n\n  const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n  const negativeRange = scale.range();\n  const size = Math.abs(negativeRange[1] - negativeRange[0]);\n  let step = Math.floor(size / tickScale(size));\n\n  if (this._scale === \"time\" && this._data && this._data.length) {\n    const dataExtent = extent(this._data);\n    const distance = this._data.reduce((n, d, i, arr) => {\n      if (i) {\n        const dist = Math.abs(d - arr[i - 1]);\n        if (dist < n) n = dist;\n      }\n      return n;\n    }, Infinity);\n    const newStep = Math.round((dataExtent[1] - dataExtent[0]) / distance);\n    step = useData ? min([step * 2, newStep]) : min([step, newStep]);\n  }\n  let ticks = scale.ticks(step);\n  if (this._data.length) {\n    const dataNumbers = this._data.map(Number);\n    ticks = ticks.filter(t => dataNumbers.includes(+t));\n  }\n  const domain = this._data.length ? extent(this._data) : scale.domain();\n  const diff = ticks[1] - ticks[0];\n  if (!ticks.find(d => +d === +domain[0])) {\n    if (ticks[0] - domain[0] < diff) ticks.shift();\n    ticks.unshift(domain[0]);\n  }\n  if (!ticks.find(d => +d === +domain[1])) {\n    if (domain[1] - ticks[ticks.length - 1] < diff) ticks.pop();\n    ticks.push(domain[1]);\n  }\n  return ticks;\n}\n\n/**\n    @class Axis\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data.\n*/\nexport default class Axis extends BaseClass {\n\n  /**\n      @memberof Axis\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._align = \"middle\";\n    this._barConfig = {\n      \"stroke\": \"#999\",\n      \"stroke-width\": 1\n    };\n    this._data = [];\n    this._domain = [0, 10];\n    this._duration = 600;\n    this._gridConfig = {\n      \"stroke\": \"#eee\",\n      \"stroke-width\": 1\n    };\n    this._gridLog = false;\n    this._height = 400;\n    this._labelOffset = false;\n    this._labelRotation = false;\n    this.orient(\"bottom\");\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._paddingInner = 0.1;\n    this._paddingOuter = 0.1;\n    this._scale = \"linear\";\n    this._scalePadding = 0.5;\n    this._shape = \"Line\";\n    this._shapeConfig = {\n      fill: \"#999\",\n      height: d => d.tick ? 8 : 0,\n      label: d => d.text,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: \"#999\",\n        fontFamily: new TextBox().fontFamily(),\n        fontResize: false,\n        fontSize: constant(14),\n        padding: 0,\n        textAnchor: () => {\n          const rtl = detectRTL(this._select.node());\n          return this._orient === \"left\" ? rtl ? \"start\" : \"end\"\n            : this._orient === \"right\" ? rtl ? \"end\" : \"start\"\n            : this._labelRotation ? this._orient === \"bottom\" ? \"end\" : \"start\" : \"middle\";\n        },\n        verticalAlign: () => this._orient === \"bottom\" ? \"top\" : this._orient === \"top\" ? \"bottom\" : \"middle\"\n      },\n      r: d => d.tick ? 4 : 0,\n      stroke: \"#999\",\n      strokeWidth: 1,\n      width: d => d.tick ? 8 : 0\n    };\n    this._tickSize = 8;\n    this._tickSuffix = \"normal\";\n    this._tickUnit = 0;\n    this._timeLocale = undefined;\n    this._titleClass = new TextBox();\n    this._titleConfig = {\n      fontColor: colorDefaults.dark,\n      fontSize: 12,\n      textAnchor: \"middle\"\n    };\n    this._width = 400;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the axis bar.\n      @param {D3Selection} *bar*\n      @private\n  */\n  _barPosition(bar) {\n\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset;\n\n    const x1mod = this._scale === \"band\" ? this._d3Scale.step() - this._d3Scale.bandwidth()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const x2mod = this._scale === \"band\" ? this._d3Scale.step()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const sortedDomain = (this._d3ScaleNegative ? this._d3ScaleNegative.domain() : []).concat(this._d3Scale ? this._d3Scale.domain() : []).sort((a, b) => a - b);\n\n    bar\n      .call(attrize, this._barConfig)\n      .attr(`${x}1`, this._getPosition(sortedDomain[0]) - x1mod)\n      .attr(`${x}2`, this._getPosition(sortedDomain[sortedDomain.length - 1]) + x2mod)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, position);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's domain, taking into account negative and positive log scales.\n      @private\n  */\n  _getDomain() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.domain();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.domain());\n\n    const domain = [\"band\", \"ordinal\", \"point\"].includes(this._scale) ? ticks : extent(ticks);\n    return ticks[0] > ticks[1] ? domain.reverse() : domain;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns a value's scale position, taking into account negative and positive log scales.\n      @param {Number|String} *d*\n      @private\n  */\n  _getPosition(d) {\n    return this._scale === \"log\" && d === 0\n      ? (this._d3Scale || this._d3ScaleNegative).range()[this._d3Scale ? 0 : 1]\n      : (this._scale === \"log\" && d < 0 ? this._d3ScaleNegative || (() => 0) : this._d3Scale)(d);\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's range, taking into account negative and positive log scales.\n      @private\n  */\n  _getRange() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.range();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.range());\n    return ticks[0] > ticks[1] ? extent(ticks).reverse() : extent(ticks);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's labels, taking into account negative and positive log scales.\n      @private\n  */\n  _getLabels() {\n    let labels = [];\n    if (this._d3ScaleNegative) labels = labels.concat(calculateTicks.bind(this)(this._d3ScaleNegative, false));\n    if (this._d3Scale) labels = labels.concat(calculateTicks.bind(this)(this._d3Scale, false));\n    return labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's ticks, taking into account negative and positive log scales.\n      @private\n  */\n  _getTicks() {\n    if ([\"band\", \"ordinal\", \"point\", \"time\"].includes(this._scale) && this._data && this._data.length < this._width / 4) {\n      return this._scale === \"time\" ? this._data.map(date) : this._data;\n    }\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = ticks.concat(calculateTicks.bind(this)(this._d3ScaleNegative, true));\n    if (this._d3Scale) ticks = ticks.concat(calculateTicks.bind(this)(this._d3Scale, true));\n    return ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the grid lines.\n      @param {D3Selection} *lines*\n      @private\n  */\n  _gridPosition(lines, last = false) {\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset,\n          scale = last ? this._lastScale || this._getPosition.bind(this) : this._getPosition.bind(this),\n          size = [\"top\", \"left\"].includes(this._orient) ? offset : -offset,\n          xDiff = this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0,\n          xPos = d => scale(d.id) + xDiff;\n    lines\n      .call(attrize, this._gridConfig)\n      .attr(`${x}1`, xPos)\n      .attr(`${x}2`, xPos)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, last ? position : position + size);\n  }\n\n  /**\n      @memberof Axis\n      @desc Renders the current Axis to the page. If a *callback* is specified, it will be called once the legend is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    /**\n     * Creates an SVG element to contain the axis if none\n     * has been specified using the \"select\" method.\n     */\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .attr(\"width\", `${this._width}px`)\n        .attr(\"height\", `${this._height}px`)\n        .node());\n    }\n\n    const timeLocale = this._timeLocale || locale[this._locale] || locale[\"en-US\"];\n    timeFormatDefaultLocale(timeLocale).format();\n\n    /**\n     * Declares some commonly used variables.\n     */\n    const {width, height, x, y, horizontal, opposite} = this._position,\n          clipId = `d3plus-Axis-clip-${this._uuid}`,\n          flip = [\"top\", \"left\"].includes(this._orient),\n          p = this._padding,\n          parent = this._select,\n          rangeOuter = [p, this[`_${width}`] - p],\n          t = transition().duration(this._duration);\n\n    const tickValue = this._shape === \"Circle\" ? this._shapeConfig.r\n      : this._shape === \"Rect\" ? this._shapeConfig[width]\n      : this._shapeConfig.strokeWidth;\n    const tickGet = typeof tickValue !== \"function\" ? () => tickValue : tickValue;\n\n    /**\n     * Zeros out the margins for re-calculation.\n     */\n    const margin = this._margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n    let labels, range, ticks;\n\n    /**\n     * Constructs the tick formatter function.\n     */\n    const tickFormat = this._tickFormat ? this._tickFormat : d => {\n      if (isNaN(d) || [\"band\", \"ordinal\", \"point\"].includes(this._scale)) {\n        return d;\n      }\n      else if (this._scale === \"time\") {\n        return formatDate(d, (this._data || labels).map(date)).replace(/^Q/g, timeLocale.quarter);\n      }\n      else if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const locale = typeof this._locale === \"object\" ? this._locale : formatLocale[this._locale];\n        const {separator, suffixes} = locale;\n        const suff = d >= 1000 ? suffixes[this._tickUnit + 8] : \"\";\n        const tick = d / Math.pow(10, 3 * this._tickUnit);\n        const number = formatAbbreviate(tick, locale, `,.${tick.toString().length}r`);\n        return `${number}${separator}${suff}`;\n      }\n      else {\n        return formatAbbreviate(d, this._locale);\n      }\n    };\n\n    /**\n     * (Re)calculates the internal d3 scale\n     * @param {} newRange\n     */\n    function setScale(newRange = this._range) {\n\n      /**\n       * Calculates the internal \"range\" array to use, including\n       * fallbacks if not specified with the \"range\" method.\n       */\n      range = newRange ? newRange.slice() : [undefined, undefined];\n      let [minRange, maxRange] = rangeOuter;\n      if (this._range) {\n        if (this._range[0] !== undefined) minRange = this._range[0];\n        if (this._range[this._range.length - 1] !== undefined) maxRange = this._range[this._range.length - 1];\n      }\n      if (range[0] === undefined || range[0] < minRange) range[0] = minRange;\n      if (range[1] === undefined || range[1] > maxRange) range[1] = maxRange;\n      const sizeInner = maxRange - minRange;\n      if (this._scale === \"ordinal\" && this._domain.length > range.length) {\n        if (newRange === this._range) {\n          const buckets = this._domain.length + 1;\n          range = d3Range(buckets)\n            .map(d => range[0] + sizeInner * (d / (buckets - 1)))\n            .slice(1, buckets);\n          range = range.map(d => d - range[0] / 2);\n        }\n        else {\n          const buckets = this._domain.length;\n          const size = range[1] - range[0];\n          range = d3Range(buckets)\n            .map(d => range[0] + size * (d / (buckets - 1)));\n        }\n      }\n      else if (newRange === this._range) {\n        const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n        const domain = this._scale === \"time\" ? this._domain.map(date) : this._domain;\n        const scaleTicks = d3Ticks(domain[0], domain[1], Math.floor(sizeInner / tickScale(sizeInner)));\n\n        labels = (this._labels\n          ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n          : scaleTicks).slice();\n        const buckets = labels.length;\n\n        if (buckets) {\n          const pad = Math.ceil(sizeInner / buckets / 2);\n          range = [range[0] + pad, range[1] - pad];\n        }\n\n      }\n\n      /**\n       * Sets up the initial d3 scale, using this._domain and the\n       * previously defined range variable.\n       */\n      const scale = `scale${this._scale.charAt(0).toUpperCase()}${this._scale.slice(1)}`;\n\n      this._d3Scale = scales[scale]()\n        .domain(this._scale === \"time\" ? this._domain.map(date) : this._domain)\n        .range(range);\n\n      if (this._d3Scale.padding) this._d3Scale.padding(this._scalePadding);\n      if (this._d3Scale.paddingInner) this._d3Scale.paddingInner(this._paddingInner);\n      if (this._d3Scale.paddingOuter) this._d3Scale.paddingOuter(this._paddingOuter);\n\n      /**\n       * Constructs a separate \"negative only\" scale for logarithmic\n       * domains, as they cannot pass zero.\n       */\n      this._d3ScaleNegative = null;\n      if (this._scale === \"log\") {\n        const domain = this._d3Scale.domain();\n        if (domain[0] === 0) {\n          const smallestNumber = min([min(this._data), Math.abs(domain[1])]);\n          domain[0] = smallestNumber === 0 || smallestNumber === 1 ? 1e-6 : smallestNumber <= 1 ? floorPow(smallestNumber) : 1;\n          if (domain[1] < 0) domain[0] *= -1;\n        }\n        else if (domain[domain.length - 1] === 0) {\n          const smallestNumber = min([min(this._data), Math.abs(domain[0])]);\n          domain[domain.length - 1] = smallestNumber === 0 || smallestNumber === 1 ? 1e-6 : smallestNumber <= 1 ? floorPow(smallestNumber) : 1;\n          if (domain[0] < 0) domain[domain.length - 1] *= -1;\n        }\n        const range = this._d3Scale.range();\n        if (domain[0] < 0 && domain[domain.length - 1] < 0) {\n          this._d3ScaleNegative = this._d3Scale.copy()\n            .domain(domain)\n            .range(range);\n          this._d3Scale = null;\n        }\n        else if (domain[0] > 0 && domain[domain.length - 1] > 0) {\n          this._d3Scale\n            .domain(domain)\n            .range(range);\n        }\n        else {\n          const percentScale = scales.scaleLinear()\n            .domain(domain)\n            .range([0, 1]);\n          const leftPercentage = percentScale(0);\n          const zero = leftPercentage * (range[1] - range[0]);\n          const smallestPositive = min([min(this._data.filter(d => d >= 0)), Math.abs(domain[1])]);\n          const smallestNegative = min([min(this._data.filter(d => d < 0 || Object.is(d, -0))), Math.abs(domain[0])]);\n          const smallestPosPow = smallestPositive === 0 ? 1e-6 : smallestPositive <= 1 ? floorPow(smallestPositive) : 1;\n          const smallestNegPow = smallestNegative === 0 ? -1e-6 : smallestNegative <= 1 ? floorPow(smallestNegative) : 1;\n          const smallestNumber = min([smallestPosPow, smallestNegPow]);\n          this._d3ScaleNegative = this._d3Scale.copy();\n          (domain[0] < 0 ? this._d3Scale : this._d3ScaleNegative)\n            .domain([domain[0] < 0 ? smallestNumber : -smallestNumber, domain[1]])\n            .range([range[0] + zero, range[1]]);\n          (domain[0] < 0 ? this._d3ScaleNegative : this._d3Scale)\n            .domain([domain[0], domain[0] < 0 ? -smallestNumber : smallestNumber])\n            .range([range[0], range[0] + zero]);\n        }\n      }\n\n      /**\n       * Determines the of values array to use\n       * for the \"ticks\" and the \"labels\"\n       */\n      ticks = (this._ticks\n        ? this._scale === \"time\" ? this._ticks.map(date) : this._ticks\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getTicks() : this._domain).slice();\n\n      labels = (this._labels\n        ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getLabels() : ticks).slice();\n\n      if (this._scale === \"log\") {\n        const tens = labels.filter((t, i) =>\n          !i || i === labels.length - 1 ||\n          Math.abs(t).toString().charAt(0) === \"1\" &&\n          (this._d3Scale ? t !== -1 : t !== 1)\n        );\n        if (tens.length > 2) {\n          labels = tens;\n        }\n        else if (labels.length >= 10) {\n          labels = labels.filter(t => t % 5 === 0 || tickFormat(t).substr(-1) === \"1\");\n        }\n        if (labels.includes(-1) && labels.includes (1) && labels.some(d => d > 10 || d < 10)) {\n          labels.splice(labels.indexOf(-1), 1);\n        }\n      }\n      if (this._scale === \"time\") {\n        ticks = ticks.map(Number);\n        labels = labels.map(Number);\n      }\n      ticks = ticks.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n      labels = labels.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n\n      /**\n       * Get the smallest suffix.\n       */\n      if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const suffixes = labels.filter(d => d >= 1000);\n        if (suffixes.length > 0) {\n          const min = Math.min(...suffixes);\n          let i = 1;\n          while (i && i < 7) {\n            const n = Math.pow(10, 3 * i);\n            if (min / n >= 1) {\n              this._tickUnit = i;\n              i += 1;\n            }\n            else {\n              break;\n            }\n          }\n        }\n      }\n\n      /**\n       * Removes ticks when they overlap other ticks.\n       */\n      const pixels = [];\n      this._availableTicks = ticks;\n      ticks.forEach((d, i) => {\n        let s = tickGet({id: d, tick: true}, i);\n        if (this._shape === \"Circle\") s *= 2;\n        const t = this._getPosition(d);\n        if (!pixels.length || Math.abs(closest(t, pixels) - t) > s * 2) pixels.push(t);\n        else pixels.push(false);\n      });\n      ticks = ticks.filter((d, i) => pixels[i] !== false);\n      this._visibleTicks = ticks;\n\n    }\n    setScale.bind(this)();\n\n    /**\n     * Calculates the space available for a given label.\n     * @param {Object} datum\n     */\n    function calculateSpace(datum, diff = 1) {\n      const {i, position} = datum;\n      if (this._scale === \"band\") {\n        return this._d3Scale.bandwidth();\n      }\n      else {\n        const prevPosition = i - diff < 0 ? textData.length === 1 || !this._range ? rangeOuter[0] : (position - textData[i + diff].position) / 2 - position : position - (position - textData[i - diff].position) / 2;\n        const prevSpace = Math.abs(position - prevPosition);\n        const nextPosition = i + diff > textData.length - 1 ? textData.length === 1 || !this._range ? rangeOuter[1] : (position - textData[i - diff].position) / 2 - position : position - (position - textData[i + diff].position) / 2;\n        const nextSpace = Math.abs(position - nextPosition);\n        return min([prevSpace, nextSpace]) * 2;\n      }\n    }\n\n    /**\n     * Pre-calculates the size of the title, if defined, in order\n     * to adjust the internal margins.\n     */\n    if (this._title) {\n      const {fontFamily, fontSize, lineHeight} = this._titleConfig;\n      const titleWrap = textWrap()\n        .fontFamily(typeof fontFamily === \"function\" ? fontFamily() : fontFamily)\n        .fontSize(typeof fontSize === \"function\" ? fontSize() : fontSize)\n        .lineHeight(typeof lineHeight === \"function\" ? lineHeight() : lineHeight)\n        .width(range[range.length - 1] - range[0] - p * 2)\n        .height(this[`_${height}`] - this._tickSize - p * 2);\n      const lines = titleWrap(this._title).lines.length;\n      margin[this._orient] = lines * titleWrap.lineHeight() + p;\n    }\n\n    let hBuff = this._shape === \"Circle\"\n          ? typeof this._shapeConfig.r === \"function\" ? this._shapeConfig.r({tick: true}) : this._shapeConfig.r\n          : this._shape === \"Rect\"\n            ? typeof this._shapeConfig[height] === \"function\" ? this._shapeConfig[height]({tick: true}) : this._shapeConfig[height]\n            : this._tickSize,\n        wBuff = tickGet({tick: true});\n\n    if (typeof hBuff === \"function\") hBuff = max(ticks.map(hBuff));\n    if (this._shape === \"Rect\") hBuff /= 2;\n    if (typeof wBuff === \"function\") wBuff = max(ticks.map(wBuff));\n    if (this._shape !== \"Circle\") wBuff /= 2;\n\n    const {fontFamily, fontSize} = this._shapeConfig.labelConfig;\n\n    /**\n     * Calculates the space each label would take up, given\n     * the provided this._space size.\n     */\n    let textData = labels\n      .map((d, i) => {\n\n        const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n              fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n              position = this._getPosition(d);\n\n        const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n        return {d, i, fF, fS, lineHeight, position};\n\n      });\n\n    /**\n     * Calculates the text wrapping and size of a given textData object.\n     * @param {Object} datum\n     */\n    function calculateLabelSize(datum) {\n      const {d, i, fF, fS, rotate, space} = datum;\n\n      const h = rotate ? \"width\" : \"height\",\n            w = rotate ? \"height\" : \"width\";\n\n      const wSize = min([this._maxSize, this._width]);\n      const hSize = min([this._maxSize, this._height]);\n\n      const wrap = textWrap()\n        .fontFamily(fF)\n        .fontSize(fS)\n        .lineHeight(this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : undefined);\n        \n      wrap[w](horizontal ? space : wSize - hBuff - p - this._margin.left - this._margin.right);\n      wrap[h](horizontal ? hSize - hBuff - p - this._margin.top - this._margin.bottom : space);\n\n      const res = wrap(tickFormat(d));\n      res.lines = res.lines.filter(d => d !== \"\");\n\n      res.width = res.lines.length ? Math.ceil(max(res.widths)) + fS / 4 : 0;\n      if (res.width % 2) res.width++;\n\n      res.height = res.lines.length ? Math.ceil(res.lines.length * wrap.lineHeight()) + fS / 4 : 0;\n      if (res.height % 2) res.height++;\n\n      return res;\n\n    }\n\n    /** Calculates label offsets */\n    function calculateOffset(arr = []) {\n      let offset = 0;\n\n      arr.forEach(datum => {\n        const prev = arr[datum.i - 1];\n\n        const h = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"width\" : \"height\",\n              w = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"height\" : \"width\";\n\n        if (!prev) {\n          offset = 1;\n        }\n        else if (prev.position + prev[w] / 2 > datum.position - datum[w] / 2) {\n          if (offset) {\n            datum.offset = prev[h];\n            offset = 0;\n          }\n          else offset = 1;\n        }\n      });\n    }\n\n    textData = textData\n      .map(datum => {\n        datum.rotate = this._labelRotation;\n        datum.space = calculateSpace.bind(this)(datum);\n        const res = calculateLabelSize.bind(this)(datum);\n        return Object.assign(res, datum);\n      });\n\n    const offsetEnabled = this._labelOffset && textData.some(d => d.truncated);\n\n    if (this._labelRotation) {\n      textData = textData\n        .map(datum => {\n          datum.rotate = true;\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n    }\n    else if (offsetEnabled) {\n\n      textData = textData\n        .map(datum => {\n\n          datum.space = calculateSpace.bind(this)(datum, 2);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n\n      calculateOffset.bind(this)(textData);\n\n    }\n\n    /**\n     * \"spillover\" will contain the pixel spillover of the first and last label,\n     * and then adjust the scale range accordingly.\n     */\n    const spillover = [0, 0];\n    for (let index = 0; index < 2; index++) {\n      const datum = textData[index ? textData.length - 1 : 0];\n      if (!datum) break;\n      const {height, position, rotate, width} = datum;\n      const compPosition = index ? rangeOuter[1] : rangeOuter[0];\n      const halfSpace = (rotate || !horizontal ? height : width) / 2;\n      const spill = index ? position + halfSpace - compPosition : position - halfSpace - compPosition;\n      spillover[index] = spill;\n    }\n\n    const first = range[0];\n    const last = range[range.length - 1];\n    const newRange = [first - spillover[0], last - spillover[1]];\n    if (this._range) {\n      if (this._range[0] !== undefined) newRange[0] = this._range[0];\n      if (this._range[this._range.length - 1] !== undefined) newRange[1] = this._range[this._range.length - 1];\n    }\n\n    if (newRange[0] !== first || newRange[1] !== last) {\n      setScale.bind(this)(newRange);\n\n      textData = labels\n        .map((d, i) => {\n\n          const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n                fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n                position = this._getPosition(d);\n\n          const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n          return {d, i, fF, fS, lineHeight, position};\n\n        });\n\n      textData = textData\n        .map(datum => {\n          datum.rotate = this._labelRotation;\n          datum.space = calculateSpace.bind(this)(datum, offsetEnabled ? 2 : 1);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(res, datum);\n        });\n      calculateOffset.bind(this)(textData);\n    }\n\n    const labelHeight = max(textData, t => t.height) || 0;\n    this._labelRotation = horizontal && this._labelRotation === undefined\n      ? textData.some(datum => {\n        const {i, height, position, truncated} = datum;\n        const prev = textData[i - 1];\n        return truncated || i && prev.position + prev.height / 2 > position - height / 2;\n      }) : this._labelRotation;\n\n    const globalOffset = this._labelOffset ? max(textData, d => d.offset || 0) : 0;\n    textData.forEach(datum => datum.offset = datum.offset ? globalOffset : 0);\n\n    const tBuff = this._shape === \"Line\" ? 0 : hBuff;\n    const bounds = this._outerBounds = {\n      [height]: (max(textData, t => Math.ceil(t[t.rotate || !horizontal ? \"width\" : \"height\"] + t.offset)) || 0) + (textData.length ? p : 0),\n      [width]: rangeOuter[rangeOuter.length - 1] - rangeOuter[0],\n      [x]: rangeOuter[0]\n    };\n\n    bounds[height] = max([this._minSize, bounds[height]]);\n\n    margin[this._orient] += hBuff;\n    margin[opposite] = this._gridSize !== undefined ? max([this._gridSize, tBuff]) : this[`_${height}`] - margin[this._orient] - bounds[height] - p;\n    bounds[height] += margin[opposite] + margin[this._orient];\n    bounds[y] = this._align === \"start\" ? this._padding\n      : this._align === \"end\" ? this[`_${height}`] - bounds[height] - this._padding\n      : this[`_${height}`] / 2 - bounds[height] / 2;\n\n    const group = elem(`g#d3plus-Axis-${this._uuid}`, {parent});\n    this._group = group;\n\n    const grid = elem(\"g.grid\", {parent: group}).selectAll(\"line\")\n      .data((this._gridSize !== 0 ? this._grid || this._scale === \"log\" && !this._gridLog ? labels : ticks : []).map(d => ({id: d})), d => d.id);\n\n    grid.exit().transition(t)\n      .attr(\"opacity\", 0)\n      .call(this._gridPosition.bind(this))\n      .remove();\n\n    grid.enter().append(\"line\")\n        .attr(\"opacity\", 0)\n        .attr(\"clip-path\", `url(#${clipId})`)\n        .call(this._gridPosition.bind(this), true)\n      .merge(grid).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._gridPosition.bind(this));\n\n    const labelOnly = labels.filter((d, i) => textData[i].lines.length && !ticks.includes(d));\n\n    const rotated = textData.some(d => d.rotate);\n\n    let tickData = ticks.concat(labelOnly)\n      .map(d => {\n\n        const data = textData.find(td => td.d === d);\n\n        const xPos = this._getPosition(d);\n        const space = data ? data.space : 0;\n        const lines = data ? data.lines.length : 1;\n        const lineHeight = data ? data.lineHeight : 1;\n\n        const labelOffset = data && this._labelOffset ? data.offset : 0;\n\n        const labelWidth = horizontal ? space : bounds.width - margin[this._position.opposite] - hBuff - margin[this._orient] + p;\n\n        const offset = margin[opposite],\n              size = (hBuff + labelOffset) * (flip ? -1 : 1),\n              yPos = flip ? bounds[y] + bounds[height] - offset : bounds[y] + offset;\n\n        const tickConfig = {\n          id: d,\n          labelBounds: rotated && data\n            ? {\n              x: -data.width / 2 + data.fS / 4,\n              y: this._orient === \"bottom\" ? size + p + (data.width - lineHeight * lines) / 2 : size - p * 2 - (data.width + lineHeight * lines) / 2,\n              width: data.width,\n              height: data.height\n            } : {\n              x: horizontal ? -space / 2 : this._orient === \"left\" ? -labelWidth - p + size : size + p,\n              y: horizontal ? this._orient === \"bottom\" ? size + p : size - p - labelHeight : -space / 2,\n              width: horizontal ? space : labelWidth,\n              height: horizontal ? labelHeight : space\n            },\n          rotate: data ? data.rotate : false,\n          size: labels.includes(d) ? size : this._data.find(t => +t === d) ? Math.ceil(size / 2) : 0,\n          text: labels.includes(d) ? tickFormat(d) : false,\n          tick: ticks.includes(d),\n          [x]: xPos + (this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0),\n          [y]: yPos\n        };\n\n        return tickConfig;\n\n      });\n\n    if (this._shape === \"Line\") {\n      tickData = tickData.concat(tickData.map(d => {\n        const dupe = Object.assign({}, d);\n        dupe[y] += d.size;\n        return dupe;\n      }));\n    }\n    \n    new shapes[this._shape]()\n      .data(tickData)\n      .duration(this._duration)\n      .labelConfig({\n        ellipsis: d => d && d.length ? `${d}...` : \"\",\n        rotate: d => d.rotate ? -90 : 0\n      })\n      .select(elem(\"g.ticks\", {parent: group}).node())\n      .config(this._shapeConfig)\n      .render();\n\n    const bar = group.selectAll(\"line.bar\").data([null]);\n\n    bar.enter().append(\"line\")\n        .attr(\"class\", \"bar\")\n        .attr(\"opacity\", 0)\n        .call(this._barPosition.bind(this))\n      .merge(bar).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._barPosition.bind(this));\n\n    this._titleClass\n      .data(this._title ? [{text: this._title}] : [])\n      .duration(this._duration)\n      .height(margin[this._orient])\n      .rotate(this._orient === \"left\" ? -90 : this._orient === \"right\" ? 90 : 0)\n      .select(elem(\"g.d3plus-Axis-title\", {parent: group}).node())\n      .text(d => d.text)\n      .verticalAlign(\"middle\")\n      .width(range[range.length - 1] - range[0])\n      .x(horizontal ? range[0] : this._orient === \"left\" ? bounds.x + margin.left / 2 - (range[range.length - 1] - range[0]) / 2 : bounds.x + bounds.width - margin.right / 2 - (range[range.length - 1] - range[0]) / 2)\n      .y(horizontal ? this._orient === \"bottom\" ? bounds.y + bounds.height - margin.bottom : bounds.y : range[0] + (range[range.length - 1] - range[0]) / 2 - margin[this._orient] / 2)\n      .config(this._titleConfig)\n      .render();\n\n    this._lastScale = this._getPosition.bind(this);\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the axis line style and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  barConfig(_) {\n    return arguments.length ? (this._barConfig = Object.assign(this._barConfig, _), this) : this._barConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc An array of data points, which helps determine which ticks should be shown and which time resolution should be displayed.\n      @param {Array} [*value*]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale domain of the axis and returns the current class instance.\n      @param {Array} [*value* = [0, 10]]\n      @chainable\n  */\n  domain(_) {\n    return arguments.length ? (this._domain = _, this) : this._domain;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the transition duration of the axis and returns the current class instance.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  grid(_) {\n    return arguments.length ? (this._grid = _, this) : this._grid;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid config of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  gridConfig(_) {\n    return arguments.length ? (this._gridConfig = Object.assign(this._gridConfig, _), this) : this._gridConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid behavior of the axis when scale is logarithmic and returns the current class instance.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  gridLog(_) {\n    return arguments.length ? (this._gridLog = _, this) : this._gridLog;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid size of the axis and returns the current class instance.\n      @param {Number} [*value* = undefined]\n      @chainable\n  */\n  gridSize(_) {\n    return arguments.length ? (this._gridSize = _, this) : this._gridSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall height of the axis and returns the current class instance.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the visible tick labels of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  labels(_) {\n    return arguments.length ? (this._labels = _, this) : this._labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether offsets will be used to position some labels further away from the axis in order to allow space for the text.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelOffset(_) {\n    return arguments.length ? (this._labelOffset = _, this) : this._labelOffset;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether whether horizontal axis labels are rotated -90 degrees.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelRotation(_) {\n    return arguments.length ? (this._labelRotation = _, this) : this._labelRotation;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the maximum size allowed for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  maxSize(_) {\n    return arguments.length ? (this._maxSize = _, this) : this._maxSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the minimum size alloted for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  minSize(_) {\n    return arguments.length ? (this._minSize = _, this) : this._minSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *orient* is specified, sets the orientation of the shape and returns the current class instance. If *orient* is not specified, returns the current orientation.\n      @param {String} [*orient* = \"bottom\"] Supports `\"top\"`, `\"right\"`, `\"bottom\"`, and `\"left\"` orientations.\n      @chainable\n  */\n  orient(_) {\n    if (arguments.length) {\n\n      const horizontal = [\"top\", \"bottom\"].includes(_),\n            opps = {top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\"};\n\n      this._position = {\n        horizontal,\n        width: horizontal ? \"width\" : \"height\",\n        height: horizontal ? \"height\" : \"width\",\n        x: horizontal ? \"x\" : \"y\",\n        y: horizontal ? \"y\" : \"x\",\n        opposite: opps[_]\n      };\n\n      return this._orient = _, this;\n\n    }\n    return this._orient;\n  }\n\n  /**\n      @memberof Axis\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the axis content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the padding between each tick label to the specified number and returns the current class instance.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the inner padding of band scale to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingInner(_) {\n    return arguments.length ? (this._paddingInner = _, this) : this._paddingInner;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the outer padding of band scales to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingOuter(_) {\n    return arguments.length ? (this._paddingOuter = _, this) : this._paddingOuter;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale range (in pixels) of the axis and returns the current class instance. The given array must have 2 values, but one may be `undefined` to allow the default behavior for that value.\n      @param {Array} [*value*]\n      @chainable\n  */\n  range(_) {\n    return arguments.length ? (this._range = _, this) : this._range;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale of the axis and returns the current class instance.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = _, this) : this._scale;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the \"padding\" property of the scale, often used in point scales.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  scalePadding(_) {\n    return arguments.length ? (this._scalePadding = _, this) : this._scalePadding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick shape constructor and returns the current class instance.\n      @param {String} [*value* = \"Line\"]\n      @chainable\n  */\n  shape(_) {\n    return arguments.length ? (this._shape = _, this) : this._shape;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick style of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  shapeConfig(_) {\n    return arguments.length ? (this._shapeConfig = assign(this._shapeConfig, _), this) : this._shapeConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick formatter and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  tickFormat(_) {\n    return arguments.length ? (this._tickFormat = _, this) : this._tickFormat;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  ticks(_) {\n    return arguments.length ? (this._ticks = _, this) : this._ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick size of the axis and returns the current class instance.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  tickSize(_) {\n    return arguments.length ? (this._tickSize = _, this) : this._tickSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the behavior of the abbreviations when you are using linear scale. This method accepts two options: \"normal\" (uses formatAbbreviate to determinate the abbreviation) and \"smallest\" (uses suffix from the smallest tick as reference in every tick).\n      @param {String} [*value* = \"normal\"]\n      @chainable\n  */\n  tickSuffix(_) {\n    return arguments.length ? (this._tickSuffix = _, this) : this._tickSuffix;\n  }\n\n  /**\n      @memberof Axis\n      @desc Defines a custom locale object to be used in time scale. This object must include the following properties: dateTime, date, time, periods, days, shortDays, months, shortMonths. For more information, you can revise [d3p.d3-time-format](https://github.com/d3/d3-time-format/blob/master/README.md#timeFormatLocale).\n      @param {Object} [*value* = undefined]\n      @chainable\n  */\n  timeLocale(_) {\n    return arguments.length ? (this._timeLocale = _, this) : this._timeLocale;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title of the axis and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n  */\n  title(_) {\n    return arguments.length ? (this._title = _, this) : this._title;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title configuration of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  titleConfig(_) {\n    return arguments.length ? (this._titleConfig = Object.assign(this._titleConfig, _), this) : this._titleConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall width of the axis and returns the current class instance.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n","import {default as Axis} from \"./Axis.js\";\n\n/**\n    @class AxisBottom\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn below the horizontal domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisBottom extends Axis {\n\n  /**\n      @memberof AxisBottom\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"bottom\");\n  }\n\n}\n","import {default as Axis} from \"./Axis.js\";\n\n/**\n    @class AxisLeft\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the left of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisLeft extends Axis {\n\n  /**\n      @memberof AxisLeft\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"left\");\n  }\n\n}\n","import {default as Axis} from \"./Axis.js\";\n\n/**\n    @class AxisRight\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the right of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisRight extends Axis {\n\n  /**\n      @memberof AxisRight\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"right\");\n  }\n\n}\n","import {default as Axis} from \"./Axis.js\";\n\n/**\n    @class AxisTop\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn above the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisTop extends Axis {\n\n  /**\n      @memberof AxisTop\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"top\");\n  }\n\n}\n"],"names":["d","constructor","Date","Number","length","s","dayFormat","RegExp","exec","year","indexOf","replace","substring","date","setFullYear","strFormat","quarterPrefix","quarterSuffix","quarter","toLowerCase","includes","dateTime","time","periods","days","shortDays","months","shortMonths","floorPow","Math","pow","floor","log10","calculateTicks","scale","useData","tickScale","scales","scaleSqrt","domain","range","negativeRange","size","abs","step","_scale","_data","dataExtent","extent","distance","reduce","n","i","arr","dist","Infinity","newStep","round","min","ticks","dataNumbers","map","filter","t","diff","find","shift","unshift","pop","push","Axis","_align","_barConfig","_domain","_duration","_gridConfig","_gridLog","_height","_labelOffset","_labelRotation","orient","_outerBounds","width","height","x","y","_padding","_paddingInner","_paddingOuter","_scalePadding","_shape","_shapeConfig","fill","tick","label","text","labelBounds","labelConfig","fontColor","fontFamily","TextBox","fontResize","fontSize","constant","padding","textAnchor","rtl","detectRTL","_select","node","_orient","verticalAlign","r","stroke","strokeWidth","_tickSize","_tickSuffix","_tickUnit","_timeLocale","undefined","_titleClass","_titleConfig","colorDefaults","dark","_width","bar","_position","opposite","offset","_margin","position","x1mod","_d3Scale","bandwidth","x2mod","sortedDomain","_d3ScaleNegative","concat","sort","a","b","call","attrize","attr","_getPosition","reverse","labels","bind","lines","last","_lastScale","xDiff","xPos","id","callback","select","append","timeLocale","locale","_locale","timeFormatDefaultLocale","format","horizontal","clipId","_uuid","flip","p","parent","rangeOuter","transition","duration","tickValue","tickGet","margin","top","right","bottom","left","tickFormat","_tickFormat","isNaN","formatDate","formatLocale","separator","suffixes","suff","number","formatAbbreviate","toString","setScale","newRange","_range","slice","minRange","maxRange","sizeInner","buckets","d3Range","scaleTicks","d3Ticks","_labels","pad","ceil","charAt","toUpperCase","paddingInner","paddingOuter","smallestNumber","copy","percentScale","scaleLinear","leftPercentage","zero","smallestPositive","smallestNegative","Object","is","smallestPosPow","smallestNegPow","_ticks","_getTicks","_getLabels","tens","substr","some","splice","pixels","_availableTicks","forEach","closest","_visibleTicks","calculateSpace","datum","prevPosition","textData","prevSpace","nextPosition","nextSpace","_title","lineHeight","titleWrap","textWrap","hBuff","wBuff","max","fF","fS","calculateLabelSize","rotate","space","h","w","wSize","_maxSize","hSize","wrap","res","widths","calculateOffset","prev","assign","offsetEnabled","truncated","spillover","index","compPosition","halfSpace","spill","first","labelHeight","globalOffset","tBuff","bounds","_minSize","_gridSize","group","elem","_group","grid","selectAll","data","_grid","exit","_gridPosition","remove","enter","merge","labelOnly","rotated","tickData","td","labelOffset","labelWidth","yPos","tickConfig","dupe","shapes","ellipsis","config","render","_barPosition","setTimeout","_","arguments","opps","BaseClass","AxisBottom","AxisLeft","AxisRight","AxisTop"],"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"}