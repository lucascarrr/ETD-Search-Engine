{"version":3,"file":"d3plus-legend.js","sources":["../src/ckmeans.js","../src/Legend.js","../src/ColorScale.js"],"sourcesContent":["/**\n    @desc Sort an array of numbers by their numeric value, ensuring that the array is not changed in place.\n\nThis is necessary because the default behavior of .sort in JavaScript is to sort arrays as string values\n\n[1, 10, 12, 102, 20].sort()\n// output\n[1, 10, 102, 12, 20]\n\n    @param {Array<number>} array input array\n    @return {Array<number>} sorted array\n    @private\n    @example\nnumericSort([3, 2, 1]) // => [1, 2, 3]\n*/\nfunction numericSort(array) {\n  return array.slice().sort((a, b) => a - b);\n}\n\n/**\n    For a sorted input, counting the number of unique values is possible in constant time and constant memory. This is a simple implementation of the algorithm.\n\n    Values are compared with `===`, so objects and non-primitive objects are not handled in any special way.\n    @private\n    @param {Array} input an array of primitive values.\n    @returns {number} count of unique values\n    @example\nuniqueCountSorted([1, 2, 3]); // => 3\nuniqueCountSorted([1, 1, 1]); // => 1\n*/\nfunction uniqueCountSorted(input) {\n  let lastSeenValue, uniqueValueCount = 0;\n  for (let i = 0; i < input.length; i++) {\n    if (i === 0 || input[i] !== lastSeenValue) {\n      lastSeenValue = input[i];\n      uniqueValueCount++;\n    }\n  }\n  return uniqueValueCount;\n}\n\n/**\n    Create a new column x row matrix.\n    @private\n    @param {number} columns\n    @param {number} rows\n    @return {Array<Array<number>>} matrix\n    @example\nmakeMatrix(10, 10);\n*/\nfunction makeMatrix(columns, rows) {\n  const matrix = [];\n  for (let i = 0; i < columns; i++) {\n    const column = [];\n    for (let j = 0; j < rows; j++) column.push(0);\n    matrix.push(column);\n  }\n  return matrix;\n}\n\n/**\n    Generates incrementally computed values based on the sums and sums of squares for the data array\n    @private\n    @param {number} j\n    @param {number} i\n    @param {Array<number>} sums\n    @param {Array<number>} sumsOfSquares\n    @return {number}\n    @example\nssq(0, 1, [-1, 0, 2], [1, 1, 5]);\n*/\nfunction ssq(j, i, sums, sumsOfSquares) {\n  let sji; // s(j, i)\n\n  if (j > 0) {\n    const muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)\n    sji = sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;\n  }\n  else sji = sumsOfSquares[i] - sums[i] * sums[i] / (i + 1);\n\n  if (sji < 0) return 0;\n  return sji;\n}\n\n/**\n    Function that recursively divides and conquers computations for cluster j\n    @private\n    @param {number} iMin Minimum index in cluster to be computed\n    @param {number} iMax Maximum index in cluster to be computed\n    @param {number} cluster Index of the cluster currently being computed\n    @param {Array<Array<number>>} matrix\n    @param {Array<Array<number>>} backtrackMatrix\n    @param {Array<number>} sums\n    @param {Array<number>} sumsOfSquares\n*/\nfunction fillMatrixColumn(iMin, iMax, cluster, matrix, backtrackMatrix, sums, sumsOfSquares) {\n  if (iMin > iMax) return;\n\n  // Start at midpoint between iMin and iMax\n  const i = Math.floor((iMin + iMax) / 2);\n\n  matrix[cluster][i] = matrix[cluster - 1][i - 1];\n  backtrackMatrix[cluster][i] = i;\n\n  let jlow = cluster; // the lower end for j\n  if (iMin > cluster) jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);\n  jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);\n\n  let jhigh = i - 1; // the upper end for j\n  if (iMax < matrix.length - 1) jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);\n\n  for (let j = jhigh; j >= jlow; --j) {\n    const sji = ssq(j, i, sums, sumsOfSquares);\n\n    if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) break;\n\n    // Examine the lower bound of the cluster border\n    const sjlowi = ssq(jlow, i, sums, sumsOfSquares);\n\n    const ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];\n\n    if (ssqjlow < matrix[cluster][i]) {\n      // Shrink the lower bound\n      matrix[cluster][i] = ssqjlow;\n      backtrackMatrix[cluster][i] = jlow;\n    }\n    jlow++;\n\n    const ssqj = sji + matrix[cluster - 1][j - 1];\n    if (ssqj < matrix[cluster][i]) {\n      matrix[cluster][i] = ssqj;\n      backtrackMatrix[cluster][i] = j;\n    }\n  }\n\n  fillMatrixColumn(iMin, i - 1, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);\n  fillMatrixColumn(i + 1, iMax, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);\n\n}\n\n/**\n    Initializes the main matrices used in Ckmeans and kicks off the divide and conquer cluster computation strategy\n    @private\n    @param {Array<number>} data sorted array of values\n    @param {Array<Array<number>>} matrix\n    @param {Array<Array<number>>} backtrackMatrix\n*/\nfunction fillMatrices(data, matrix, backtrackMatrix) {\n  const nValues = matrix[0] ? matrix[0].length : 0;\n\n  // Shift values by the median to improve numeric stability\n  const shift = data[Math.floor(nValues / 2)];\n\n  // Cumulative sum and cumulative sum of squares for all values in data array\n  const sums = [];\n  const sumsOfSquares = [];\n\n  // Initialize first column in matrix & backtrackMatrix\n  for (let i = 0, shiftedValue = void 0; i < nValues; ++i) {\n    shiftedValue = data[i] - shift;\n    if (i === 0) {\n      sums.push(shiftedValue);\n      sumsOfSquares.push(shiftedValue * shiftedValue);\n    }\n    else {\n      sums.push(sums[i - 1] + shiftedValue);\n      sumsOfSquares.push(sumsOfSquares[i - 1] + shiftedValue * shiftedValue);\n    }\n\n    // Initialize for cluster = 0\n    matrix[0][i] = ssq(0, i, sums, sumsOfSquares);\n    backtrackMatrix[0][i] = 0;\n  }\n\n  // Initialize the rest of the columns\n  for (let cluster = 1; cluster < matrix.length; ++cluster) {\n    let iMin = nValues - 1;\n    if (cluster < matrix.length - 1) iMin = cluster;\n    fillMatrixColumn(iMin, nValues - 1, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);\n  }\n}\n\n/**\n    @desc Ported to ES6 from the excellent [simple-statistics](https://github.com/simple-statistics/simple-statistics) packages.\n\nCkmeans clustering is an improvement on heuristic-based clustering approaches like Jenks. The algorithm was developed in [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf) as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach to the problem of clustering numeric data into groups with the least within-group sum-of-squared-deviations.\n\nMinimizing the difference within groups - what Wang & Song refer to as `withinss`, or within sum-of-squares, means that groups are optimally homogenous within and the data is split into representative groups. This is very useful for visualization, where you may want to represent a continuous variable in discrete color or style groups. This function can provide groups that emphasize differences between data.\n\nBeing a dynamic approach, this algorithm is based on two matrices that store incrementally-computed values for squared deviations and backtracking indexes.\n\nThis implementation is based on Ckmeans 3.4.6, which introduced a new divide and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).\n\nUnlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html), this implementation does not include any code to automatically determine the optimal number of clusters: this information needs to be explicitly provided.\n\n### References\n_Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic\nProgramming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859 from The R Journal Vol. 3/2, December 2011\n    @param {Array<number>} data input data, as an array of number values\n    @param {number} nClusters number of desired classes. This cannot be greater than the number of values in the data array.\n    @returns {Array<Array<number>>} clustered input\n    @example\nckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);\n// The input, clustered into groups of similar numbers.\n//= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);\n*/\nexport default function(data, nClusters) {\n\n  if (nClusters > data.length) {\n    throw new Error(\"Cannot generate more classes than there are data values\");\n  }\n\n  const sorted = numericSort(data);\n\n  // we'll use this as the maximum number of clusters\n  const uniqueCount = uniqueCountSorted(sorted);\n\n  // if all of the input values are identical, there's one cluster with all of the input in it.\n  if (uniqueCount === 1) {\n    return [sorted];\n  }\n\n  const backtrackMatrix = makeMatrix(nClusters, sorted.length),\n        matrix = makeMatrix(nClusters, sorted.length);\n\n  // This is a dynamic programming way to solve the problem of minimizing within-cluster sum of squares. It's similar to linear regression in this way, and this calculation incrementally computes the sum of squares that are later read.\n  fillMatrices(sorted, matrix, backtrackMatrix);\n\n  // The real work of Ckmeans clustering happens in the matrix generation: the generated matrices encode all possible clustering combinations, and once they're generated we can solve for the best clustering groups very quickly.\n  let clusterRight = backtrackMatrix[0] ? backtrackMatrix[0].length - 1 : 0;\n  const clusters = [];\n\n  // Backtrack the clusters from the dynamic programming matrix. This starts at the bottom-right corner of the matrix (if the top-left is 0, 0), and moves the cluster target with the loop.\n  for (let cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {\n\n    const clusterLeft = backtrackMatrix[cluster][clusterRight];\n\n    // fill the cluster from the sorted input by taking a slice of the array. the backtrack matrix makes this easy - it stores the indexes where the cluster should start and end.\n    clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);\n\n    if (cluster > 0) clusterRight = clusterLeft - 1;\n\n  }\n\n  return clusters;\n\n}\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {max, sum} from \"d3-array\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorDefaults} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {rtl as detectRTL, TextBox, textWidth, textWrap} from \"d3plus-text\";\n\nconst padding = 5;\n\n/**\n    @class Legend\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data. If *data* is specified, immediately draws based on the specified array and returns the current class instance. If *data* is not specified on instantiation, it can be passed/updated after instantiation using the [data](#shape.data) method.\n*/\nexport default class Legend extends BaseClass {\n\n  /**\n      @memberof Legend\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._titleClass = new TextBox();\n\n    this._align = \"center\";\n    this._data = [];\n    this._direction = \"row\";\n    this._duration = 600;\n    this._height = 200;\n    this._id = accessor(\"id\");\n    this._label = accessor(\"id\");\n    this._lineData = [];\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._shape = constant(\"Rect\");\n    this._shapes = [];\n    this._shapeConfig = {\n      fill: accessor(\"color\"),\n      height: constant(12),\n      hitArea: (dd, i) => {\n        const d = this._lineData[i],\n              h = max([d.height, d.shapeHeight]);\n        return {width: d.width + d.shapeWidth, height: h, x: -d.shapeWidth / 2, y: -h / 2};\n      },\n      labelBounds: (dd, i) => {\n        const d = this._lineData[i];\n        let x = d.shapeWidth / 2;\n        if (d.shape === \"Circle\") x -= d.shapeR / 2;\n        const height = max([d.shapeHeight, d.height]);\n        const rtlMod = this._rtl ? d.shapeWidth + d.width + this._padding * 2 : 0;\n        return {width: d.width, height, x: x + padding - rtlMod, y: -height / 2};\n      },\n      labelConfig: {\n        fontColor: constant(colorDefaults.dark),\n        fontFamily: this._titleClass.fontFamily(),\n        fontResize: false,\n        fontSize: constant(10),\n        verticalAlign: \"middle\"\n      },\n      opacity: 1,\n      r: constant(6),\n      width: constant(12),\n      x: (d, i) => {\n        const datum = this._lineData[i];\n        const y = datum.y;\n        const pad = this._align === \"left\" || this._align === \"right\" && this._direction === \"column\" ? 0 : this._align === \"center\"\n          ? (this._outerBounds.width - this._rowWidth(this._lineData.filter(l => y === l.y))) / 2\n          : this._outerBounds.width - this._rowWidth(this._lineData.filter(l => y === l.y));\n        const prevWords = this._lineData.slice(0, i).filter(l => y === l.y);\n        const rtlMod = this._rtl ? datum.width + this._padding : 0;\n        return this._rowWidth(prevWords) + this._padding * (prevWords.length ? datum.sentence ? 2 : 1 : 0) +\n               this._outerBounds.x + datum.shapeWidth / 2 + pad + rtlMod;\n      },\n      y: (d, i) => {\n        const ld = this._lineData[i];\n        return ld.y + this._titleHeight + this._outerBounds.y +\n               max(\n                 this._lineData.filter(l => ld.y === l.y).map(l => l.height)\n                 .concat(this._data.map((l, x) => this._fetchConfig(\"height\", l, x)))\n               ) / 2;\n      }\n    };\n    this._titleConfig = {\n      fontSize: 12\n    };\n    this._verticalAlign = \"middle\";\n    this._width = 400;\n\n  }\n\n  _fetchConfig(key, d, i) {\n    const val = this._shapeConfig[key] !== undefined ? this._shapeConfig[key] : this._shapeConfig.labelConfig[key];\n    if (!val && key === \"lineHeight\") return this._fetchConfig(\"fontSize\", d, i) * 1.4;\n    return typeof val === \"function\" ? val(d, i) : val;\n  }\n\n  _rowHeight(row) {\n    return max(row.map(d => d.height).concat(row.map(d => d.shapeHeight))) + this._padding;\n  }\n\n  _rowWidth(row) {\n    return sum(row.map((d, i) => {\n      const p = this._padding * (i === row.length - 1 ? 0 : d.width ? 2 : 1);\n      return d.shapeWidth + d.width + p;\n    }));\n  }\n\n  /**\n      @memberof Legend\n      @desc Renders the current Legend to the page. If a *callback* is specified, it will be called once the legend is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").attr(\"width\", `${this._width}px`).attr(\"height\", `${this._height}px`).node());\n\n    // Legend Container <g> Groups\n    this._group = elem(\"g.d3plus-Legend\", {parent: this._select});\n    this._titleGroup = elem(\"g.d3plus-Legend-title\", {parent: this._group});\n    this._shapeGroup = elem(\"g.d3plus-Legend-shape\", {parent: this._group});\n\n    let availableHeight = this._height;\n    this._titleHeight = 0;\n    this._titleWidth = 0;\n    if (this._title) {\n\n      const f = this._titleConfig.fontFamily || this._titleClass.fontFamily()(),\n            s = this._titleConfig.fontSize || this._titleClass.fontSize()();\n      let lH = lH = this._titleConfig.lineHeight || this._titleClass.lineHeight();\n      lH = lH ? lH() : s * 1.4;\n\n      const res = textWrap()\n        .fontFamily(f)\n        .fontSize(s)\n        .lineHeight(lH)\n        .width(this._width)\n        .height(this._height)(this._title);\n      this._titleHeight = lH + res.lines.length + this._padding;\n      this._titleWidth = max(res.widths);\n      availableHeight -= this._titleHeight;\n    }\n\n    // Calculate Text Sizes\n    this._lineData = this._data.map((d, i) => {\n\n      const label = this._label(d, i);\n      const shape = this._shape(d, i);\n      const r = this._fetchConfig(\"r\", d, i);\n\n      let res = {\n        data: d,\n        i,\n        id: this._id(d, i),\n        shape,\n        shapeR: r,\n        shapeWidth: shape === \"Circle\" ? r * 2 : this._fetchConfig(\"width\", d, i),\n        shapeHeight: shape === \"Circle\" ? r * 2 : this._fetchConfig(\"height\", d, i),\n        y: 0\n      };\n\n      if (!label) {\n        res.sentence = false;\n        res.words = [];\n        res.height = 0;\n        res.width = 0;\n        return res;\n      }\n\n      const f = this._fetchConfig(\"fontFamily\", d, i),\n            lh = this._fetchConfig(\"lineHeight\", d, i),\n            s = this._fetchConfig(\"fontSize\", d, i);\n\n      const h = availableHeight - (this._data.length + 1) * this._padding,\n            w = this._width;\n\n      const newRes = textWrap()\n        .fontFamily(f)\n        .fontSize(s)\n        .lineHeight(lh)\n        .width(w)\n        .height(h)(label);\n\n      res = Object.assign(res, newRes);\n\n      res.width = Math.ceil(max(res.lines.map(t => textWidth(t, {\"font-family\": f, \"font-size\": s})))) + padding * 2;\n      res.height = Math.ceil(res.lines.length * (lh + 1));\n      res.og = {height: res.height, width: res.width};\n      res.f = f;\n      res.s = s;\n      res.lh = lh;\n\n      return res;\n\n    });\n\n    let spaceNeeded;\n    const availableWidth = this._width - this._padding * 2;\n    spaceNeeded = this._rowWidth(this._lineData);\n\n    if (this._direction === \"column\" || spaceNeeded > availableWidth) {\n      let lines = 1, newRows = [];\n\n      const maxLines = max(this._lineData.map(d => d.words.length));\n      this._wrapLines = function() {\n\n        lines++;\n\n        if (lines > maxLines) return;\n\n        const wrappable = lines === 1 ? this._lineData.slice()\n          : this._lineData.filter(d => d.width + d.shapeWidth + this._padding * (d.width ? 2 : 1) > availableWidth && d.words.length >= lines)\n              .sort((a, b) => b.sentence.length - a.sentence.length);\n\n        if (wrappable.length && availableHeight > wrappable[0].height * lines) {\n\n          let truncated = false;\n          for (let x = 0; x < wrappable.length; x++) {\n            const label = wrappable[x];\n            const h = label.og.height * lines, w = label.og.width * (1.5 * (1 / lines));\n            const res = textWrap().fontFamily(label.f).fontSize(label.s).lineHeight(label.lh).width(w).height(h)(label.sentence);\n            if (!res.truncated) {\n              label.width = Math.ceil(max(res.lines.map(t => textWidth(t, {\"font-family\": label.f, \"font-size\": label.s})))) + label.s;\n              label.height = res.lines.length * (label.lh + 1);\n            }\n            else {\n              truncated = true;\n              break;\n            }\n          }\n          if (!truncated) this._wrapRows();\n        }\n        else {\n          newRows = [];\n          return;\n        }\n\n      };\n\n      this._wrapRows = function() {\n        newRows = [];\n        let row = 1, rowWidth = 0;\n        for (let i = 0; i < this._lineData.length; i++) {\n          const d = this._lineData[i],\n                w = d.width + this._padding * (d.width ? 2 : 1) + d.shapeWidth;\n          if (sum(newRows.map(row => max(row, d => max([d.height, d.shapeHeight])))) > availableHeight) {\n            newRows = [];\n            break;\n          }\n          if (w > availableWidth) {\n            newRows = [];\n            this._wrapLines();\n            break;\n          }\n          else if (rowWidth + w < availableWidth) {\n            rowWidth += w;\n          }\n          else if (this._direction !== \"column\") {\n            rowWidth = w;\n            row++;\n          }\n          if (!newRows[row - 1]) newRows[row - 1] = [];\n          newRows[row - 1].push(d);\n          if (this._direction === \"column\") {\n            rowWidth = 0;\n            row++;\n          }\n        }\n      };\n\n      this._wrapRows();\n\n      if (!newRows.length || sum(newRows, this._rowHeight.bind(this)) + this._padding > availableHeight) {\n        spaceNeeded = sum(this._lineData.map(d => d.shapeWidth + this._padding)) - this._padding;\n        for (let i = 0; i < this._lineData.length; i++) {\n          this._lineData[i].width = 0;\n          this._lineData[i].height = 0;\n        }\n        this._wrapRows();\n      }\n\n      if (newRows.length && sum(newRows, this._rowHeight.bind(this)) + this._padding < availableHeight) {\n        newRows.forEach((row, i) => {\n          row.forEach(d => {\n            if (i) {\n              d.y = sum(newRows.slice(0, i), this._rowHeight.bind(this));\n            }\n          });\n        });\n        spaceNeeded = max(newRows, this._rowWidth.bind(this));\n      }\n    }\n\n    const innerHeight = max(this._lineData, (d, i) => max([d.height, this._fetchConfig(\"height\", d.data, i)]) + d.y) + this._titleHeight,\n          innerWidth = max([spaceNeeded, this._titleWidth]);\n\n    this._outerBounds.width = innerWidth;\n    this._outerBounds.height = innerHeight;\n\n    let xOffset = this._padding,\n        yOffset = this._padding;\n    if (this._align === \"center\") xOffset = (this._width - innerWidth) / 2;\n    else if (this._align === \"right\") xOffset = this._width - this._padding - innerWidth;\n    if (this._verticalAlign === \"middle\") yOffset = (this._height - innerHeight) / 2;\n    else if (this._verticalAlign === \"bottom\") yOffset = this._height - this._padding - innerHeight;\n    this._outerBounds.x = xOffset;\n    this._outerBounds.y = yOffset;\n\n    this._titleClass\n      .data(this._title ? [{text: this._title}] : [])\n      .duration(this._duration)\n      .select(this._titleGroup.node())\n      .textAnchor({left: \"start\", center: \"middle\", right: \"end\"}[this._align])\n      .width(this._width - this._padding * 2)\n      .x(this._padding)\n      .y(this._outerBounds.y)\n      .config(this._titleConfig)\n      .render();\n\n    this._shapes = [];\n    const baseConfig = configPrep.bind(this)(this._shapeConfig, \"legend\"),\n          config = {\n            id: d => d.id,\n            label: d => d.label,\n            lineHeight: d => d.lH\n          };\n\n    const data = this._data.map((d, i) => {\n\n      const obj = {\n        __d3plus__: true,\n        data: d, i,\n        id: this._id(d, i),\n        label: this._lineData[i].width ? this._label(d, i) : false,\n        lH: this._fetchConfig(\"lineHeight\", d, i),\n        shape: this._shape(d, i)\n      };\n\n      return obj;\n\n    });\n\n    // Legend Shapes\n    this._shapes = [];\n    [\"Circle\", \"Rect\"].forEach(Shape => {\n\n      this._shapes.push(\n        new shapes[Shape]()\n          .parent(this)\n          .data(data.filter(d => d.shape === Shape))\n          .duration(this._duration)\n          .labelConfig({padding: 0})\n          .select(this._shapeGroup.node())\n          .verticalAlign(\"top\")\n          .config(assign({}, baseConfig, config))\n          .render()\n      );\n\n    });\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the active method for all shapes to the specified function and returns the current class instance. If *value* is not specified, returns the current active method.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    this._shapes.forEach(s => s.active(_));\n    return this;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance. If *value* is not specified, returns the current horizontal alignment.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape key will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Legend\n      @desc Sets the flow of the items inside the legend. If no value is passed, the current flow will be returned.\n      @param {String} [*value* = \"row\"]\n      @chainable\n  */\n  direction(_) {\n    return arguments.length ? (this._direction = _, this) : this._direction;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the transition duration of the legend and returns the current class instance. If *value* is not specified, returns the current duration.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the overall height of the legend and returns the current class instance. If *value* is not specified, returns the current height value.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the hover method for all shapes to the specified function and returns the current class instance. If *value* is not specified, returns the current hover method.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    this._shapes.forEach(s => s.hover(_));\n    return this;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current id accessor.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction value(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance. If *value* is not specified, returns the current label accessor, which is the [id](#shape.id) accessor by default.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Legend\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the legend content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the padding between each key to the specified number and returns the current class instance. If *value* is not specified, returns the current padding value.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    if (arguments.length) {\n      this._select = select(_);\n      this._rtl = detectRTL(this._select.node());\n      return this;\n    }\n    return this._select;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the shape accessor to the specified function or string and returns the current class instance. If *value* is not specified, returns the current shape accessor.\n      @param {Function|String} [*value* = \"Rect\"]\n      @chainable\n  */\n  shape(_) {\n    return arguments.length ? (this._shape = typeof _ === \"function\" ? _ : constant(_), this) : this._shape;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *config* is specified, sets the methods that correspond to the key/value pairs for each shape and returns the current class instance. If *config* is not specified, returns the current shape configuration.\n      @param {Object} [*config* = {}]\n      @chainable\n  */\n  shapeConfig(_) {\n    return arguments.length ? (this._shapeConfig = assign(this._shapeConfig, _), this) : this._shapeConfig;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the title of the legend and returns the current class instance. If *value* is not specified, returns the current title.\n      @param {String} [*value*]\n      @chainable\n  */\n  title(_) {\n    return arguments.length ? (this._title = _, this) : this._title;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the title configuration of the legend and returns the current class instance. If *value* is not specified, returns the current title configuration.\n      @param {Object} [*value*]\n      @chainable\n  */\n  titleConfig(_) {\n    return arguments.length ? (this._titleConfig = assign(this._titleConfig, _), this) : this._titleConfig;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the vertical alignment to the specified value and returns the current class instance. If *value* is not specified, returns the current vertical alignment.\n      @param {String} [*value* = \"middle\"] Supports `\"top\"` and `\"middle\"` and `\"bottom\"`.\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = _, this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the overall width of the legend and returns the current class instance. If *value* is not specified, returns the current width value.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {extent, max, min, quantile, range, deviation} from \"d3-array\";\nimport {interpolateRgb} from \"d3-interpolate\";\nimport {scaleLinear, scaleThreshold} from \"d3-scale\";\nimport {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {Axis} from \"d3plus-axis\";\nimport {colorDefaults, colorLighter} from \"d3plus-color\";\nimport {accessor, assign, BaseClass, constant, elem, unique} from \"d3plus-common\";\nimport {formatAbbreviate} from \"d3plus-format\";\nimport {Rect} from \"d3plus-shape\";\nimport {TextBox, textWidth} from \"d3plus-text\";\n\nimport ckmeans from \"./ckmeans.js\";\nimport Legend from \"./Legend.js\";\n\n/**\n    @class ColorScale\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data. If *data* is specified, immediately draws based on the specified array and returns the current class instance. If *data* is not specified on instantiation, it can be passed/updated after instantiation using the [data](#shape.data) method.\n*/\nexport default class ColorScale extends BaseClass {\n\n  /**\n      @memberof ColorScale\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._axisClass = new Axis();\n    this._axisConfig = {\n      gridSize: 0\n    };\n    this._axisTest = new Axis();\n    this._align = \"middle\";\n    this._buckets = 5;\n    this._bucketAxis = false;\n    this._bucketFormat = (tick, i, ticks, allValues) => {\n\n      const format = this._axisConfig.tickFormat\n        ? this._axisConfig.tickFormat : formatAbbreviate;\n\n      const next = ticks[i + 1];\n      const prev = i ? ticks[i - 1] : false;\n      const last = i === ticks.length - 1;\n      if (tick === next || last) {\n        const suffix = last && tick < max(allValues) ? \"+\" : \"\";\n        return `${format(tick)}${suffix}`;\n      }\n      else {\n        const mod = next ? next / 100 : tick / 100;\n\n        const pow = mod >= 1 || mod <= -1 ? Math.round(mod).toString().length - 1 : mod.toString().split(\".\")[1].replace(/([1-9])[1-9].*$/, \"$1\").length * -1;\n        const ten = Math.pow(10, pow);\n\n        const prevValue = prev === tick && i === 1\n          ? format(min([tick + ten, allValues.find(d => d > tick && d < next)]))\n          : format(tick);\n\n        const nextValue = tick && i === 1\n          ? format(next)\n          : format(max([next - ten, allValues.reverse().find(d => d > tick && d < next)]));\n\n        return this._bucketJoiner(prevValue, nextValue);\n\n      }\n    };\n    this._bucketJoiner = (a, b) => a !== b ? `${a} - ${b}` : `${a}`;\n    this._centered = true;\n    this._color = [\"#54478C\", \"#2C699A\", \"#0DB39E\", \"#83E377\", \"#EFEA5A\"];\n    this._colorMax = colorDefaults.on;\n    this._colorMid = colorDefaults.light;\n    this._colorMin = colorDefaults.off;\n    this._data = [];\n    this._duration = 600;\n    this._height = 200;\n    this._labelClass = new TextBox();\n    this._labelConfig = {\n      fontColor: colorDefaults.dark,\n      fontSize: 12\n    };\n    this._legendClass = new Legend();\n    this._legendConfig = {\n      shapeConfig: {\n        stroke: colorDefaults.dark,\n        strokeWidth: 1\n      }\n    };\n    this._midpoint = 0;\n    this._orient = \"bottom\";\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._rectClass = new Rect().parent(this);\n    this._rectConfig = {\n      stroke: \"#999\",\n      strokeWidth: 1\n    };\n    this._scale = \"linear\";\n    this._size = 10;\n    this._value = accessor(\"value\");\n    this._width = 400;\n\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Renders the current ColorScale to the page. If a *callback* is specified, it will be called once the ColorScale is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").attr(\"width\", `${this._width}px`).attr(\"height\", `${this._height}px`).node());\n\n    const horizontal = [\"bottom\", \"top\"].includes(this._orient);\n\n    const height = horizontal ? \"height\" : \"width\",\n          width = horizontal ? \"width\" : \"height\",\n          x = horizontal ? \"x\" : \"y\",\n          y = horizontal ? \"y\" : \"x\";\n\n    // Shape <g> Group\n    this._group = elem(\"g.d3plus-ColorScale\", {parent: this._select});\n\n    const allValues = this._data\n      .map(this._value)\n      .filter(d => d !== null && typeof d === \"number\")\n      .sort((a, b) => a - b);\n\n    const domain = this._domain || extent(allValues);\n    const negative = domain[0] < this._midpoint;\n    const positive = domain[1] > this._midpoint;\n    const diverging = negative && positive;\n\n    const numBuckets = min([\n      this._buckets instanceof Array ? this._buckets.length : this._buckets,\n      diverging && this._scale !== \"jenks\" ? 2 * Math.floor(unique(allValues).length / 2) - 1 : unique(allValues).length\n    ]);\n\n    let colors = diverging ? undefined : this._color, labels, ticks;\n\n    if (colors && !(colors instanceof Array)) {\n      colors = range(0, numBuckets, 1)\n        .map(i => colorLighter(colors, (i + 1) / numBuckets))\n        .reverse();\n    }\n\n    if (this._scale === \"jenks\") {\n\n      const buckets = min([colors ? colors.length : numBuckets, numBuckets, allValues.length]);\n\n      let jenks = [];\n\n      if (this._buckets instanceof Array) {\n        ticks = this._buckets;\n      }\n      else {\n\n        if (diverging && this._centered) {\n\n          const half = Math.floor(buckets / 2);\n          const residual = buckets % 2;\n\n          const negatives = allValues.filter(d => d < this._midpoint);\n          const negativesDeviation = deviation(negatives);\n\n          const positives = allValues.concat(this._midpoint).filter(d => d >= this._midpoint);\n          const positivesDeviation = deviation(positives);\n\n          const isNegativeMax = negativesDeviation > positivesDeviation ? 1 : 0;\n          const isPositiveMax = positivesDeviation > negativesDeviation ? 1 : 0;\n\n          const negativeJenks = ckmeans(negatives, min([half + residual * isNegativeMax, negatives.length]));\n          const positiveJenks = ckmeans(positives, min([half + residual * isPositiveMax, positives.length]));\n\n          jenks = negativeJenks.concat(positiveJenks);\n        }\n        else {\n          jenks = ckmeans(allValues, buckets);\n        }\n\n        ticks = jenks.map(c => c[0]);\n\n      }\n\n      const tickSet = new Set(ticks);\n\n      if (ticks.length !== tickSet.size) labels = Array.from(tickSet);\n\n      if (!colors) {\n        if (diverging) {\n          colors = [this._colorMin, this._colorMid, this._colorMax];\n          const negatives = ticks\n            .slice(0, buckets)\n            .filter((d, i) => d < this._midpoint && ticks[i + 1] <= this._midpoint);\n          const spanning = ticks\n            .slice(0, buckets)\n            .filter((d, i) => d <= this._midpoint && ticks[i + 1] > this._midpoint);\n          const positives = ticks\n            .slice(0, buckets)\n            .filter(d => d > this._midpoint);\n          const negativeColors = negatives.map((d, i) => !i ? colors[0] : colorLighter(colors[0], i / negatives.length));\n          const spanningColors = spanning.map(() => colors[1]);\n          const positiveColors = positives.map((d, i) => i === positives.length - 1 ? colors[2] : colorLighter(colors[2], 1 - (i + 1) / positives.length));\n          colors = negativeColors.concat(spanningColors).concat(positiveColors);\n        }\n        else {\n          colors = range(0, numBuckets, 1)\n            .map(i => colorLighter(this._colorMax, i / numBuckets))\n            .reverse();\n        }\n      }\n\n      if (ticks.length <= buckets) colors = colors.slice(-ticks.length);\n\n      colors = [colors[0]].concat(colors);\n\n      this._colorScale = scaleThreshold()\n        .domain(ticks)\n        .range(colors);\n\n    }\n    else {\n\n      let buckets = this._buckets instanceof Array ? this._buckets : undefined;\n      if (diverging && !colors) {\n        const half = Math.floor(numBuckets / 2);\n        const negativeColorScale = interpolateRgb.gamma(2.2)(this._colorMin, this._colorMid);\n        const negativeColors = range(0, half, 1).map(i => negativeColorScale(i / half));\n        const spanningColors = (numBuckets % 2 ? [0] : []).map(() => this._colorMid);\n        const positiveColorScale = interpolateRgb.gamma(2.2)(this._colorMax, this._colorMid);\n        const positiveColors = range(0, half, 1).map(i => positiveColorScale(i / half)).reverse();\n        colors = negativeColors.concat(spanningColors).concat(positiveColors);\n        if (!buckets) {\n          const step = (colors.length - 1) / 2;\n          buckets = [domain[0], this._midpoint, domain[1]];\n          buckets = range(domain[0], this._midpoint, -(domain[0] - this._midpoint) / step)\n            .concat(range(this._midpoint, domain[1], (domain[1] - this._midpoint) / step))\n            .concat([domain[1]]);\n        }\n      }\n      else {\n        if (!colors) {\n          if (this._scale === \"buckets\" || this._scale === \"quantile\") {\n            colors = range(0, numBuckets, 1)\n              .map(i => colorLighter(negative ? this._colorMin : this._colorMax, i / numBuckets));\n            if (positive) colors = colors.reverse();\n          }\n          else {\n            colors = negative ? [this._colorMin, colorLighter(this._colorMin, 0.8)]\n              : [colorLighter(this._colorMax, 0.8), this._colorMax];\n          }\n        }\n        if (!buckets) {\n          if (this._scale === \"quantile\") {\n            const step = 1 / (colors.length - 1);\n            buckets = range(0, 1 + step / 2, step)\n              .map(d => quantile(allValues, d));\n          }\n          else if (diverging && this._color && this._centered) {\n            const negativeStep = (this._midpoint - domain[0]) / Math.floor(colors.length / 2);\n            const positiveStep = (domain[1] - this._midpoint) / Math.floor(colors.length / 2);\n            const negativeBuckets = range(domain[0], this._midpoint, negativeStep);\n            const positiveBuckets = range(this._midpoint, domain[1] + positiveStep / 2, positiveStep);\n\n            buckets = negativeBuckets.concat(positiveBuckets);\n          }\n          else {\n            const step = (domain[1] - domain[0]) / (colors.length - 1);\n            buckets = range(domain[0], domain[1] + step / 2, step);\n          }\n        }\n      }\n\n      if (this._scale === \"buckets\" || this._scale === \"quantile\") {\n        ticks = buckets;\n        colors = [colors[0]].concat(colors);\n      }\n      else if (this._scale === \"log\") {\n        const negativeBuckets = buckets.filter(d => d < 0);\n        if (negativeBuckets.length) {\n          const minVal = negativeBuckets[0];\n          const newNegativeBuckets = negativeBuckets.map(d => -Math.pow(Math.abs(minVal), d / minVal));\n          negativeBuckets.forEach((bucket, i) => {\n            buckets[buckets.indexOf(bucket)] = newNegativeBuckets[i];\n          });\n        }\n        const positiveBuckets = buckets.filter(d => d > 0);\n        if (positiveBuckets.length) {\n          const maxVal = positiveBuckets[positiveBuckets.length - 1];\n          const newPositiveBuckets = positiveBuckets.map(d => Math.pow(maxVal, d / maxVal));\n          positiveBuckets.forEach((bucket, i) => {\n            buckets[buckets.indexOf(bucket)] = newPositiveBuckets[i];\n          });\n        }\n        if (buckets.includes(0)) buckets[buckets.indexOf(0)] = 1;\n      }\n\n      this._colorScale = (this._scale === \"buckets\" || this._scale === \"quantile\" ? scaleThreshold : scaleLinear)()\n        .domain(buckets)\n        .range(colors);\n\n    }\n\n    if (this._colorScale.clamp) this._colorScale.clamp(true);\n\n    const gradient = this._bucketAxis || ![\"buckets\", \"jenks\", \"quantile\"].includes(this._scale);\n    const t = transition().duration(this._duration);\n    const groupParams = {enter: {opacity: 0}, exit: {opacity: 0}, parent: this._group, transition: t, update: {opacity: 1}};\n    const labelGroup = elem(\"g.d3plus-ColorScale-labels\", Object.assign({condition: gradient}, groupParams));\n    const rectGroup = elem(\"g.d3plus-ColorScale-Rect\", Object.assign({condition: gradient}, groupParams));\n    const legendGroup = elem(\"g.d3plus-ColorScale-legend\", Object.assign({condition: !gradient}, groupParams));\n\n    if (gradient) {\n\n      const offsets = {x: 0, y: 0};\n\n      const axisDomain = domain.slice();\n      if (this._bucketAxis) {\n        const last = axisDomain[axisDomain.length - 1];\n        const prev = axisDomain[axisDomain.length - 2];\n        const mod = last ? last / 10 : prev / 10;\n\n        const pow = mod >= 1 || mod <= -1 ? Math.round(mod).toString().length - 1 : mod.toString().split(\".\")[1].replace(/([1-9])[1-9].*$/, \"$1\").length * -1;\n        const ten = Math.pow(10, pow);\n        axisDomain[axisDomain.length - 1] = last + ten;\n      }\n\n      const axisConfig = assign({\n        domain: horizontal ? axisDomain : axisDomain.slice().reverse(),\n        duration: this._duration,\n        height: this._height,\n        labels: labels || ticks,\n        orient: this._orient,\n        padding: this._padding,\n        scale: this._scale === \"log\" ? \"log\" : \"linear\",\n        ticks,\n        width: this._width\n      }, this._axisConfig);\n\n      const labelConfig = assign({\n        height: this[`_${height}`] / 2,\n        width: this[`_${width}`] / 2\n      }, this._labelConfig);\n\n      this._labelClass.config(labelConfig);\n      const labelData = [];\n\n      if (horizontal && this._labelMin) {\n\n        const labelCSS = {\n          \"font-family\": this._labelClass.fontFamily()(this._labelMin),\n          \"font-size\": this._labelClass.fontSize()(this._labelMin),\n          \"font-weight\": this._labelClass.fontWeight()(this._labelMin)\n        };\n\n        if (labelCSS[\"font-family\"] instanceof Array) labelCSS[\"font-family\"] = labelCSS[\"font-family\"][0];\n        let labelMinWidth = textWidth(this._labelMin, labelCSS);\n\n        if (labelMinWidth && labelMinWidth < this[`_${width}`] / 2) {\n          labelData.push(this._labelMin);\n          labelMinWidth += this._padding;\n          if (horizontal) offsets.x += labelMinWidth;\n          axisConfig[width] -= labelMinWidth;\n        }\n\n      }\n      if (horizontal && this._labelMax) {\n\n        const labelCSS = {\n          \"font-family\": this._labelClass.fontFamily()(this._labelMax),\n          \"font-size\": this._labelClass.fontSize()(this._labelMax),\n          \"font-weight\": this._labelClass.fontWeight()(this._labelMax)\n        };\n\n        if (labelCSS[\"font-family\"] instanceof Array) labelCSS[\"font-family\"] = labelCSS[\"font-family\"][0];\n        let labelMaxWidth = textWidth(this._labelMax, labelCSS);\n\n        if (labelMaxWidth && labelMaxWidth < this[`_${width}`] / 2) {\n          labelData.push(this._labelMax);\n          labelMaxWidth += this._padding;\n          if (!horizontal) offsets.y += labelMaxWidth;\n          axisConfig[width] -= labelMaxWidth;\n        }\n\n      }\n\n      this._axisTest\n        .select(elem(\"g.d3plus-ColorScale-axisTest\", {enter: {opacity: 0}, parent: this._group}).node())\n        .config(axisConfig)\n        .duration(0)\n        .render();\n\n      const axisBounds = this._axisTest.outerBounds();\n\n      this._outerBounds[width] = this[`_${width}`] - this._padding * 2;\n      this._outerBounds[height] = axisBounds[height] + this._size;\n\n      this._outerBounds[x] = this._padding;\n      this._outerBounds[y] = this._padding;\n      if (this._align === \"middle\") this._outerBounds[y] = (this[`_${height}`] - this._outerBounds[height]) / 2;\n      else if (this._align === \"end\") this._outerBounds[y] = this[`_${height}`] - this._padding - this._outerBounds[height];\n\n      const axisGroupOffset = this._outerBounds[y] + ([\"bottom\", \"right\"].includes(this._orient) ? this._size : 0) - (axisConfig.padding || this._axisClass.padding());\n      const transform = `translate(${offsets.x + (horizontal ? 0 : axisGroupOffset)}, ${offsets.y + (horizontal ? axisGroupOffset : 0)})`;\n      this._axisClass\n        .select(elem(\"g.d3plus-ColorScale-axis\", assign(groupParams, {\n          condition: true,\n          enter: {transform},\n          update: {transform}\n        })).node())\n        .config(axisConfig)\n        .align(\"start\")\n        .render();\n\n      const axisScale = this._axisTest._getPosition.bind(this._axisTest);\n      const scaleRange = this._axisTest._getRange();\n\n      let defs = this._group.selectAll(\"defs\").data([0]);\n      const defsEnter = defs.enter().append(\"defs\");\n      defsEnter.append(\"linearGradient\").attr(\"id\", `gradient-${this._uuid}`);\n      defs = defsEnter.merge(defs);\n      defs.select(\"linearGradient\")\n        .attr(`${x}1`, horizontal ? \"0%\" : \"100%\")\n        .attr(`${x}2`, horizontal ? \"100%\" : \"0%\")\n        .attr(`${y}1`, \"0%\")\n        .attr(`${y}2`, \"0%\");\n      const stops = defs.select(\"linearGradient\").selectAll(\"stop\")\n        .data(colors);\n      const scaleDomain = this._colorScale.domain();\n      const offsetScale = scaleLinear()\n        .domain(scaleRange)\n        .range(horizontal ? [0, 100] : [100, 0]);\n\n      stops.enter().append(\"stop\").merge(stops)\n        .attr(\"offset\", (d, i) => `${i <= scaleDomain.length - 1 ? offsetScale(axisScale(scaleDomain[i])) : 100}%`)\n        .attr(\"stop-color\", String);\n\n      /** determines the width of buckets */\n      const bucketWidth = (d, i) => {\n        const next = ticks[i + 1] || axisDomain[axisDomain.length - 1];\n        return Math.abs(axisScale(next) - axisScale(d));\n      };\n\n      const rectConfig = assign({\n        duration: this._duration,\n        fill: ticks ? d => this._colorScale(d) : `url(#gradient-${this._uuid})`,\n        [x]: ticks ? (d, i) => axisScale(d) + bucketWidth(d, i) / 2 - ([\"left\", \"right\"].includes(this._orient) ? bucketWidth(d, i) : 0) : scaleRange[0] + (scaleRange[1] - scaleRange[0]) / 2 + offsets[x],\n        [y]: this._outerBounds[y] + ([\"top\", \"left\"].includes(this._orient) ? axisBounds[height] : 0) + this._size / 2 + offsets[y],\n        [width]: ticks ? bucketWidth : scaleRange[1] - scaleRange[0],\n        [height]: this._size\n      }, this._rectConfig);\n\n      this._rectClass\n        .data(ticks || [0])\n        .id((d, i) => i)\n        .select(rectGroup.node())\n        .config(rectConfig)\n        .render();\n\n      labelConfig.height = this._outerBounds[height];\n      labelConfig.width = this._outerBounds[width];\n      this._labelClass\n        .config(labelConfig)\n        .data(labelData)\n        .select(labelGroup.node())\n        .x(d => d === this._labelMax\n          ? rectConfig.x + rectConfig.width / 2 + this._padding\n          : this._outerBounds.x)\n        .y(d => rectConfig.y - this._labelClass.fontSize()(d) / 2)\n        .text(d => d)\n        .rotate(horizontal ? 0 : this._orient === \"right\" ? 90 : -90)\n        .render();\n\n    }\n    else {\n\n      elem(\"g.d3plus-ColorScale-axis\", Object.assign({condition: gradient}, groupParams));\n\n      let legendData = ticks.reduce((arr, tick, i) => {\n\n        const label = this._bucketFormat.bind(this)(tick, i, ticks, allValues);\n        arr.push({color: colors[i + 1], id: label});\n\n        return arr;\n      }, []);\n      if (!horizontal) legendData = legendData.reverse();\n\n      const legendConfig = assign({\n        align: horizontal ? \"center\" : {start: \"left\", middle: \"center\", end: \"right\"}[this._align],\n        direction: horizontal ? \"row\" : \"column\",\n        duration: this._duration,\n        height: this._height,\n        padding: this._padding,\n        shapeConfig: assign({\n          duration: this._duration\n        }, this._axisConfig.shapeConfig || {}),\n        title: this._axisConfig.title,\n        titleConfig: this._axisConfig.titleConfig || {},\n        width: this._width,\n        verticalAlign: horizontal ? {start: \"top\", middle: \"middle\", end: \"bottom\"}[this._align] : \"middle\"\n      }, this._legendConfig);\n\n      this._legendClass\n        .data(legendData)\n        .select(legendGroup.node())\n        .config(legendConfig)\n        .render();\n\n      this._outerBounds = this._legendClass.outerBounds();\n\n    }\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The [ColorScale](http://d3plus.org/docs/#ColorScale) is constructed by combining an [Axis](http://d3plus.org/docs/#Axis) for the ticks/labels and a [Rect](http://d3plus.org/docs/#Rect) for the actual color box (or multiple boxes, as in a jenks scale). Because of this, there are separate configs for the [Axis](http://d3plus.org/docs/#Axis) class used to display the text ([axisConfig](http://d3plus.org/docs/#ColorScale.axisConfig)) and the [Rect](http://d3plus.org/docs/#Rect) class used to draw the color breaks ([rectConfig](http://d3plus.org/docs/#ColorScale.rectConfig)). This method acts as a pass-through to the config method of the [Axis](http://d3plus.org/docs/#Axis). An example usage of this method can be seen [here](http://d3plus.org/examples/d3plus-legend/colorScale-dark/).\n      @param {Object} [*value*]\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance. If *value* is not specified, returns the current horizontal alignment.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The number of discrete buckets to create in a bucketed color scale. Will be overridden by any custom Array of colors passed to the `color` method. Optionally, users can supply an Array of values used to separate buckets, such as `[0, 10, 25, 50, 90]` for a percentage scale. This value would create 4 buckets, with each value representing the break point between each bucket (so 5 values makes 4 buckets).\n      @param {Number|Array} [*value* = 5]\n      @chainable\n  */\n  buckets(_) {\n    return arguments.length ? (this._buckets = _, this) : this._buckets;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Determines whether or not to use an Axis to display bucket scales (both \"buckets\" and \"jenks\"). When set to `false`, bucketed scales will use the `Legend` class to display squares for each range of data. When set to `true`, bucketed scales will be displayed on an `Axis`, similar to \"linear\" scales.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  bucketAxis(_) {\n    return arguments.length ? (this._bucketAxis = _, this) : this._bucketAxis;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc A function for formatting the labels associated to each bucket in a bucket-type scale (\"jenks\", \"quantile\", etc). The function is passed four arguments: the start value of the current bucket, it's index in the full Array of buckets, the full Array of buckets, and an Array of every value present in the data used to construct the buckets. Keep in mind that the end value for the bucket is not actually the next bucket in the list, but includes every value up until that next bucket value (less than, but not equal to). By default, d3plus will make the end value slightly less than it's current value, so that it does not overlap with the start label for the next bucket.\n      @param {Function} [*value*]\n      @chainable\n  */\n  bucketFormat(_) {\n    return arguments.length ? (this._bucketFormat = _, this) : this._bucketFormat;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc A function that receives the minimum and maximum values of a bucket, and is expected to return the full label.\n      @param {Function} [*value*]\n      @chainable\n  */\n  bucketJoiner(_) {\n    return arguments.length ? (this._bucketJoiner = _, this) : this._bucketJoiner;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Determines whether or not to display a midpoint centered Axis. Does not apply to quantile scales.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n\n  centered(_) {\n    return arguments.length ? (this._centered = _, this) : this._centered;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Overrides the default internal logic of `colorMin`, `colorMid`, and `colorMax` to only use just this specified color. If a single color is given as a String, then the scale is interpolated by lightening that color. Otherwise, the function expects an Array of color values to be used in order for the scale.\n      @param {String|Array} [*value*]\n      @chainable\n  */\n  color(_) {\n    return arguments.length ? (this._color = _, this) : this._color;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Defines the color to be used for numbers greater than the value of the `midpoint` on the scale (defaults to `0`). Colors in between this value and the value of `colorMid` will be interpolated, unless a custom Array of colors has been specified using the `color` method.\n      @param {String} [*value* = \"#0C8040\"]\n      @chainable\n  */\n  colorMax(_) {\n    return arguments.length ? (this._colorMax = _, this) : this._colorMax;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Defines the color to be used for the midpoint of a diverging scale, based on the current value of the `midpoint` method (defaults to `0`). Colors in between this value and the values of `colorMin` and `colorMax` will be interpolated, unless a custom Array of colors has been specified using the `color` method.\n      @param {String} [*value* = \"#f7f7f7\"]\n      @chainable\n  */\n  colorMid(_) {\n    return arguments.length ? (this._colorMid = _, this) : this._colorMid;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Defines the color to be used for numbers less than the value of the `midpoint` on the scale (defaults to `0`). Colors in between this value and the value of `colorMid` will be interpolated, unless a custom Array of colors has been specified using the `color` method.\n      @param {String} [*value* = \"#b22200\"]\n      @chainable\n  */\n  colorMin(_) {\n    return arguments.length ? (this._colorMin = _, this) : this._colorMin;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape key will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc In a linear scale, this Array of 2 values defines the min and max values used in the color scale. Any values outside of this range will be mapped to the nearest color value.\n      @param {Array} [*value*]\n      @chainable\n  */\n  domain(_) {\n    return arguments.length ? (this._domain = _, this) : this._domain;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the transition duration of the ColorScale and returns the current class instance. If *value* is not specified, returns the current duration.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the overall height of the ColorScale and returns the current class instance. If *value* is not specified, returns the current height value.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc A pass-through for the [TextBox](http://d3plus.org/docs/#TextBox) class used to style the labelMin and labelMax text.\n      @param {Object} [*value*]\n      @chainable\n  */\n  labelConfig(_) {\n    return arguments.length ? (this._labelConfig = assign(this._labelConfig, _), this) : this._labelConfig;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Defines a text label to be displayed off of the end of the minimum point in the scale (currently only available in horizontal orientation).\n      @param {String} [*value*]\n      @chainable\n  */\n  labelMin(_) {\n    return arguments.length ? (this._labelMin = _, this) : this._labelMin;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Defines a text label to be displayed off of the end of the maximum point in the scale (currently only available in horizontal orientation).\n      @param {String} [*value*]\n      @chainable\n  */\n  labelMax(_) {\n    return arguments.length ? (this._labelMax = _, this) : this._labelMax;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The [ColorScale](http://d3plus.org/docs/#ColorScale) is constructed by combining an [Axis](http://d3plus.org/docs/#Axis) for the ticks/labels and a [Rect](http://d3plus.org/docs/#Rect) for the actual color box (or multiple boxes, as in a jenks scale). Because of this, there are separate configs for the [Axis](http://d3plus.org/docs/#Axis) class used to display the text ([axisConfig](http://d3plus.org/docs/#ColorScale.axisConfig)) and the [Rect](http://d3plus.org/docs/#Rect) class used to draw the color breaks ([rectConfig](http://d3plus.org/docs/#ColorScale.rectConfig)). This method acts as a pass-through to the config method of the [Axis](http://d3plus.org/docs/#Axis). An example usage of this method can be seen [here](http://d3plus.org/examples/d3plus-legend/colorScale-dark/).\n      @param {Object} [*value*]\n      @chainable\n  */\n  legendConfig(_) {\n    return arguments.length ? (this._legendConfig = assign(this._legendConfig, _), this) : this._legendConfig;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The number value to be used as the anchor for `colorMid`, and defines the center point of the diverging color scale.\n      @param {Number} [*value* = 0]\n      @chainable\n  */\n  midpoint(_) {\n    return arguments.length ? (this._midpoint = _, this) : this._midpoint;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc Sets the flow of the items inside the ColorScale. If no value is passed, the current flow will be returned.\n      @param {String} [*value* = \"bottom\"]\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the ColorScale content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the padding between each key to the specified number and returns the current class instance. If *value* is not specified, returns the current padding value.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The [ColorScale](http://d3plus.org/docs/#ColorScale) is constructed by combining an [Axis](http://d3plus.org/docs/#Axis) for the ticks/labels and a [Rect](http://d3plus.org/docs/#Rect) for the actual color box (or multiple boxes, as in a jenks scale). Because of this, there are separate configs for the [Axis](http://d3plus.org/docs/#Axis) class used to display the text ([axisConfig](http://d3plus.org/docs/#ColorScale.axisConfig)) and the [Rect](http://d3plus.org/docs/#Rect) class used to draw the color breaks ([rectConfig](http://d3plus.org/docs/#ColorScale.rectConfig)). This method acts as a pass-through to the config method of the [Rect](http://d3plus.org/docs/#Rect). An example usage of this method can be seen [here](http://d3plus.org/examples/d3plus-legend/colorScale-dark/).\n      @param {Object} [*value*]\n      @chainable\n  */\n  rectConfig(_) {\n    return arguments.length ? (this._rectConfig = assign(this._rectConfig, _), this) : this._rectConfig;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the scale of the ColorScale and returns the current class instance. If *value* is not specified, returns the current scale value.\n      @param {String} [*value* = \"linear\"] Can either be \"linear\", \"jenks\", or \"buckets\".\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = _, this) : this._scale;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc The height of horizontal color scales, and width when positioned vertical.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = _, this) : this._size;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the value accessor to the specified function or string and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} [*value*]\n      @chainable\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : constant(_), this) : this._value;\n  }\n\n  /**\n      @memberof ColorScale\n      @desc If *value* is specified, sets the overall width of the ColorScale and returns the current class instance. If *value* is not specified, returns the current width value.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n"],"names":["numericSort","array","slice","sort","a","b","uniqueCountSorted","input","lastSeenValue","uniqueValueCount","i","length","makeMatrix","columns","rows","matrix","column","j","push","ssq","sums","sumsOfSquares","sji","muji","fillMatrixColumn","iMin","iMax","cluster","backtrackMatrix","Math","floor","jlow","max","jhigh","min","sjlowi","ssqjlow","ssqj","fillMatrices","data","nValues","shift","shiftedValue","nClusters","Error","sorted","uniqueCount","clusterRight","clusters","clusterLeft","padding","Legend","_titleClass","TextBox","_align","_data","_direction","_duration","_height","_id","accessor","_label","_lineData","_outerBounds","width","height","x","y","_padding","_shape","constant","_shapes","_shapeConfig","fill","hitArea","dd","d","h","shapeHeight","shapeWidth","labelBounds","shape","shapeR","rtlMod","_rtl","labelConfig","fontColor","colorDefaults","dark","fontFamily","fontResize","fontSize","verticalAlign","opacity","r","datum","pad","_rowWidth","filter","l","prevWords","sentence","ld","_titleHeight","map","concat","_fetchConfig","_titleConfig","_verticalAlign","_width","key","val","undefined","row","sum","p","callback","_select","select","append","attr","node","_group","elem","parent","_titleGroup","_shapeGroup","availableHeight","_titleWidth","_title","f","s","lH","lineHeight","res","textWrap","lines","widths","label","id","words","lh","w","newRes","Object","assign","ceil","t","textWidth","og","spaceNeeded","availableWidth","newRows","maxLines","_wrapLines","wrappable","truncated","_wrapRows","rowWidth","_rowHeight","bind","forEach","innerHeight","innerWidth","xOffset","yOffset","text","duration","textAnchor","left","center","right","config","render","baseConfig","configPrep","obj","__d3plus__","Shape","shapes","setTimeout","_","active","arguments","hover","detectRTL","BaseClass","ColorScale","_axisClass","Axis","_axisConfig","gridSize","_axisTest","_buckets","_bucketAxis","_bucketFormat","tick","ticks","allValues","format","tickFormat","formatAbbreviate","next","prev","last","suffix","mod","pow","round","toString","split","replace","ten","prevValue","find","nextValue","reverse","_bucketJoiner","_centered","_color","_colorMax","on","_colorMid","light","_colorMin","off","_labelClass","_labelConfig","_legendClass","_legendConfig","shapeConfig","stroke","strokeWidth","_midpoint","_orient","_rectClass","Rect","_rectConfig","_scale","_size","_value","horizontal","includes","domain","_domain","extent","negative","positive","diverging","numBuckets","Array","unique","colors","labels","range","colorLighter","buckets","jenks","half","residual","negatives","negativesDeviation","deviation","positives","positivesDeviation","isNegativeMax","isPositiveMax","negativeJenks","ckmeans","positiveJenks","c","tickSet","Set","size","from","spanning","negativeColors","spanningColors","positiveColors","_colorScale","scaleThreshold","negativeColorScale","interpolateRgb","gamma","positiveColorScale","step","quantile","negativeStep","positiveStep","negativeBuckets","positiveBuckets","minVal","newNegativeBuckets","abs","bucket","indexOf","maxVal","newPositiveBuckets","scaleLinear","clamp","gradient","transition","groupParams","enter","exit","update","labelGroup","condition","rectGroup","legendGroup","offsets","axisDomain","axisConfig","orient","scale","labelData","_labelMin","labelCSS","fontWeight","labelMinWidth","_labelMax","labelMaxWidth","axisBounds","outerBounds","axisGroupOffset","transform","align","axisScale","_getPosition","scaleRange","_getRange","defs","selectAll","defsEnter","_uuid","merge","stops","scaleDomain","offsetScale","String","bucketWidth","rectConfig","rotate","legendData","reduce","arr","color","legendConfig","start","middle","end","direction","title","titleConfig"],"mappingsiBAAiB,CAACC,KAAK,EAAE;IAChC,IAAIC,aAAa;MAAEC,gBAAgB,GAAG,CAAC;IACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIA,CAAC,KAAK,CAAC,IAAIH,KAAK,CAACG,CAAC,CAAC,KAAKF,aAAa,EAAE;QACzCA,aAAa,GAAGD,KAAK,CAACG,CAAC,CAAC;QACxBD,gBAAgB,EAAE;;;IAGtB,OAAOA,gBAAgB;EACzB;;EAEA;;;;;;;;;EASA,SAASG,UAAU,CAACC,OAAO,EAAEC,IAAI,EAAE;IACjC,IAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,OAAO,EAAEH,CAAC,EAAE,EAAE;MAChC,IAAMM,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAED,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;MAC7CH,MAAM,CAACG,IAAI,CAACF,MAAM,CAAC;;IAErB,OAAOD,MAAM;EACf;;EAEA;;;;;;;;;;;EAWA,SAASI,GAAG,CAACF,CAAC,EAAEP,CAAC,EAAEU,IAAI,EAAEC,aAAa,EAAE;IACtC,IAAIC,GAAG,CAAC;;IAER,IAAIL,CAAC,GAAG,CAAC,EAAE;MACT,IAAMM,IAAI,GAAG,CAACH,IAAI,CAACV,CAAC,CAAC,GAAGU,IAAI,CAACH,CAAC,GAAG,CAAC,CAAC,KAAKP,CAAC,GAAGO,CAAC,GAAG,CAAC,CAAC,CAAC;MACnDK,GAAG,GAAGD,aAAa,CAACX,CAAC,CAAC,GAAGW,aAAa,CAACJ,CAAC,GAAG,CAAC,CAAC,GAAG,CAACP,CAAC,GAAGO,CAAC,GAAG,CAAC,IAAIM,IAAI,GAAGA,IAAI;KAC1E,MACID,GAAG,GAAGD,aAAa,CAACX,CAAC,CAAC,GAAGU,IAAI,CAACV,CAAC,CAAC,GAAGU,IAAI,CAACV,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IAEzD,IAAIY,GAAG,GAAG,CAAC,EAAE,OAAO,CAAC;IACrB,OAAOA,GAAG;EACZ;;EAEA;;;;;;;;;;;EAWA,SAASE,gBAAgB,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEZ,MAAM,EAAEa,eAAe,EAAER,IAAI,EAAEC,aAAa,EAAE;IAC3F,IAAII,IAAI,GAAGC,IAAI,EAAE;;;IAGjB,IAAMhB,CAAC,GAAGmB,IAAI,CAACC,KAAK,CAAC,CAACL,IAAI,GAAGC,IAAI,IAAI,CAAC,CAAC;IAEvCX,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAGK,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACjB,CAAC,GAAG,CAAC,CAAC;IAC/CkB,eAAe,CAACD,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAGA,CAAC;IAE/B,IAAIqB,IAAI,GAAGJ,OAAO,CAAC;IACnB,IAAIF,IAAI,GAAGE,OAAO,EAAEI,IAAI,GAAGF,IAAI,CAACG,GAAG,CAACD,IAAI,EAAEH,eAAe,CAACD,OAAO,CAAC,CAACF,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAClFM,IAAI,GAAGF,IAAI,CAACG,GAAG,CAACD,IAAI,EAAEH,eAAe,CAACD,OAAO,GAAG,CAAC,CAAC,CAACjB,CAAC,CAAC,IAAI,CAAC,CAAC;IAE3D,IAAIuB,KAAK,GAAGvB,CAAC,GAAG,CAAC,CAAC;IAClB,IAAIgB,IAAI,GAAGX,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAEsB,KAAK,GAAGJ,IAAI,CAACK,GAAG,CAACD,KAAK,EAAEL,eAAe,CAACD,OAAO,CAAC,CAACD,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAE9F,KAAK,IAAIT,CAAC,GAAGgB,KAAK,EAAEhB,CAAC,IAAIc,IAAI,EAAE,EAAEd,CAAC,EAAE;MAClC,IAAMK,GAAG,GAAGH,GAAG,CAACF,CAAC,EAAEP,CAAC,EAAEU,IAAI,EAAEC,aAAa,CAAC;MAE1C,IAAIC,GAAG,GAAGP,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,CAAC,CAAC,IAAIhB,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,EAAE;;;MAG/D,IAAMyB,MAAM,GAAGhB,GAAG,CAACY,IAAI,EAAErB,CAAC,EAAEU,IAAI,EAAEC,aAAa,CAAC;MAEhD,IAAMe,OAAO,GAAGD,MAAM,GAAGpB,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,CAAC,CAAC;MAEtD,IAAIK,OAAO,GAAGrB,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,EAAE;;QAEhCK,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAG0B,OAAO;QAC5BR,eAAe,CAACD,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAGqB,IAAI;;MAEpCA,IAAI,EAAE;MAEN,IAAMM,IAAI,GAAGf,GAAG,GAAGP,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACV,CAAC,GAAG,CAAC,CAAC;MAC7C,IAAIoB,IAAI,GAAGtB,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,EAAE;QAC7BK,MAAM,CAACY,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAG2B,IAAI;QACzBT,eAAe,CAACD,OAAO,CAAC,CAACjB,CAAC,CAAC,GAAGO,CAAC;;;IAInCO,gBAAgB,CAACC,IAAI,EAAEf,CAAC,GAAG,CAAC,EAAEiB,OAAO,EAAEZ,MAAM,EAAEa,eAAe,EAAER,IAAI,EAAEC,aAAa,CAAC;IACpFG,gBAAgB,CAACd,CAAC,GAAG,CAAC,EAAEgB,IAAI,EAAEC,OAAO,EAAEZ,MAAM,EAAEa,eAAe,EAAER,IAAI,EAAEC,aAAa,CAAC;EAEtF;;EAEA;;;;;;;EAOA,SAASiB,YAAY,CAACC,IAAI,EAAExB,MAAM,EAAEa,eAAe,EAAE;IACnD,IAAMY,OAAO,GAAGzB,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAACJ,MAAM,GAAG,CAAC;;;IAGhD,IAAM8B,KAAK,GAAGF,IAAI,CAACV,IAAI,CAACC,KAAK,CAACU,OAAO,GAAG,CAAC,CAAC,CAAC;;;IAG3C,IAAMpB,IAAI,GAAG,EAAE;IACf,IAAMC,aAAa,GAAG,EAAE;;;IAGxB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEgC,YAAY,GAAG,KAAK,CAAC,EAAEhC,CAAC,GAAG8B,OAAO,EAAE,EAAE9B,CAAC,EAAE;MACvDgC,YAAY,GAAGH,IAAI,CAAC7B,CAAC,CAAC,GAAG+B,KAAK;MAC9B,IAAI/B,CAAC,KAAK,CAAC,EAAE;QACXU,IAAI,CAACF,IAAI,CAACwB,YAAY,CAAC;QACvBrB,aAAa,CAACH,IAAI,CAACwB,YAAY,GAAGA,YAAY,CAAC;OAChD,MACI;QACHtB,IAAI,CAACF,IAAI,CAACE,IAAI,CAACV,CAAC,GAAG,CAAC,CAAC,GAAGgC,YAAY,CAAC;QACrCrB,aAAa,CAACH,IAAI,CAACG,aAAa,CAACX,CAAC,GAAG,CAAC,CAAC,GAAGgC,YAAY,GAAGA,YAAY,CAAC;;;;MAIxE3B,MAAM,CAAC,CAAC,CAAC,CAACL,CAAC,CAAC,GAAGS,GAAG,CAAC,CAAC,EAAET,CAAC,EAAEU,IAAI,EAAEC,aAAa,CAAC;MAC7CO,eAAe,CAAC,CAAC,CAAC,CAAClB,CAAC,CAAC,GAAG,CAAC;;;;IAI3B,KAAK,IAAIiB,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGZ,MAAM,CAACJ,MAAM,EAAE,EAAEgB,OAAO,EAAE;MACxD,IAAIF,IAAI,GAAGe,OAAO,GAAG,CAAC;MACtB,IAAIb,OAAO,GAAGZ,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAEc,IAAI,GAAGE,OAAO;MAC/CH,gBAAgB,CAACC,IAAI,EAAEe,OAAO,GAAG,CAAC,EAAEb,OAAO,EAAEZ,MAAM,EAAEa,eAAe,EAAER,IAAI,EAAEC,aAAa,CAAC;;EAE9F;;EAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;EAYe,gBAAQ,CAACkB,IAAI,EAAEI,SAAS,EAAE;IAEvC,IAAIA,SAAS,GAAGJ,IAAI,CAAC5B,MAAM,EAAE;MAC3B,MAAM,IAAIiC,KAAK,CAAC,yDAAyD,CAAC;;IAG5E,IAAMC,MAAM,GAAG7C,WAAW,CAACuC,IAAI,CAAC;;;IAGhC,IAAMO,WAAW,GAAGxC,iBAAiB,CAACuC,MAAM,CAAC;;;IAG7C,IAAIC,WAAW,KAAK,CAAC,EAAE;MACrB,OAAO,CAACD,MAAM,CAAC;;IAGjB,IAAMjB,eAAe,GAAGhB,UAAU,CAAC+B,SAAS,EAAEE,MAAM,CAAClC,MAAM,CAAC;MACtDI,MAAM,GAAGH,UAAU,CAAC+B,SAAS,EAAEE,MAAM,CAAClC,MAAM,CAAC;;;IAGnD2B,YAAY,CAACO,MAAM,EAAE9B,MAAM,EAAEa,eAAe,CAAC;;;IAG7C,IAAImB,YAAY,GAAGnB,eAAe,CAAC,CAAC,CAAC,GAAGA,eAAe,CAAC,CAAC,CAAC,CAACjB,MAAM,GAAG,CAAC,GAAG,CAAC;IACzE,IAAMqC,QAAQ,GAAG,EAAE;;;IAGnB,KAAK,IAAIrB,OAAO,GAAGC,eAAe,CAACjB,MAAM,GAAG,CAAC,EAAEgB,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;MAEtE,IAAMsB,WAAW,GAAGrB,eAAe,CAACD,OAAO,CAAC,CAACoB,YAAY,CAAC;;;MAG1DC,QAAQ,CAACrB,OAAO,CAAC,GAAGkB,MAAM,CAAC3C,KAAK,CAAC+C,WAAW,EAAEF,YAAY,GAAG,CAAC,CAAC;MAE/D,IAAIpB,OAAO,GAAG,CAAC,EAAEoB,YAAY,GAAGE,WAAW,GAAG,CAAC;;IAIjD,OAAOD,QAAQ;EAEjB;;ECtPA;;;;;EAaA,IAAME,OAAO,GAAG,CAAC;;EAEjB;;;;;EAAA,IAKqBC,MAAM;IAAA;IAAA;;;;;;IAOzB,kBAAc;MAAA;MAAA;MAEZ;MAEA,MAAKC,WAAW,GAAG,IAAIC,kBAAO,EAAE;MAEhC,MAAKC,MAAM,GAAG,QAAQ;MACtB,MAAKC,KAAK,GAAG,EAAE;MACf,MAAKC,UAAU,GAAG,KAAK;MACvB,MAAKC,SAAS,GAAG,GAAG;MACpB,MAAKC,OAAO,GAAG,GAAG;MAClB,MAAKC,GAAG,GAAGC,qBAAQ,CAAC,IAAI,CAAC;MACzB,MAAKC,MAAM,GAAGD,qBAAQ,CAAC,IAAI,CAAC;MAC5B,MAAKE,SAAS,GAAG,EAAE;MACnB,MAAKC,YAAY,GAAG;QAACC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC,CAAC;MACrD,MAAKC,QAAQ,GAAG,CAAC;MACjB,MAAKC,MAAM,GAAGC,qBAAQ,CAAC,MAAM,CAAC;MAC9B,MAAKC,OAAO,GAAG,EAAE;MACjB,MAAKC,YAAY,GAAG;QAClBC,IAAI,EAAEb,qBAAQ,CAAC,OAAO,CAAC;QACvBK,MAAM,EAAEK,qBAAQ,CAAC,EAAE,CAAC;QACpBI,OAAO,EAAE,iBAACC,EAAE,EAAEjE,CAAC,EAAK;UAClB,IAAMkE,CAAC,GAAG,MAAKd,SAAS,CAACpD,CAAC,CAAC;YACrBmE,CAAC,GAAG7C,WAAG,CAAC,CAAC4C,CAAC,CAACX,MAAM,EAAEW,CAAC,CAACE,WAAW,CAAC,CAAC;UACxC,OAAO;YAACd,KAAK,EAAEY,CAAC,CAACZ,KAAK,GAAGY,CAAC,CAACG,UAAU;YAAEd,MAAM,EAAEY,CAAC;YAAEX,CAAC,EAAE,CAACU,CAAC,CAACG,UAAU,GAAG,CAAC;YAAEZ,CAAC,EAAE,CAACU,CAAC,GAAG;UAAC,CAAC;SACnF;QACDG,WAAW,EAAE,qBAACL,EAAE,EAAEjE,CAAC,EAAK;UACtB,IAAMkE,CAAC,GAAG,MAAKd,SAAS,CAACpD,CAAC,CAAC;UAC3B,IAAIwD,CAAC,GAAGU,CAAC,CAACG,UAAU,GAAG,CAAC;UACxB,IAAIH,CAAC,CAACK,KAAK,KAAK,QAAQ,EAAEf,CAAC,IAAIU,CAAC,CAACM,MAAM,GAAG,CAAC;UAC3C,IAAMjB,MAAM,GAAGjC,WAAG,CAAC,CAAC4C,CAAC,CAACE,WAAW,EAAEF,CAAC,CAACX,MAAM,CAAC,CAAC;UAC7C,IAAMkB,MAAM,GAAG,MAAKC,IAAI,GAAGR,CAAC,CAACG,UAAU,GAAGH,CAAC,CAACZ,KAAK,GAAG,MAAKI,QAAQ,GAAG,CAAC,GAAG,CAAC;UACzE,OAAO;YAACJ,KAAK,EAAEY,CAAC,CAACZ,KAAK;YAAEC,MAAM,EAANA,MAAM;YAAEC,CAAC,EAAEA,CAAC,GAAGhB,OAAO,GAAGiC,MAAM;YAAEhB,CAAC,EAAE,CAACF,MAAM,GAAG;UAAC,CAAC;SACzE;QACDoB,WAAW,EAAE;UACXC,SAAS,EAAEhB,qBAAQ,CAACiB,yBAAa,CAACC,IAAI,CAAC;UACvCC,UAAU,EAAE,MAAKrC,WAAW,CAACqC,UAAU,EAAE;UACzCC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAErB,qBAAQ,CAAC,EAAE,CAAC;UACtBsB,aAAa,EAAE;SAChB;QACDC,OAAO,EAAE,CAAC;QACVC,CAAC,EAAExB,qBAAQ,CAAC,CAAC,CAAC;QACdN,KAAK,EAAEM,qBAAQ,CAAC,EAAE,CAAC;QACnBJ,CAAC,EAAE,WAACU,CAAC,EAAElE,CAAC,EAAK;UACX,IAAMqF,KAAK,GAAG,MAAKjC,SAAS,CAACpD,CAAC,CAAC;UAC/B,IAAMyD,CAAC,GAAG4B,KAAK,CAAC5B,CAAC;UACjB,IAAM6B,GAAG,GAAG,MAAK1C,MAAM,KAAK,MAAM,IAAI,MAAKA,MAAM,KAAK,OAAO,IAAI,MAAKE,UAAU,KAAK,QAAQ,GAAG,CAAC,GAAG,MAAKF,MAAM,KAAK,QAAQ,GACxH,CAAC,MAAKS,YAAY,CAACC,KAAK,GAAG,MAAKiC,SAAS,CAAC,MAAKnC,SAAS,CAACoC,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIhC,CAAC,KAAKgC,CAAC,CAAChC,CAAC;UAAA,EAAC,CAAC,IAAI,CAAC,GACrF,MAAKJ,YAAY,CAACC,KAAK,GAAG,MAAKiC,SAAS,CAAC,MAAKnC,SAAS,CAACoC,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIhC,CAAC,KAAKgC,CAAC,CAAChC,CAAC;UAAA,EAAC,CAAC;UACnF,IAAMiC,SAAS,GAAG,MAAKtC,SAAS,CAAC5D,KAAK,CAAC,CAAC,EAAEQ,CAAC,CAAC,CAACwF,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIhC,CAAC,KAAKgC,CAAC,CAAChC,CAAC;UAAA,EAAC;UACnE,IAAMgB,MAAM,GAAG,MAAKC,IAAI,GAAGW,KAAK,CAAC/B,KAAK,GAAG,MAAKI,QAAQ,GAAG,CAAC;UAC1D,OAAO,MAAK6B,SAAS,CAACG,SAAS,CAAC,GAAG,MAAKhC,QAAQ,IAAIgC,SAAS,CAACzF,MAAM,GAAGoF,KAAK,CAACM,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAC3F,MAAKtC,YAAY,CAACG,CAAC,GAAG6B,KAAK,CAAChB,UAAU,GAAG,CAAC,GAAGiB,GAAG,GAAGb,MAAM;SACjE;QACDhB,CAAC,EAAE,WAACS,CAAC,EAAElE,CAAC,EAAK;UACX,IAAM4F,EAAE,GAAG,MAAKxC,SAAS,CAACpD,CAAC,CAAC;UAC5B,OAAO4F,EAAE,CAACnC,CAAC,GAAG,MAAKoC,YAAY,GAAG,MAAKxC,YAAY,CAACI,CAAC,GAC9CnC,WAAG,CACD,MAAK8B,SAAS,CAACoC,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIG,EAAE,CAACnC,CAAC,KAAKgC,CAAC,CAAChC,CAAC;UAAA,EAAC,CAACqC,GAAG,CAAC,UAAAL,CAAC;YAAA,OAAIA,CAAC,CAAClC,MAAM;UAAA,EAAC,CAC1DwC,MAAM,CAAC,MAAKlD,KAAK,CAACiD,GAAG,CAAC,UAACL,CAAC,EAAEjC,CAAC;YAAA,OAAK,MAAKwC,YAAY,CAAC,QAAQ,EAAEP,CAAC,EAAEjC,CAAC,CAAC;UAAA,EAAC,CAAC,CACrE,GAAG,CAAC;;OAEf;MACD,MAAKyC,YAAY,GAAG;QAClBhB,QAAQ,EAAE;OACX;MACD,MAAKiB,cAAc,GAAG,QAAQ;MAC9B,MAAKC,MAAM,GAAG,GAAG;MAAC;;IAEnB;MAAA;MAAA,OAED,sBAAaC,GAAG,EAAElC,CAAC,EAAElE,CAAC,EAAE;QACtB,IAAMqG,GAAG,GAAG,IAAI,CAACvC,YAAY,CAACsC,GAAG,CAAC,KAAKE,SAAS,GAAG,IAAI,CAACxC,YAAY,CAACsC,GAAG,CAAC,GAAG,IAAI,CAACtC,YAAY,CAACa,WAAW,CAACyB,GAAG,CAAC;QAC9G,IAAI,CAACC,GAAG,IAAID,GAAG,KAAK,YAAY,EAAE,OAAO,IAAI,CAACJ,YAAY,CAAC,UAAU,EAAE9B,CAAC,EAAElE,CAAC,CAAC,GAAG,GAAG;QAClF,OAAO,OAAOqG,GAAG,KAAK,UAAU,GAAGA,GAAG,CAACnC,CAAC,EAAElE,CAAC,CAAC,GAAGqG,GAAG;;IACnD;MAAA;MAAA,OAED,oBAAWE,GAAG,EAAE;QACd,OAAOjF,WAAG,CAACiF,GAAG,CAACT,GAAG,CAAC,UAAA5B,CAAC;UAAA,OAAIA,CAAC,CAACX,MAAM;QAAA,EAAC,CAACwC,MAAM,CAACQ,GAAG,CAACT,GAAG,CAAC,UAAA5B,CAAC;UAAA,OAAIA,CAAC,CAACE,WAAW;QAAA,EAAC,CAAC,CAAC,GAAG,IAAI,CAACV,QAAQ;;IACvF;MAAA;MAAA,OAED,mBAAU6C,GAAG,EAAE;QAAA;QACb,OAAOC,WAAG,CAACD,GAAG,CAACT,GAAG,CAAC,UAAC5B,CAAC,EAAElE,CAAC,EAAK;UAC3B,IAAMyG,CAAC,GAAG,MAAI,CAAC/C,QAAQ,IAAI1D,CAAC,KAAKuG,GAAG,CAACtG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGiE,CAAC,CAACZ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;UACtE,OAAOY,CAAC,CAACG,UAAU,GAAGH,CAAC,CAACZ,KAAK,GAAGmD,CAAC;SAClC,CAAC,CAAC;;;;;;;;;;;aASL,gBAAOC,QAAQ,EAAE;QAAA;QAEf,IAAI,IAAI,CAACC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,CAACC,MAAM,CAACA,kBAAM,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,OAAO,YAAK,IAAI,CAACX,MAAM,QAAK,CAACW,IAAI,CAAC,QAAQ,YAAK,IAAI,CAAC9D,OAAO,QAAK,CAAC+D,IAAI,EAAE,CAAC;;;QAGnJ,IAAI,CAACC,MAAM,GAAGC,iBAAI,CAAC,iBAAiB,EAAE;UAACC,MAAM,EAAE,IAAI,CAACP;QAAO,CAAC,CAAC;QAC7D,IAAI,CAACQ,WAAW,GAAGF,iBAAI,CAAC,uBAAuB,EAAE;UAACC,MAAM,EAAE,IAAI,CAACF;QAAM,CAAC,CAAC;QACvE,IAAI,CAACI,WAAW,GAAGH,iBAAI,CAAC,uBAAuB,EAAE;UAACC,MAAM,EAAE,IAAI,CAACF;QAAM,CAAC,CAAC;QAEvE,IAAIK,eAAe,GAAG,IAAI,CAACrE,OAAO;QAClC,IAAI,CAAC6C,YAAY,GAAG,CAAC;QACrB,IAAI,CAACyB,WAAW,GAAG,CAAC;QACpB,IAAI,IAAI,CAACC,MAAM,EAAE;UAEf,IAAMC,CAAC,GAAG,IAAI,CAACvB,YAAY,CAAClB,UAAU,IAAI,IAAI,CAACrC,WAAW,CAACqC,UAAU,EAAE,EAAE;YACnE0C,CAAC,GAAG,IAAI,CAACxB,YAAY,CAAChB,QAAQ,IAAI,IAAI,CAACvC,WAAW,CAACuC,QAAQ,EAAE,EAAE;UACrE,IAAIyC,EAAE,GAAGA,EAAE,GAAG,IAAI,CAACzB,YAAY,CAAC0B,UAAU,IAAI,IAAI,CAACjF,WAAW,CAACiF,UAAU,EAAE;UAC3ED,EAAE,GAAGA,EAAE,GAAGA,EAAE,EAAE,GAAGD,CAAC,GAAG,GAAG;UAExB,IAAMG,GAAG,GAAGC,mBAAQ,EAAE,CACnB9C,UAAU,CAACyC,CAAC,CAAC,CACbvC,QAAQ,CAACwC,CAAC,CAAC,CACXE,UAAU,CAACD,EAAE,CAAC,CACdpE,KAAK,CAAC,IAAI,CAAC6C,MAAM,CAAC,CAClB5C,MAAM,CAAC,IAAI,CAACP,OAAO,CAAC,CAAC,IAAI,CAACuE,MAAM,CAAC;UACpC,IAAI,CAAC1B,YAAY,GAAG6B,EAAE,GAAGE,GAAG,CAACE,KAAK,CAAC7H,MAAM,GAAG,IAAI,CAACyD,QAAQ;UACzD,IAAI,CAAC4D,WAAW,GAAGhG,WAAG,CAACsG,GAAG,CAACG,MAAM,CAAC;UAClCV,eAAe,IAAI,IAAI,CAACxB,YAAY;;;;QAItC,IAAI,CAACzC,SAAS,GAAG,IAAI,CAACP,KAAK,CAACiD,GAAG,CAAC,UAAC5B,CAAC,EAAElE,CAAC,EAAK;UAExC,IAAMgI,KAAK,GAAG,MAAI,CAAC7E,MAAM,CAACe,CAAC,EAAElE,CAAC,CAAC;UAC/B,IAAMuE,KAAK,GAAG,MAAI,CAACZ,MAAM,CAACO,CAAC,EAAElE,CAAC,CAAC;UAC/B,IAAMoF,CAAC,GAAG,MAAI,CAACY,YAAY,CAAC,GAAG,EAAE9B,CAAC,EAAElE,CAAC,CAAC;UAEtC,IAAI4H,GAAG,GAAG;YACR/F,IAAI,EAAEqC,CAAC;YACPlE,CAAC,EAADA,CAAC;YACDiI,EAAE,EAAE,MAAI,CAAChF,GAAG,CAACiB,CAAC,EAAElE,CAAC,CAAC;YAClBuE,KAAK,EAALA,KAAK;YACLC,MAAM,EAAEY,CAAC;YACTf,UAAU,EAAEE,KAAK,KAAK,QAAQ,GAAGa,CAAC,GAAG,CAAC,GAAG,MAAI,CAACY,YAAY,CAAC,OAAO,EAAE9B,CAAC,EAAElE,CAAC,CAAC;YACzEoE,WAAW,EAAEG,KAAK,KAAK,QAAQ,GAAGa,CAAC,GAAG,CAAC,GAAG,MAAI,CAACY,YAAY,CAAC,QAAQ,EAAE9B,CAAC,EAAElE,CAAC,CAAC;YAC3EyD,CAAC,EAAE;WACJ;UAED,IAAI,CAACuE,KAAK,EAAE;YACVJ,GAAG,CAACjC,QAAQ,GAAG,KAAK;YACpBiC,GAAG,CAACM,KAAK,GAAG,EAAE;YACdN,GAAG,CAACrE,MAAM,GAAG,CAAC;YACdqE,GAAG,CAACtE,KAAK,GAAG,CAAC;YACb,OAAOsE,GAAG;;UAGZ,IAAMJ,CAAC,GAAG,MAAI,CAACxB,YAAY,CAAC,YAAY,EAAE9B,CAAC,EAAElE,CAAC,CAAC;YACzCmI,EAAE,GAAG,MAAI,CAACnC,YAAY,CAAC,YAAY,EAAE9B,CAAC,EAAElE,CAAC,CAAC;YAC1CyH,CAAC,GAAG,MAAI,CAACzB,YAAY,CAAC,UAAU,EAAE9B,CAAC,EAAElE,CAAC,CAAC;UAE7C,IAAMmE,CAAC,GAAGkD,eAAe,GAAG,CAAC,MAAI,CAACxE,KAAK,CAAC5C,MAAM,GAAG,CAAC,IAAI,MAAI,CAACyD,QAAQ;YAC7D0E,CAAC,GAAG,MAAI,CAACjC,MAAM;UAErB,IAAMkC,MAAM,GAAGR,mBAAQ,EAAE,CACtB9C,UAAU,CAACyC,CAAC,CAAC,CACbvC,QAAQ,CAACwC,CAAC,CAAC,CACXE,UAAU,CAACQ,EAAE,CAAC,CACd7E,KAAK,CAAC8E,CAAC,CAAC,CACR7E,MAAM,CAACY,CAAC,CAAC,CAAC6D,KAAK,CAAC;UAEnBJ,GAAG,GAAGU,MAAM,CAACC,MAAM,CAACX,GAAG,EAAES,MAAM,CAAC;UAEhCT,GAAG,CAACtE,KAAK,GAAGnC,IAAI,CAACqH,IAAI,CAAClH,WAAG,CAACsG,GAAG,CAACE,KAAK,CAAChC,GAAG,CAAC,UAAA2C,CAAC;YAAA,OAAIC,oBAAS,CAACD,CAAC,EAAE;cAAC,aAAa,EAAEjB,CAAC;cAAE,WAAW,EAAEC;YAAC,CAAC,CAAC;UAAA,EAAC,CAAC,CAAC,GAAGjF,OAAO,GAAG,CAAC;UAC9GoF,GAAG,CAACrE,MAAM,GAAGpC,IAAI,CAACqH,IAAI,CAACZ,GAAG,CAACE,KAAK,CAAC7H,MAAM,IAAIkI,EAAE,GAAG,CAAC,CAAC,CAAC;UACnDP,GAAG,CAACe,EAAE,GAAG;YAACpF,MAAM,EAAEqE,GAAG,CAACrE,MAAM;YAAED,KAAK,EAAEsE,GAAG,CAACtE;UAAK,CAAC;UAC/CsE,GAAG,CAACJ,CAAC,GAAGA,CAAC;UACTI,GAAG,CAACH,CAAC,GAAGA,CAAC;UACTG,GAAG,CAACO,EAAE,GAAGA,EAAE;UAEX,OAAOP,GAAG;SAEX,CAAC;QAEF,IAAIgB,WAAW;QACf,IAAMC,cAAc,GAAG,IAAI,CAAC1C,MAAM,GAAG,IAAI,CAACzC,QAAQ,GAAG,CAAC;QACtDkF,WAAW,GAAG,IAAI,CAACrD,SAAS,CAAC,IAAI,CAACnC,SAAS,CAAC;QAE5C,IAAI,IAAI,CAACN,UAAU,KAAK,QAAQ,IAAI8F,WAAW,GAAGC,cAAc,EAAE;UAChE,IAAIf,KAAK,GAAG,CAAC;YAAEgB,OAAO,GAAG,EAAE;UAE3B,IAAMC,QAAQ,GAAGzH,WAAG,CAAC,IAAI,CAAC8B,SAAS,CAAC0C,GAAG,CAAC,UAAA5B,CAAC;YAAA,OAAIA,CAAC,CAACgE,KAAK,CAACjI,MAAM;UAAA,EAAC,CAAC;UAC7D,IAAI,CAAC+I,UAAU,GAAG,YAAW;YAAA;YAE3BlB,KAAK,EAAE;YAEP,IAAIA,KAAK,GAAGiB,QAAQ,EAAE;YAEtB,IAAME,SAAS,GAAGnB,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC1E,SAAS,CAAC5D,KAAK,EAAE,GAClD,IAAI,CAAC4D,SAAS,CAACoC,MAAM,CAAC,UAAAtB,CAAC;cAAA,OAAIA,CAAC,CAACZ,KAAK,GAAGY,CAAC,CAACG,UAAU,GAAG,MAAI,CAACX,QAAQ,IAAIQ,CAAC,CAACZ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGuF,cAAc,IAAI3E,CAAC,CAACgE,KAAK,CAACjI,MAAM,IAAI6H,KAAK;YAAA,EAAC,CAC/HrI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;cAAA,OAAKA,CAAC,CAACgG,QAAQ,CAAC1F,MAAM,GAAGP,CAAC,CAACiG,QAAQ,CAAC1F,MAAM;YAAA,EAAC;YAE5D,IAAIgJ,SAAS,CAAChJ,MAAM,IAAIoH,eAAe,GAAG4B,SAAS,CAAC,CAAC,CAAC,CAAC1F,MAAM,GAAGuE,KAAK,EAAE;cAErE,IAAIoB,SAAS,GAAG,KAAK;cAAC,6BACqB;gBACzC,IAAMlB,KAAK,GAAGiB,SAAS,CAACzF,CAAC,CAAC;gBAC1B,IAAMW,CAAC,GAAG6D,KAAK,CAACW,EAAE,CAACpF,MAAM,GAAGuE,KAAK;kBAAEM,CAAC,GAAGJ,KAAK,CAACW,EAAE,CAACrF,KAAK,IAAI,GAAG,IAAI,CAAC,GAAGwE,KAAK,CAAC,CAAC;gBAC3E,IAAMF,GAAG,GAAGC,mBAAQ,EAAE,CAAC9C,UAAU,CAACiD,KAAK,CAACR,CAAC,CAAC,CAACvC,QAAQ,CAAC+C,KAAK,CAACP,CAAC,CAAC,CAACE,UAAU,CAACK,KAAK,CAACG,EAAE,CAAC,CAAC7E,KAAK,CAAC8E,CAAC,CAAC,CAAC7E,MAAM,CAACY,CAAC,CAAC,CAAC6D,KAAK,CAACrC,QAAQ,CAAC;gBACpH,IAAI,CAACiC,GAAG,CAACsB,SAAS,EAAE;kBAClBlB,KAAK,CAAC1E,KAAK,GAAGnC,IAAI,CAACqH,IAAI,CAAClH,WAAG,CAACsG,GAAG,CAACE,KAAK,CAAChC,GAAG,CAAC,UAAA2C,CAAC;oBAAA,OAAIC,oBAAS,CAACD,CAAC,EAAE;sBAAC,aAAa,EAAET,KAAK,CAACR,CAAC;sBAAE,WAAW,EAAEQ,KAAK,CAACP;oBAAC,CAAC,CAAC;kBAAA,EAAC,CAAC,CAAC,GAAGO,KAAK,CAACP,CAAC;kBACxHO,KAAK,CAACzE,MAAM,GAAGqE,GAAG,CAACE,KAAK,CAAC7H,MAAM,IAAI+H,KAAK,CAACG,EAAE,GAAG,CAAC,CAAC;iBACjD,MACI;kBACHe,SAAS,GAAG,IAAI;kBAAC;;eAGpB;cAZD,KAAK,IAAI1F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyF,SAAS,CAAChJ,MAAM,EAAEuD,CAAC,EAAE;gBAAA;gBAAA,sBAUrC;cAAM;cAGV,IAAI,CAAC0F,SAAS,EAAE,IAAI,CAACC,SAAS,EAAE;aACjC,MACI;cACHL,OAAO,GAAG,EAAE;cACZ;;WAGH;UAED,IAAI,CAACK,SAAS,GAAG,YAAW;YAC1BL,OAAO,GAAG,EAAE;YACZ,IAAIvC,GAAG,GAAG,CAAC;cAAE6C,QAAQ,GAAG,CAAC;YACzB,KAAK,IAAIpJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoD,SAAS,CAACnD,MAAM,EAAED,CAAC,EAAE,EAAE;cAC9C,IAAMkE,CAAC,GAAG,IAAI,CAACd,SAAS,CAACpD,CAAC,CAAC;gBACrBoI,CAAC,GAAGlE,CAAC,CAACZ,KAAK,GAAG,IAAI,CAACI,QAAQ,IAAIQ,CAAC,CAACZ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGY,CAAC,CAACG,UAAU;cACpE,IAAImC,WAAG,CAACsC,OAAO,CAAChD,GAAG,CAAC,UAAAS,GAAG;gBAAA,OAAIjF,WAAG,CAACiF,GAAG,EAAE,UAAArC,CAAC;kBAAA,OAAI5C,WAAG,CAAC,CAAC4C,CAAC,CAACX,MAAM,EAAEW,CAAC,CAACE,WAAW,CAAC,CAAC;gBAAA,EAAC;cAAA,EAAC,CAAC,GAAGiD,eAAe,EAAE;gBAC5FyB,OAAO,GAAG,EAAE;gBACZ;;cAEF,IAAIV,CAAC,GAAGS,cAAc,EAAE;gBACtBC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAACE,UAAU,EAAE;gBACjB;eACD,MACI,IAAII,QAAQ,GAAGhB,CAAC,GAAGS,cAAc,EAAE;gBACtCO,QAAQ,IAAIhB,CAAC;eACd,MACI,IAAI,IAAI,CAACtF,UAAU,KAAK,QAAQ,EAAE;gBACrCsG,QAAQ,GAAGhB,CAAC;gBACZ7B,GAAG,EAAE;;cAEP,IAAI,CAACuC,OAAO,CAACvC,GAAG,GAAG,CAAC,CAAC,EAAEuC,OAAO,CAACvC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;cAC5CuC,OAAO,CAACvC,GAAG,GAAG,CAAC,CAAC,CAAC/F,IAAI,CAAC0D,CAAC,CAAC;cACxB,IAAI,IAAI,CAACpB,UAAU,KAAK,QAAQ,EAAE;gBAChCsG,QAAQ,GAAG,CAAC;gBACZ7C,GAAG,EAAE;;;WAGV;UAED,IAAI,CAAC4C,SAAS,EAAE;UAEhB,IAAI,CAACL,OAAO,CAAC7I,MAAM,IAAIuG,WAAG,CAACsC,OAAO,EAAE,IAAI,CAACO,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC5F,QAAQ,GAAG2D,eAAe,EAAE;YACjGuB,WAAW,GAAGpC,WAAG,CAAC,IAAI,CAACpD,SAAS,CAAC0C,GAAG,CAAC,UAAA5B,CAAC;cAAA,OAAIA,CAAC,CAACG,UAAU,GAAG,MAAI,CAACX,QAAQ;YAAA,EAAC,CAAC,GAAG,IAAI,CAACA,QAAQ;YACxF,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoD,SAAS,CAACnD,MAAM,EAAED,CAAC,EAAE,EAAE;cAC9C,IAAI,CAACoD,SAAS,CAACpD,CAAC,CAAC,CAACsD,KAAK,GAAG,CAAC;cAC3B,IAAI,CAACF,SAAS,CAACpD,CAAC,CAAC,CAACuD,MAAM,GAAG,CAAC;;YAE9B,IAAI,CAAC4F,SAAS,EAAE;;UAGlB,IAAIL,OAAO,CAAC7I,MAAM,IAAIuG,WAAG,CAACsC,OAAO,EAAE,IAAI,CAACO,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC5F,QAAQ,GAAG2D,eAAe,EAAE;YAChGyB,OAAO,CAACS,OAAO,CAAC,UAAChD,GAAG,EAAEvG,CAAC,EAAK;cAC1BuG,GAAG,CAACgD,OAAO,CAAC,UAAArF,CAAC,EAAI;gBACf,IAAIlE,CAAC,EAAE;kBACLkE,CAAC,CAACT,CAAC,GAAG+C,WAAG,CAACsC,OAAO,CAACtJ,KAAK,CAAC,CAAC,EAAEQ,CAAC,CAAC,EAAE,MAAI,CAACqJ,UAAU,CAACC,IAAI,CAAC,MAAI,CAAC,CAAC;;eAE7D,CAAC;aACH,CAAC;YACFV,WAAW,GAAGtH,WAAG,CAACwH,OAAO,EAAE,IAAI,CAACvD,SAAS,CAAC+D,IAAI,CAAC,IAAI,CAAC,CAAC;;;QAIzD,IAAME,WAAW,GAAGlI,WAAG,CAAC,IAAI,CAAC8B,SAAS,EAAE,UAACc,CAAC,EAAElE,CAAC;YAAA,OAAKsB,WAAG,CAAC,CAAC4C,CAAC,CAACX,MAAM,EAAE,MAAI,CAACyC,YAAY,CAAC,QAAQ,EAAE9B,CAAC,CAACrC,IAAI,EAAE7B,CAAC,CAAC,CAAC,CAAC,GAAGkE,CAAC,CAACT,CAAC;UAAA,EAAC,GAAG,IAAI,CAACoC,YAAY;UAC9H4D,UAAU,GAAGnI,WAAG,CAAC,CAACsH,WAAW,EAAE,IAAI,CAACtB,WAAW,CAAC,CAAC;QAEvD,IAAI,CAACjE,YAAY,CAACC,KAAK,GAAGmG,UAAU;QACpC,IAAI,CAACpG,YAAY,CAACE,MAAM,GAAGiG,WAAW;QAEtC,IAAIE,OAAO,GAAG,IAAI,CAAChG,QAAQ;UACvBiG,OAAO,GAAG,IAAI,CAACjG,QAAQ;QAC3B,IAAI,IAAI,CAACd,MAAM,KAAK,QAAQ,EAAE8G,OAAO,GAAG,CAAC,IAAI,CAACvD,MAAM,GAAGsD,UAAU,IAAI,CAAC,CAAC,KAClE,IAAI,IAAI,CAAC7G,MAAM,KAAK,OAAO,EAAE8G,OAAO,GAAG,IAAI,CAACvD,MAAM,GAAG,IAAI,CAACzC,QAAQ,GAAG+F,UAAU;QACpF,IAAI,IAAI,CAACvD,cAAc,KAAK,QAAQ,EAAEyD,OAAO,GAAG,CAAC,IAAI,CAAC3G,OAAO,GAAGwG,WAAW,IAAI,CAAC,CAAC,KAC5E,IAAI,IAAI,CAACtD,cAAc,KAAK,QAAQ,EAAEyD,OAAO,GAAG,IAAI,CAAC3G,OAAO,GAAG,IAAI,CAACU,QAAQ,GAAG8F,WAAW;QAC/F,IAAI,CAACnG,YAAY,CAACG,CAAC,GAAGkG,OAAO;QAC7B,IAAI,CAACrG,YAAY,CAACI,CAAC,GAAGkG,OAAO;QAE7B,IAAI,CAACjH,WAAW,CACbb,IAAI,CAAC,IAAI,CAAC0F,MAAM,GAAG,CAAC;UAACqC,IAAI,EAAE,IAAI,CAACrC;QAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAC9CsC,QAAQ,CAAC,IAAI,CAAC9G,SAAS,CAAC,CACxB6D,MAAM,CAAC,IAAI,CAACO,WAAW,CAACJ,IAAI,EAAE,CAAC,CAC/B+C,UAAU,CAAC;UAACC,IAAI,EAAE,OAAO;UAAEC,MAAM,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC,IAAI,CAACrH,MAAM,CAAC,CAAC,CACxEU,KAAK,CAAC,IAAI,CAAC6C,MAAM,GAAG,IAAI,CAACzC,QAAQ,GAAG,CAAC,CAAC,CACtCF,CAAC,CAAC,IAAI,CAACE,QAAQ,CAAC,CAChBD,CAAC,CAAC,IAAI,CAACJ,YAAY,CAACI,CAAC,CAAC,CACtByG,MAAM,CAAC,IAAI,CAACjE,YAAY,CAAC,CACzBkE,MAAM,EAAE;QAEX,IAAI,CAACtG,OAAO,GAAG,EAAE;QACjB,IAAMuG,UAAU,GAAGC,uBAAU,CAACf,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAACxF,YAAY,EAAE,QAAQ,CAAC;UAC/DoG,MAAM,GAAG;YACPjC,EAAE,EAAE,YAAA/D,CAAC;cAAA,OAAIA,CAAC,CAAC+D,EAAE;YAAA;YACbD,KAAK,EAAE,eAAA9D,CAAC;cAAA,OAAIA,CAAC,CAAC8D,KAAK;YAAA;YACnBL,UAAU,EAAE,oBAAAzD,CAAC;cAAA,OAAIA,CAAC,CAACwD,EAAE;YAAA;WACtB;QAEP,IAAM7F,IAAI,GAAG,IAAI,CAACgB,KAAK,CAACiD,GAAG,CAAC,UAAC5B,CAAC,EAAElE,CAAC,EAAK;UAEpC,IAAMsK,GAAG,GAAG;YACVC,UAAU,EAAE,IAAI;YAChB1I,IAAI,EAAEqC,CAAC;YAAElE,CAAC,EAADA,CAAC;YACViI,EAAE,EAAE,MAAI,CAAChF,GAAG,CAACiB,CAAC,EAAElE,CAAC,CAAC;YAClBgI,KAAK,EAAE,MAAI,CAAC5E,SAAS,CAACpD,CAAC,CAAC,CAACsD,KAAK,GAAG,MAAI,CAACH,MAAM,CAACe,CAAC,EAAElE,CAAC,CAAC,GAAG,KAAK;YAC1D0H,EAAE,EAAE,MAAI,CAAC1B,YAAY,CAAC,YAAY,EAAE9B,CAAC,EAAElE,CAAC,CAAC;YACzCuE,KAAK,EAAE,MAAI,CAACZ,MAAM,CAACO,CAAC,EAAElE,CAAC;WACxB;UAED,OAAOsK,GAAG;SAEX,CAAC;;;QAGF,IAAI,CAACzG,OAAO,GAAG,EAAE;QACjB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC0F,OAAO,CAAC,UAAAiB,KAAK,EAAI;UAElC,MAAI,CAAC3G,OAAO,CAACrD,IAAI,CACf,IAAIiK,iBAAM,CAACD,KAAK,CAAC,EAAE,CAChBtD,MAAM,CAAC,MAAI,CAAC,CACZrF,IAAI,CAACA,IAAI,CAAC2D,MAAM,CAAC,UAAAtB,CAAC;YAAA,OAAIA,CAAC,CAACK,KAAK,KAAKiG,KAAK;UAAA,EAAC,CAAC,CACzCX,QAAQ,CAAC,MAAI,CAAC9G,SAAS,CAAC,CACxB4B,WAAW,CAAC;YAACnC,OAAO,EAAE;UAAC,CAAC,CAAC,CACzBoE,MAAM,CAAC,MAAI,CAACQ,WAAW,CAACL,IAAI,EAAE,CAAC,CAC/B7B,aAAa,CAAC,KAAK,CAAC,CACpBgF,MAAM,CAAC3B,mBAAM,CAAC,EAAE,EAAE6B,UAAU,EAAEF,MAAM,CAAC,CAAC,CACtCC,MAAM,EAAE,CACZ;SAEF,CAAC;QAEF,IAAIzD,QAAQ,EAAEgE,UAAU,CAAChE,QAAQ,EAAE,IAAI,CAAC3D,SAAS,GAAG,GAAG,CAAC;QAExD,OAAO,IAAI;;;;;;;;;;;aAUb,gBAAO4H,CAAC,EAAE;QACR,IAAI,CAAC9G,OAAO,CAAC0F,OAAO,CAAC,UAAA9B,CAAC;UAAA,OAAIA,CAAC,CAACmD,MAAM,CAACD,CAAC,CAAC;QAAA,EAAC;QACtC,OAAO,IAAI;;;;;;;;;;;aASb,eAAMA,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC2C,MAAM,GAAG+H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC/H,MAAM;;;;;;;;;;;aASjE,cAAK+H,CAAC,EAAE;QACN,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC4C,KAAK,GAAG8H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC9H,KAAK;;;;;;;;;;;aAS/D,mBAAU8H,CAAC,EAAE;QACX,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC6C,UAAU,GAAG6H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC7H,UAAU;;;;;;;;;;;aASzE,kBAAS6H,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC8C,SAAS,GAAG4H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC5H,SAAS;;;;;;;;;;;aASvE,gBAAO4H,CAAC,EAAE;QACR,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC+C,OAAO,GAAG2H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC3H,OAAO;;;;;;;;;;;aASnE,eAAM2H,CAAC,EAAE;QACP,IAAI,CAAC9G,OAAO,CAAC0F,OAAO,CAAC,UAAA9B,CAAC;UAAA,OAAIA,CAAC,CAACqD,KAAK,CAACH,CAAC,CAAC;QAAA,EAAC;QACrC,OAAO,IAAI;;;;;;;;;;;;;;;aAab,YAAGA,CAAC,EAAE;QACJ,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACgD,GAAG,GAAG0H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC1H,GAAG;;;;;;;;;;;aAS3D,eAAM0H,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACkD,MAAM,GAAG,OAAOwH,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAG/G,qBAAQ,CAAC+G,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACxH,MAAM;;;;;;;;;;;aASzG,uBAAc;QACZ,OAAO,IAAI,CAACE,YAAY;;;;;;;;;;;aAS1B,iBAAQsH,CAAC,EAAE;QACT,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACyD,QAAQ,GAAGiH,CAAC,EAAE,IAAI,IAAI,IAAI,CAACjH,QAAQ;;;;;;;;;;;aASrE,gBAAOiH,CAAC,EAAE;QACR,IAAIE,SAAS,CAAC5K,MAAM,EAAE;UACpB,IAAI,CAAC0G,OAAO,GAAGC,kBAAM,CAAC+D,CAAC,CAAC;UACxB,IAAI,CAACjG,IAAI,GAAGqG,cAAS,CAAC,IAAI,CAACpE,OAAO,CAACI,IAAI,EAAE,CAAC;UAC1C,OAAO,IAAI;;QAEb,OAAO,IAAI,CAACJ,OAAO;;;;;;;;;;;aASrB,eAAMgE,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC0D,MAAM,GAAG,OAAOgH,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAG/G,qBAAQ,CAAC+G,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAChH,MAAM;;;;;;;;;;;aASzG,qBAAYgH,CAAC,EAAE;QACb,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC6D,YAAY,GAAGyE,mBAAM,CAAC,IAAI,CAACzE,YAAY,EAAE6G,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC7G,YAAY;;;;;;;;;;;aASxG,eAAM6G,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACsH,MAAM,GAAGoD,CAAC,EAAE,IAAI,IAAI,IAAI,CAACpD,MAAM;;;;;;;;;;;aASjE,qBAAYoD,CAAC,EAAE;QACb,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACgG,YAAY,GAAGsC,mBAAM,CAAC,IAAI,CAACtC,YAAY,EAAE0E,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC1E,YAAY;;;;;;;;;;;aASxG,uBAAc0E,CAAC,EAAE;QACf,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACiG,cAAc,GAAGyE,CAAC,EAAE,IAAI,IAAI,IAAI,CAACzE,cAAc;;;;;;;;;;;aASjF,eAAMyE,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACkG,MAAM,GAAGwE,CAAC,EAAE,IAAI,IAAI,IAAI,CAACxE,MAAM;;IAChE;IAAA;EAAA,EAhiBiC6E,sBAAS;ECpB7C;;;;EAqBA;;;;;EAAA,IAKqBC,UAAU;IAAA;IAAA;;;;;;IAO7B,sBAAc;MAAA;MAAA;MAEZ;MAEA,OAAKC,UAAU,GAAG,IAAIC,eAAI,EAAE;MAC5B,OAAKC,WAAW,GAAG;QACjBC,QAAQ,EAAE;OACX;MACD,OAAKC,SAAS,GAAG,IAAIH,eAAI,EAAE;MAC3B,OAAKvI,MAAM,GAAG,QAAQ;MACtB,OAAK2I,QAAQ,GAAG,CAAC;MACjB,OAAKC,WAAW,GAAG,KAAK;MACxB,OAAKC,aAAa,GAAG,UAACC,IAAI,EAAE1L,CAAC,EAAE2L,KAAK,EAAEC,SAAS,EAAK;QAElD,IAAMC,MAAM,GAAG,OAAKT,WAAW,CAACU,UAAU,GACtC,OAAKV,WAAW,CAACU,UAAU,GAAGC,6BAAgB;QAElD,IAAMC,IAAI,GAAGL,KAAK,CAAC3L,CAAC,GAAG,CAAC,CAAC;QACzB,IAAMiM,IAAI,GAAGjM,CAAC,GAAG2L,KAAK,CAAC3L,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;QACrC,IAAMkM,IAAI,GAAGlM,CAAC,KAAK2L,KAAK,CAAC1L,MAAM,GAAG,CAAC;QACnC,IAAIyL,IAAI,KAAKM,IAAI,IAAIE,IAAI,EAAE;UACzB,IAAMC,MAAM,GAAGD,IAAI,IAAIR,IAAI,GAAGpK,WAAG,CAACsK,SAAS,CAAC,GAAG,GAAG,GAAG,EAAE;UACvD,iBAAUC,MAAM,CAACH,IAAI,CAAC,SAAGS,MAAM;SAChC,MACI;UACH,IAAMC,GAAG,GAAGJ,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAGN,IAAI,GAAG,GAAG;UAE1C,IAAMW,GAAG,GAAGD,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,CAAC,CAAC,GAAGjL,IAAI,CAACmL,KAAK,CAACF,GAAG,CAAC,CAACG,QAAQ,EAAE,CAACtM,MAAM,GAAG,CAAC,GAAGmM,GAAG,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAACxM,MAAM,GAAG,CAAC,CAAC;UACrJ,IAAMyM,GAAG,GAAGvL,IAAI,CAACkL,GAAG,CAAC,EAAE,EAAEA,GAAG,CAAC;UAE7B,IAAMM,SAAS,GAAGV,IAAI,KAAKP,IAAI,IAAI1L,CAAC,KAAK,CAAC,GACtC6L,MAAM,CAACrK,WAAG,CAAC,CAACkK,IAAI,GAAGgB,GAAG,EAAEd,SAAS,CAACgB,IAAI,CAAC,UAAA1I,CAAC;YAAA,OAAIA,CAAC,GAAGwH,IAAI,IAAIxH,CAAC,GAAG8H,IAAI;UAAA,EAAC,CAAC,CAAC,CAAC,GACpEH,MAAM,CAACH,IAAI,CAAC;UAEhB,IAAMmB,SAAS,GAAGnB,IAAI,IAAI1L,CAAC,KAAK,CAAC,GAC7B6L,MAAM,CAACG,IAAI,CAAC,GACZH,MAAM,CAACvK,WAAG,CAAC,CAAC0K,IAAI,GAAGU,GAAG,EAAEd,SAAS,CAACkB,OAAO,EAAE,CAACF,IAAI,CAAC,UAAA1I,CAAC;YAAA,OAAIA,CAAC,GAAGwH,IAAI,IAAIxH,CAAC,GAAG8H,IAAI;UAAA,EAAC,CAAC,CAAC,CAAC;UAElF,OAAO,OAAKe,aAAa,CAACJ,SAAS,EAAEE,SAAS,CAAC;;OAGlD;MACD,OAAKE,aAAa,GAAG,UAACrN,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,KAAKC,CAAC,aAAMD,CAAC,gBAAMC,CAAC,cAAQD,CAAC,CAAE;MAAA;MAC/D,OAAKsN,SAAS,GAAG,IAAI;MACrB,OAAKC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACrE,OAAKC,SAAS,GAAGrI,yBAAa,CAACsI,EAAE;MACjC,OAAKC,SAAS,GAAGvI,yBAAa,CAACwI,KAAK;MACpC,OAAKC,SAAS,GAAGzI,yBAAa,CAAC0I,GAAG;MAClC,OAAK1K,KAAK,GAAG,EAAE;MACf,OAAKE,SAAS,GAAG,GAAG;MACpB,OAAKC,OAAO,GAAG,GAAG;MAClB,OAAKwK,WAAW,GAAG,IAAI7K,kBAAO,EAAE;MAChC,OAAK8K,YAAY,GAAG;QAClB7I,SAAS,EAAEC,yBAAa,CAACC,IAAI;QAC7BG,QAAQ,EAAE;OACX;MACD,OAAKyI,YAAY,GAAG,IAAIjL,MAAM,EAAE;MAChC,OAAKkL,aAAa,GAAG;QACnBC,WAAW,EAAE;UACXC,MAAM,EAAEhJ,yBAAa,CAACC,IAAI;UAC1BgJ,WAAW,EAAE;;OAEhB;MACD,OAAKC,SAAS,GAAG,CAAC;MAClB,OAAKC,OAAO,GAAG,QAAQ;MACvB,OAAK3K,YAAY,GAAG;QAACC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC,CAAC;MACrD,OAAKC,QAAQ,GAAG,CAAC;MACjB,OAAKuK,UAAU,GAAG,IAAIC,WAAI,EAAE,CAAChH,MAAM,gCAAM;MACzC,OAAKiH,WAAW,GAAG;QACjBN,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE;OACd;MACD,OAAKM,MAAM,GAAG,QAAQ;MACtB,OAAKC,KAAK,GAAG,EAAE;MACf,OAAKC,MAAM,GAAGpL,qBAAQ,CAAC,OAAO,CAAC;MAC/B,OAAKiD,MAAM,GAAG,GAAG;MAAC;;;;;;;;;;;aAUpB,gBAAOO,QAAQ,EAAE;QAAA;QAEf,IAAI,IAAI,CAACC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,CAACC,MAAM,CAACA,kBAAM,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,OAAO,YAAK,IAAI,CAACX,MAAM,QAAK,CAACW,IAAI,CAAC,QAAQ,YAAK,IAAI,CAAC9D,OAAO,QAAK,CAAC+D,IAAI,EAAE,CAAC;QAEnJ,IAAMwH,UAAU,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACR,OAAO,CAAC;QAE3D,IAAMzK,MAAM,GAAGgL,UAAU,GAAG,QAAQ,GAAG,OAAO;UACxCjL,KAAK,GAAGiL,UAAU,GAAG,OAAO,GAAG,QAAQ;UACvC/K,CAAC,GAAG+K,UAAU,GAAG,GAAG,GAAG,GAAG;UAC1B9K,CAAC,GAAG8K,UAAU,GAAG,GAAG,GAAG,GAAG;;;QAGhC,IAAI,CAACvH,MAAM,GAAGC,iBAAI,CAAC,qBAAqB,EAAE;UAACC,MAAM,EAAE,IAAI,CAACP;QAAO,CAAC,CAAC;QAEjE,IAAMiF,SAAS,GAAG,IAAI,CAAC/I,KAAK,CACzBiD,GAAG,CAAC,IAAI,CAACwI,MAAM,CAAC,CAChB9I,MAAM,CAAC,UAAAtB,CAAC;UAAA,OAAIA,CAAC,KAAK,IAAI,IAAI,OAAOA,CAAC,KAAK,QAAQ;QAAA,EAAC,CAChDzE,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;UAAA,OAAKD,CAAC,GAAGC,CAAC;QAAA,EAAC;QAExB,IAAM8O,MAAM,GAAG,IAAI,CAACC,OAAO,IAAIC,cAAM,CAAC/C,SAAS,CAAC;QAChD,IAAMgD,QAAQ,GAAGH,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS;QAC3C,IAAMc,QAAQ,GAAGJ,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS;QAC3C,IAAMe,SAAS,GAAGF,QAAQ,IAAIC,QAAQ;QAEtC,IAAME,UAAU,GAAGvN,WAAG,CAAC,CACrB,IAAI,CAAC+J,QAAQ,YAAYyD,KAAK,GAAG,IAAI,CAACzD,QAAQ,CAACtL,MAAM,GAAG,IAAI,CAACsL,QAAQ,EACrEuD,SAAS,IAAI,IAAI,CAACV,MAAM,KAAK,OAAO,GAAG,CAAC,GAAGjN,IAAI,CAACC,KAAK,CAAC6N,mBAAM,CAACrD,SAAS,CAAC,CAAC3L,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGgP,mBAAM,CAACrD,SAAS,CAAC,CAAC3L,MAAM,CACnH,CAAC;QAEF,IAAIiP,MAAM,GAAGJ,SAAS,GAAGxI,SAAS,GAAG,IAAI,CAAC2G,MAAM;UAAEkC,MAAM;UAAExD,KAAK;QAE/D,IAAIuD,MAAM,IAAI,EAAEA,MAAM,YAAYF,KAAK,CAAC,EAAE;UACxCE,MAAM,GAAGE,aAAK,CAAC,CAAC,EAAEL,UAAU,EAAE,CAAC,CAAC,CAC7BjJ,GAAG,CAAC,UAAA9F,CAAC;YAAA,OAAIqP,wBAAY,CAACH,MAAM,EAAE,CAAClP,CAAC,GAAG,CAAC,IAAI+O,UAAU,CAAC;UAAA,EAAC,CACpDjC,OAAO,EAAE;;QAGd,IAAI,IAAI,CAACsB,MAAM,KAAK,OAAO,EAAE;UAE3B,IAAMkB,OAAO,GAAG9N,WAAG,CAAC,CAAC0N,MAAM,GAAGA,MAAM,CAACjP,MAAM,GAAG8O,UAAU,EAAEA,UAAU,EAAEnD,SAAS,CAAC3L,MAAM,CAAC,CAAC;UAExF,IAAIsP,KAAK,GAAG,EAAE;UAEd,IAAI,IAAI,CAAChE,QAAQ,YAAYyD,KAAK,EAAE;YAClCrD,KAAK,GAAG,IAAI,CAACJ,QAAQ;WACtB,MACI;YAEH,IAAIuD,SAAS,IAAI,IAAI,CAAC9B,SAAS,EAAE;cAE/B,IAAMwC,IAAI,GAAGrO,IAAI,CAACC,KAAK,CAACkO,OAAO,GAAG,CAAC,CAAC;cACpC,IAAMG,QAAQ,GAAGH,OAAO,GAAG,CAAC;cAE5B,IAAMI,SAAS,GAAG9D,SAAS,CAACpG,MAAM,CAAC,UAAAtB,CAAC;gBAAA,OAAIA,CAAC,GAAG,MAAI,CAAC6J,SAAS;cAAA,EAAC;cAC3D,IAAM4B,kBAAkB,GAAGC,iBAAS,CAACF,SAAS,CAAC;cAE/C,IAAMG,SAAS,GAAGjE,SAAS,CAAC7F,MAAM,CAAC,IAAI,CAACgI,SAAS,CAAC,CAACvI,MAAM,CAAC,UAAAtB,CAAC;gBAAA,OAAIA,CAAC,IAAI,MAAI,CAAC6J,SAAS;cAAA,EAAC;cACnF,IAAM+B,kBAAkB,GAAGF,iBAAS,CAACC,SAAS,CAAC;cAE/C,IAAME,aAAa,GAAGJ,kBAAkB,GAAGG,kBAAkB,GAAG,CAAC,GAAG,CAAC;cACrE,IAAME,aAAa,GAAGF,kBAAkB,GAAGH,kBAAkB,GAAG,CAAC,GAAG,CAAC;cAErE,IAAMM,aAAa,GAAGC,OAAO,CAACR,SAAS,EAAElO,WAAG,CAAC,CAACgO,IAAI,GAAGC,QAAQ,GAAGM,aAAa,EAAEL,SAAS,CAACzP,MAAM,CAAC,CAAC,CAAC;cAClG,IAAMkQ,aAAa,GAAGD,OAAO,CAACL,SAAS,EAAErO,WAAG,CAAC,CAACgO,IAAI,GAAGC,QAAQ,GAAGO,aAAa,EAAEH,SAAS,CAAC5P,MAAM,CAAC,CAAC,CAAC;cAElGsP,KAAK,GAAGU,aAAa,CAAClK,MAAM,CAACoK,aAAa,CAAC;aAC5C,MACI;cACHZ,KAAK,GAAGW,OAAO,CAACtE,SAAS,EAAE0D,OAAO,CAAC;;YAGrC3D,KAAK,GAAG4D,KAAK,CAACzJ,GAAG,CAAC,UAAAsK,CAAC;cAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;YAAA,EAAC;;UAI9B,IAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC3E,KAAK,CAAC;UAE9B,IAAIA,KAAK,CAAC1L,MAAM,KAAKoQ,OAAO,CAACE,IAAI,EAAEpB,MAAM,GAAGH,KAAK,CAACwB,IAAI,CAACH,OAAO,CAAC;UAE/D,IAAI,CAACnB,MAAM,EAAE;YACX,IAAIJ,SAAS,EAAE;cACbI,MAAM,GAAG,CAAC,IAAI,CAAC5B,SAAS,EAAE,IAAI,CAACF,SAAS,EAAE,IAAI,CAACF,SAAS,CAAC;cACzD,IAAMwC,UAAS,GAAG/D,KAAK,CACpBnM,KAAK,CAAC,CAAC,EAAE8P,OAAO,CAAC,CACjB9J,MAAM,CAAC,UAACtB,CAAC,EAAElE,CAAC;gBAAA,OAAKkE,CAAC,GAAG,MAAI,CAAC6J,SAAS,IAAIpC,KAAK,CAAC3L,CAAC,GAAG,CAAC,CAAC,IAAI,MAAI,CAAC+N,SAAS;cAAA,EAAC;cACzE,IAAM0C,QAAQ,GAAG9E,KAAK,CACnBnM,KAAK,CAAC,CAAC,EAAE8P,OAAO,CAAC,CACjB9J,MAAM,CAAC,UAACtB,CAAC,EAAElE,CAAC;gBAAA,OAAKkE,CAAC,IAAI,MAAI,CAAC6J,SAAS,IAAIpC,KAAK,CAAC3L,CAAC,GAAG,CAAC,CAAC,GAAG,MAAI,CAAC+N,SAAS;cAAA,EAAC;cACzE,IAAM8B,UAAS,GAAGlE,KAAK,CACpBnM,KAAK,CAAC,CAAC,EAAE8P,OAAO,CAAC,CACjB9J,MAAM,CAAC,UAAAtB,CAAC;gBAAA,OAAIA,CAAC,GAAG,MAAI,CAAC6J,SAAS;cAAA,EAAC;cAClC,IAAM2C,cAAc,GAAGhB,UAAS,CAAC5J,GAAG,CAAC,UAAC5B,CAAC,EAAElE,CAAC;gBAAA,OAAK,CAACA,CAAC,GAAGkP,MAAM,CAAC,CAAC,CAAC,GAAGG,wBAAY,CAACH,MAAM,CAAC,CAAC,CAAC,EAAElP,CAAC,GAAG0P,UAAS,CAACzP,MAAM,CAAC;cAAA,EAAC;cAC9G,IAAM0Q,cAAc,GAAGF,QAAQ,CAAC3K,GAAG,CAAC;gBAAA,OAAMoJ,MAAM,CAAC,CAAC,CAAC;cAAA,EAAC;cACpD,IAAM0B,cAAc,GAAGf,UAAS,CAAC/J,GAAG,CAAC,UAAC5B,CAAC,EAAElE,CAAC;gBAAA,OAAKA,CAAC,KAAK6P,UAAS,CAAC5P,MAAM,GAAG,CAAC,GAAGiP,MAAM,CAAC,CAAC,CAAC,GAAGG,wBAAY,CAACH,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAClP,CAAC,GAAG,CAAC,IAAI6P,UAAS,CAAC5P,MAAM,CAAC;cAAA,EAAC;cAChJiP,MAAM,GAAGwB,cAAc,CAAC3K,MAAM,CAAC4K,cAAc,CAAC,CAAC5K,MAAM,CAAC6K,cAAc,CAAC;aACtE,MACI;cACH1B,MAAM,GAAGE,aAAK,CAAC,CAAC,EAAEL,UAAU,EAAE,CAAC,CAAC,CAC7BjJ,GAAG,CAAC,UAAA9F,CAAC;gBAAA,OAAIqP,wBAAY,CAAC,MAAI,CAACnC,SAAS,EAAElN,CAAC,GAAG+O,UAAU,CAAC;cAAA,EAAC,CACtDjC,OAAO,EAAE;;;UAIhB,IAAInB,KAAK,CAAC1L,MAAM,IAAIqP,OAAO,EAAEJ,MAAM,GAAGA,MAAM,CAAC1P,KAAK,CAAC,CAACmM,KAAK,CAAC1L,MAAM,CAAC;UAEjEiP,MAAM,GAAG,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACnJ,MAAM,CAACmJ,MAAM,CAAC;UAEnC,IAAI,CAAC2B,WAAW,GAAGC,sBAAc,EAAE,CAChCrC,MAAM,CAAC9C,KAAK,CAAC,CACbyD,KAAK,CAACF,MAAM,CAAC;SAEjB,MACI;UAEH,IAAII,QAAO,GAAG,IAAI,CAAC/D,QAAQ,YAAYyD,KAAK,GAAG,IAAI,CAACzD,QAAQ,GAAGjF,SAAS;UACxE,IAAIwI,SAAS,IAAI,CAACI,MAAM,EAAE;YACxB,IAAMM,KAAI,GAAGrO,IAAI,CAACC,KAAK,CAAC2N,UAAU,GAAG,CAAC,CAAC;YACvC,IAAMgC,kBAAkB,GAAGC,4BAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC3D,SAAS,EAAE,IAAI,CAACF,SAAS,CAAC;YACpF,IAAMsD,eAAc,GAAGtB,aAAK,CAAC,CAAC,EAAEI,KAAI,EAAE,CAAC,CAAC,CAAC1J,GAAG,CAAC,UAAA9F,CAAC;cAAA,OAAI+Q,kBAAkB,CAAC/Q,CAAC,GAAGwP,KAAI,CAAC;YAAA,EAAC;YAC/E,IAAMmB,eAAc,GAAG,CAAC5B,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,EAAEjJ,GAAG,CAAC;cAAA,OAAM,MAAI,CAACsH,SAAS;YAAA,EAAC;YAC5E,IAAM8D,kBAAkB,GAAGF,4BAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC/D,SAAS,EAAE,IAAI,CAACE,SAAS,CAAC;YACpF,IAAMwD,eAAc,GAAGxB,aAAK,CAAC,CAAC,EAAEI,KAAI,EAAE,CAAC,CAAC,CAAC1J,GAAG,CAAC,UAAA9F,CAAC;cAAA,OAAIkR,kBAAkB,CAAClR,CAAC,GAAGwP,KAAI,CAAC;YAAA,EAAC,CAAC1C,OAAO,EAAE;YACzFoC,MAAM,GAAGwB,eAAc,CAAC3K,MAAM,CAAC4K,eAAc,CAAC,CAAC5K,MAAM,CAAC6K,eAAc,CAAC;YACrE,IAAI,CAACtB,QAAO,EAAE;cACZ,IAAM6B,IAAI,GAAG,CAACjC,MAAM,CAACjP,MAAM,GAAG,CAAC,IAAI,CAAC;cACpCqP,QAAO,GAAG,CAACb,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACV,SAAS,EAAEU,MAAM,CAAC,CAAC,CAAC,CAAC;cAChDa,QAAO,GAAGF,aAAK,CAACX,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACV,SAAS,EAAE,EAAEU,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS,CAAC,GAAGoD,IAAI,CAAC,CAC7EpL,MAAM,CAACqJ,aAAK,CAAC,IAAI,CAACrB,SAAS,EAAEU,MAAM,CAAC,CAAC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS,IAAIoD,IAAI,CAAC,CAAC,CAC7EpL,MAAM,CAAC,CAAC0I,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;WAEzB,MACI;YACH,IAAI,CAACS,MAAM,EAAE;cACX,IAAI,IAAI,CAACd,MAAM,KAAK,SAAS,IAAI,IAAI,CAACA,MAAM,KAAK,UAAU,EAAE;gBAC3Dc,MAAM,GAAGE,aAAK,CAAC,CAAC,EAAEL,UAAU,EAAE,CAAC,CAAC,CAC7BjJ,GAAG,CAAC,UAAA9F,CAAC;kBAAA,OAAIqP,wBAAY,CAACT,QAAQ,GAAG,MAAI,CAACtB,SAAS,GAAG,MAAI,CAACJ,SAAS,EAAElN,CAAC,GAAG+O,UAAU,CAAC;gBAAA,EAAC;gBACrF,IAAIF,QAAQ,EAAEK,MAAM,GAAGA,MAAM,CAACpC,OAAO,EAAE;eACxC,MACI;gBACHoC,MAAM,GAAGN,QAAQ,GAAG,CAAC,IAAI,CAACtB,SAAS,EAAE+B,wBAAY,CAAC,IAAI,CAAC/B,SAAS,EAAE,GAAG,CAAC,CAAC,GACnE,CAAC+B,wBAAY,CAAC,IAAI,CAACnC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,CAACA,SAAS,CAAC;;;YAG3D,IAAI,CAACoC,QAAO,EAAE;cACZ,IAAI,IAAI,CAAClB,MAAM,KAAK,UAAU,EAAE;gBAC9B,IAAM+C,KAAI,GAAG,CAAC,IAAIjC,MAAM,CAACjP,MAAM,GAAG,CAAC,CAAC;gBACpCqP,QAAO,GAAGF,aAAK,CAAC,CAAC,EAAE,CAAC,GAAG+B,KAAI,GAAG,CAAC,EAAEA,KAAI,CAAC,CACnCrL,GAAG,CAAC,UAAA5B,CAAC;kBAAA,OAAIkN,gBAAQ,CAACxF,SAAS,EAAE1H,CAAC,CAAC;gBAAA,EAAC;eACpC,MACI,IAAI4K,SAAS,IAAI,IAAI,CAAC7B,MAAM,IAAI,IAAI,CAACD,SAAS,EAAE;gBACnD,IAAMqE,YAAY,GAAG,CAAC,IAAI,CAACtD,SAAS,GAAGU,MAAM,CAAC,CAAC,CAAC,IAAItN,IAAI,CAACC,KAAK,CAAC8N,MAAM,CAACjP,MAAM,GAAG,CAAC,CAAC;gBACjF,IAAMqR,YAAY,GAAG,CAAC7C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS,IAAI5M,IAAI,CAACC,KAAK,CAAC8N,MAAM,CAACjP,MAAM,GAAG,CAAC,CAAC;gBACjF,IAAMsR,eAAe,GAAGnC,aAAK,CAACX,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACV,SAAS,EAAEsD,YAAY,CAAC;gBACtE,IAAMG,eAAe,GAAGpC,aAAK,CAAC,IAAI,CAACrB,SAAS,EAAEU,MAAM,CAAC,CAAC,CAAC,GAAG6C,YAAY,GAAG,CAAC,EAAEA,YAAY,CAAC;gBAEzFhC,QAAO,GAAGiC,eAAe,CAACxL,MAAM,CAACyL,eAAe,CAAC;eAClD,MACI;gBACH,IAAML,MAAI,GAAG,CAAC1C,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,KAAKS,MAAM,CAACjP,MAAM,GAAG,CAAC,CAAC;gBAC1DqP,QAAO,GAAGF,aAAK,CAACX,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAG0C,MAAI,GAAG,CAAC,EAAEA,MAAI,CAAC;;;;UAK5D,IAAI,IAAI,CAAC/C,MAAM,KAAK,SAAS,IAAI,IAAI,CAACA,MAAM,KAAK,UAAU,EAAE;YAC3DzC,KAAK,GAAG2D,QAAO;YACfJ,MAAM,GAAG,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACnJ,MAAM,CAACmJ,MAAM,CAAC;WACpC,MACI,IAAI,IAAI,CAACd,MAAM,KAAK,KAAK,EAAE;YAC9B,IAAMmD,gBAAe,GAAGjC,QAAO,CAAC9J,MAAM,CAAC,UAAAtB,CAAC;cAAA,OAAIA,CAAC,GAAG,CAAC;YAAA,EAAC;YAClD,IAAIqN,gBAAe,CAACtR,MAAM,EAAE;cAC1B,IAAMwR,MAAM,GAAGF,gBAAe,CAAC,CAAC,CAAC;cACjC,IAAMG,kBAAkB,GAAGH,gBAAe,CAACzL,GAAG,CAAC,UAAA5B,CAAC;gBAAA,OAAI,CAAC/C,IAAI,CAACkL,GAAG,CAAClL,IAAI,CAACwQ,GAAG,CAACF,MAAM,CAAC,EAAEvN,CAAC,GAAGuN,MAAM,CAAC;cAAA,EAAC;cAC5FF,gBAAe,CAAChI,OAAO,CAAC,UAACqI,MAAM,EAAE5R,CAAC,EAAK;gBACrCsP,QAAO,CAACA,QAAO,CAACuC,OAAO,CAACD,MAAM,CAAC,CAAC,GAAGF,kBAAkB,CAAC1R,CAAC,CAAC;eACzD,CAAC;;YAEJ,IAAMwR,gBAAe,GAAGlC,QAAO,CAAC9J,MAAM,CAAC,UAAAtB,CAAC;cAAA,OAAIA,CAAC,GAAG,CAAC;YAAA,EAAC;YAClD,IAAIsN,gBAAe,CAACvR,MAAM,EAAE;cAC1B,IAAM6R,MAAM,GAAGN,gBAAe,CAACA,gBAAe,CAACvR,MAAM,GAAG,CAAC,CAAC;cAC1D,IAAM8R,kBAAkB,GAAGP,gBAAe,CAAC1L,GAAG,CAAC,UAAA5B,CAAC;gBAAA,OAAI/C,IAAI,CAACkL,GAAG,CAACyF,MAAM,EAAE5N,CAAC,GAAG4N,MAAM,CAAC;cAAA,EAAC;cACjFN,gBAAe,CAACjI,OAAO,CAAC,UAACqI,MAAM,EAAE5R,CAAC,EAAK;gBACrCsP,QAAO,CAACA,QAAO,CAACuC,OAAO,CAACD,MAAM,CAAC,CAAC,GAAGG,kBAAkB,CAAC/R,CAAC,CAAC;eACzD,CAAC;;YAEJ,IAAIsP,QAAO,CAACd,QAAQ,CAAC,CAAC,CAAC,EAAEc,QAAO,CAACA,QAAO,CAACuC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;UAG1D,IAAI,CAAChB,WAAW,GAAG,CAAC,IAAI,CAACzC,MAAM,KAAK,SAAS,IAAI,IAAI,CAACA,MAAM,KAAK,UAAU,GAAG0C,sBAAc,GAAGkB,mBAAW,GAAG,CAC1GvD,MAAM,CAACa,QAAO,CAAC,CACfF,KAAK,CAACF,MAAM,CAAC;;QAIlB,IAAI,IAAI,CAAC2B,WAAW,CAACoB,KAAK,EAAE,IAAI,CAACpB,WAAW,CAACoB,KAAK,CAAC,IAAI,CAAC;QAExD,IAAMC,QAAQ,GAAG,IAAI,CAAC1G,WAAW,IAAI,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAACgD,QAAQ,CAAC,IAAI,CAACJ,MAAM,CAAC;QAC5F,IAAM3F,CAAC,GAAG0J,uBAAU,EAAE,CAACtI,QAAQ,CAAC,IAAI,CAAC9G,SAAS,CAAC;QAC/C,IAAMqP,WAAW,GAAG;UAACC,KAAK,EAAE;YAAClN,OAAO,EAAE;UAAC,CAAC;UAAEmN,IAAI,EAAE;YAACnN,OAAO,EAAE;UAAC,CAAC;UAAE+B,MAAM,EAAE,IAAI,CAACF,MAAM;UAAEmL,UAAU,EAAE1J,CAAC;UAAE8J,MAAM,EAAE;YAACpN,OAAO,EAAE;UAAC;QAAC,CAAC;QACvH,IAAMqN,UAAU,GAAGvL,iBAAI,CAAC,4BAA4B,EAAEqB,MAAM,CAACC,MAAM,CAAC;UAACkK,SAAS,EAAEP;QAAQ,CAAC,EAAEE,WAAW,CAAC,CAAC;QACxG,IAAMM,SAAS,GAAGzL,iBAAI,CAAC,0BAA0B,EAAEqB,MAAM,CAACC,MAAM,CAAC;UAACkK,SAAS,EAAEP;QAAQ,CAAC,EAAEE,WAAW,CAAC,CAAC;QACrG,IAAMO,WAAW,GAAG1L,iBAAI,CAAC,4BAA4B,EAAEqB,MAAM,CAACC,MAAM,CAAC;UAACkK,SAAS,EAAE,CAACP;QAAQ,CAAC,EAAEE,WAAW,CAAC,CAAC;QAE1G,IAAIF,QAAQ,EAAE;UAAA;UAEZ,IAAMU,OAAO,GAAG;YAACpP,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAC,CAAC;UAE5B,IAAMoP,UAAU,GAAGpE,MAAM,CAACjP,KAAK,EAAE;UACjC,IAAI,IAAI,CAACgM,WAAW,EAAE;YACpB,IAAMU,IAAI,GAAG2G,UAAU,CAACA,UAAU,CAAC5S,MAAM,GAAG,CAAC,CAAC;YAC9C,IAAMgM,IAAI,GAAG4G,UAAU,CAACA,UAAU,CAAC5S,MAAM,GAAG,CAAC,CAAC;YAC9C,IAAMmM,GAAG,GAAGF,IAAI,GAAGA,IAAI,GAAG,EAAE,GAAGD,IAAI,GAAG,EAAE;YAExC,IAAMI,GAAG,GAAGD,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,CAAC,CAAC,GAAGjL,IAAI,CAACmL,KAAK,CAACF,GAAG,CAAC,CAACG,QAAQ,EAAE,CAACtM,MAAM,GAAG,CAAC,GAAGmM,GAAG,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAACxM,MAAM,GAAG,CAAC,CAAC;YACrJ,IAAMyM,GAAG,GAAGvL,IAAI,CAACkL,GAAG,CAAC,EAAE,EAAEA,GAAG,CAAC;YAC7BwG,UAAU,CAACA,UAAU,CAAC5S,MAAM,GAAG,CAAC,CAAC,GAAGiM,IAAI,GAAGQ,GAAG;;UAGhD,IAAMoG,UAAU,GAAGvK,mBAAM,CAAC;YACxBkG,MAAM,EAAEF,UAAU,GAAGsE,UAAU,GAAGA,UAAU,CAACrT,KAAK,EAAE,CAACsN,OAAO,EAAE;YAC9DjD,QAAQ,EAAE,IAAI,CAAC9G,SAAS;YACxBQ,MAAM,EAAE,IAAI,CAACP,OAAO;YACpBmM,MAAM,EAAEA,MAAM,IAAIxD,KAAK;YACvBoH,MAAM,EAAE,IAAI,CAAC/E,OAAO;YACpBxL,OAAO,EAAE,IAAI,CAACkB,QAAQ;YACtBsP,KAAK,EAAE,IAAI,CAAC5E,MAAM,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ;YAC/CzC,KAAK,EAALA,KAAK;YACLrI,KAAK,EAAE,IAAI,CAAC6C;WACb,EAAE,IAAI,CAACiF,WAAW,CAAC;UAEpB,IAAMzG,WAAW,GAAG4D,mBAAM,CAAC;YACzBhF,MAAM,EAAE,IAAI,YAAKA,MAAM,EAAG,GAAG,CAAC;YAC9BD,KAAK,EAAE,IAAI,YAAKA,KAAK,EAAG,GAAG;WAC5B,EAAE,IAAI,CAACmK,YAAY,CAAC;UAErB,IAAI,CAACD,WAAW,CAACtD,MAAM,CAACvF,WAAW,CAAC;UACpC,IAAMsO,SAAS,GAAG,EAAE;UAEpB,IAAI1E,UAAU,IAAI,IAAI,CAAC2E,SAAS,EAAE;YAEhC,IAAMC,QAAQ,GAAG;cACf,aAAa,EAAE,IAAI,CAAC3F,WAAW,CAACzI,UAAU,EAAE,CAAC,IAAI,CAACmO,SAAS,CAAC;cAC5D,WAAW,EAAE,IAAI,CAAC1F,WAAW,CAACvI,QAAQ,EAAE,CAAC,IAAI,CAACiO,SAAS,CAAC;cACxD,aAAa,EAAE,IAAI,CAAC1F,WAAW,CAAC4F,UAAU,EAAE,CAAC,IAAI,CAACF,SAAS;aAC5D;YAED,IAAIC,QAAQ,CAAC,aAAa,CAAC,YAAYnE,KAAK,EAAEmE,QAAQ,CAAC,aAAa,CAAC,GAAGA,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAClG,IAAIE,aAAa,GAAG3K,oBAAS,CAAC,IAAI,CAACwK,SAAS,EAAEC,QAAQ,CAAC;YAEvD,IAAIE,aAAa,IAAIA,aAAa,GAAG,IAAI,YAAK/P,KAAK,EAAG,GAAG,CAAC,EAAE;cAC1D2P,SAAS,CAACzS,IAAI,CAAC,IAAI,CAAC0S,SAAS,CAAC;cAC9BG,aAAa,IAAI,IAAI,CAAC3P,QAAQ;cAC9B,IAAI6K,UAAU,EAAEqE,OAAO,CAACpP,CAAC,IAAI6P,aAAa;cAC1CP,UAAU,CAACxP,KAAK,CAAC,IAAI+P,aAAa;;;UAItC,IAAI9E,UAAU,IAAI,IAAI,CAAC+E,SAAS,EAAE;YAEhC,IAAMH,SAAQ,GAAG;cACf,aAAa,EAAE,IAAI,CAAC3F,WAAW,CAACzI,UAAU,EAAE,CAAC,IAAI,CAACuO,SAAS,CAAC;cAC5D,WAAW,EAAE,IAAI,CAAC9F,WAAW,CAACvI,QAAQ,EAAE,CAAC,IAAI,CAACqO,SAAS,CAAC;cACxD,aAAa,EAAE,IAAI,CAAC9F,WAAW,CAAC4F,UAAU,EAAE,CAAC,IAAI,CAACE,SAAS;aAC5D;YAED,IAAIH,SAAQ,CAAC,aAAa,CAAC,YAAYnE,KAAK,EAAEmE,SAAQ,CAAC,aAAa,CAAC,GAAGA,SAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAClG,IAAII,aAAa,GAAG7K,oBAAS,CAAC,IAAI,CAAC4K,SAAS,EAAEH,SAAQ,CAAC;YAEvD,IAAII,aAAa,IAAIA,aAAa,GAAG,IAAI,YAAKjQ,KAAK,EAAG,GAAG,CAAC,EAAE;cAC1D2P,SAAS,CAACzS,IAAI,CAAC,IAAI,CAAC8S,SAAS,CAAC;cAC9BC,aAAa,IAAI,IAAI,CAAC7P,QAAQ;cAC9B,IAAI,CAAC6K,UAAU,EAAEqE,OAAO,CAACnP,CAAC,IAAI8P,aAAa;cAC3CT,UAAU,CAACxP,KAAK,CAAC,IAAIiQ,aAAa;;;UAKtC,IAAI,CAACjI,SAAS,CACX1E,MAAM,CAACK,iBAAI,CAAC,8BAA8B,EAAE;YAACoL,KAAK,EAAE;cAAClN,OAAO,EAAE;YAAC,CAAC;YAAE+B,MAAM,EAAE,IAAI,CAACF;UAAM,CAAC,CAAC,CAACD,IAAI,EAAE,CAAC,CAC/FmD,MAAM,CAAC4I,UAAU,CAAC,CAClBjJ,QAAQ,CAAC,CAAC,CAAC,CACXM,MAAM,EAAE;UAEX,IAAMqJ,UAAU,GAAG,IAAI,CAAClI,SAAS,CAACmI,WAAW,EAAE;UAE/C,IAAI,CAACpQ,YAAY,CAACC,KAAK,CAAC,GAAG,IAAI,YAAKA,KAAK,EAAG,GAAG,IAAI,CAACI,QAAQ,GAAG,CAAC;UAChE,IAAI,CAACL,YAAY,CAACE,MAAM,CAAC,GAAGiQ,UAAU,CAACjQ,MAAM,CAAC,GAAG,IAAI,CAAC8K,KAAK;UAE3D,IAAI,CAAChL,YAAY,CAACG,CAAC,CAAC,GAAG,IAAI,CAACE,QAAQ;UACpC,IAAI,CAACL,YAAY,CAACI,CAAC,CAAC,GAAG,IAAI,CAACC,QAAQ;UACpC,IAAI,IAAI,CAACd,MAAM,KAAK,QAAQ,EAAE,IAAI,CAACS,YAAY,CAACI,CAAC,CAAC,GAAG,CAAC,IAAI,YAAKF,MAAM,EAAG,GAAG,IAAI,CAACF,YAAY,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC,KACrG,IAAI,IAAI,CAACX,MAAM,KAAK,KAAK,EAAE,IAAI,CAACS,YAAY,CAACI,CAAC,CAAC,GAAG,IAAI,YAAKF,MAAM,EAAG,GAAG,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACL,YAAY,CAACE,MAAM,CAAC;UAErH,IAAMmQ,eAAe,GAAG,IAAI,CAACrQ,YAAY,CAACI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC+K,QAAQ,CAAC,IAAI,CAACR,OAAO,CAAC,GAAG,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,IAAIyE,UAAU,CAACtQ,OAAO,IAAI,IAAI,CAAC0I,UAAU,CAAC1I,OAAO,EAAE,CAAC;UAChK,IAAMmR,SAAS,uBAAgBf,OAAO,CAACpP,CAAC,IAAI+K,UAAU,GAAG,CAAC,GAAGmF,eAAe,CAAC,eAAKd,OAAO,CAACnP,CAAC,IAAI8K,UAAU,GAAGmF,eAAe,GAAG,CAAC,CAAC,MAAG;UACnI,IAAI,CAACxI,UAAU,CACZtE,MAAM,CAACK,iBAAI,CAAC,0BAA0B,EAAEsB,mBAAM,CAAC6J,WAAW,EAAE;YAC3DK,SAAS,EAAE,IAAI;YACfJ,KAAK,EAAE;cAACsB,SAAS,EAATA;YAAS,CAAC;YAClBpB,MAAM,EAAE;cAACoB,SAAS,EAATA;YAAS;WACnB,CAAC,CAAC,CAAC5M,IAAI,EAAE,CAAC,CACVmD,MAAM,CAAC4I,UAAU,CAAC,CAClBc,KAAK,CAAC,OAAO,CAAC,CACdzJ,MAAM,EAAE;UAEX,IAAM0J,SAAS,GAAG,IAAI,CAACvI,SAAS,CAACwI,YAAY,CAACxK,IAAI,CAAC,IAAI,CAACgC,SAAS,CAAC;UAClE,IAAMyI,UAAU,GAAG,IAAI,CAACzI,SAAS,CAAC0I,SAAS,EAAE;UAE7C,IAAIC,IAAI,GAAG,IAAI,CAACjN,MAAM,CAACkN,SAAS,CAAC,MAAM,CAAC,CAACrS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UAClD,IAAMsS,SAAS,GAAGF,IAAI,CAAC5B,KAAK,EAAE,CAACxL,MAAM,CAAC,MAAM,CAAC;UAC7CsN,SAAS,CAACtN,MAAM,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC,IAAI,qBAAc,IAAI,CAACsN,KAAK,EAAG;UACvEH,IAAI,GAAGE,SAAS,CAACE,KAAK,CAACJ,IAAI,CAAC;UAC5BA,IAAI,CAACrN,MAAM,CAAC,gBAAgB,CAAC,CAC1BE,IAAI,WAAItD,CAAC,QAAK+K,UAAU,GAAG,IAAI,GAAG,MAAM,CAAC,CACzCzH,IAAI,WAAItD,CAAC,QAAK+K,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,CACzCzH,IAAI,WAAIrD,CAAC,QAAK,IAAI,CAAC,CACnBqD,IAAI,WAAIrD,CAAC,QAAK,IAAI,CAAC;UACtB,IAAM6Q,KAAK,GAAGL,IAAI,CAACrN,MAAM,CAAC,gBAAgB,CAAC,CAACsN,SAAS,CAAC,MAAM,CAAC,CAC1DrS,IAAI,CAACqN,MAAM,CAAC;UACf,IAAMqF,WAAW,GAAG,IAAI,CAAC1D,WAAW,CAACpC,MAAM,EAAE;UAC7C,IAAM+F,WAAW,GAAGxC,mBAAW,EAAE,CAC9BvD,MAAM,CAACsF,UAAU,CAAC,CAClB3E,KAAK,CAACb,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAE1C+F,KAAK,CAACjC,KAAK,EAAE,CAACxL,MAAM,CAAC,MAAM,CAAC,CAACwN,KAAK,CAACC,KAAK,CAAC,CACtCxN,IAAI,CAAC,QAAQ,EAAE,UAAC5C,CAAC,EAAElE,CAAC;YAAA,iBAAQA,CAAC,IAAIuU,WAAW,CAACtU,MAAM,GAAG,CAAC,GAAGuU,WAAW,CAACX,SAAS,CAACU,WAAW,CAACvU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;UAAA,CAAG,CAAC,CAC1G8G,IAAI,CAAC,YAAY,EAAE2N,MAAM,CAAC;;;UAG7B,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIxQ,CAAC,EAAElE,CAAC,EAAK;YAC5B,IAAMgM,IAAI,GAAGL,KAAK,CAAC3L,CAAC,GAAG,CAAC,CAAC,IAAI6S,UAAU,CAACA,UAAU,CAAC5S,MAAM,GAAG,CAAC,CAAC;YAC9D,OAAOkB,IAAI,CAACwQ,GAAG,CAACkC,SAAS,CAAC7H,IAAI,CAAC,GAAG6H,SAAS,CAAC3P,CAAC,CAAC,CAAC;WAChD;UAED,IAAMyQ,UAAU,GAAGpM,mBAAM;YACvBsB,QAAQ,EAAE,IAAI,CAAC9G,SAAS;YACxBgB,IAAI,EAAE4H,KAAK,GAAG,UAAAzH,CAAC;cAAA,OAAI,MAAI,CAAC2M,WAAW,CAAC3M,CAAC,CAAC;YAAA,4BAAoB,IAAI,CAACkQ,KAAK;UAAG,yCACtE5Q,CAAC,EAAGmI,KAAK,GAAG,UAACzH,CAAC,EAAElE,CAAC;YAAA,OAAK6T,SAAS,CAAC3P,CAAC,CAAC,GAAGwQ,WAAW,CAACxQ,CAAC,EAAElE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAACwO,QAAQ,CAAC,MAAI,CAACR,OAAO,CAAC,GAAG0G,WAAW,CAACxQ,CAAC,EAAElE,CAAC,CAAC,GAAG,CAAC,CAAC;UAAA,IAAG+T,UAAU,CAAC,CAAC,CAAC,GAAG,CAACA,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGnB,OAAO,CAACpP,CAAC,CAAC,yCAClMC,CAAC,EAAG,IAAI,CAACJ,YAAY,CAACI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC+K,QAAQ,CAAC,IAAI,CAACR,OAAO,CAAC,GAAGwF,UAAU,CAACjQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC8K,KAAK,GAAG,CAAC,GAAGuE,OAAO,CAACnP,CAAC,CAAC,yCAC1HH,KAAK,EAAGqI,KAAK,GAAG+I,WAAW,GAAGX,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,yCAC3DxQ,MAAM,EAAG,IAAI,CAAC8K,KAAK,0BACnB,IAAI,CAACF,WAAW,CAAC;UAEpB,IAAI,CAACF,UAAU,CACZpM,IAAI,CAAC8J,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAClB1D,EAAE,CAAC,UAAC/D,CAAC,EAAElE,CAAC;YAAA,OAAKA,CAAC;UAAA,EAAC,CACf4G,MAAM,CAAC8L,SAAS,CAAC3L,IAAI,EAAE,CAAC,CACxBmD,MAAM,CAACyK,UAAU,CAAC,CAClBxK,MAAM,EAAE;UAEXxF,WAAW,CAACpB,MAAM,GAAG,IAAI,CAACF,YAAY,CAACE,MAAM,CAAC;UAC9CoB,WAAW,CAACrB,KAAK,GAAG,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC;UAC5C,IAAI,CAACkK,WAAW,CACbtD,MAAM,CAACvF,WAAW,CAAC,CACnB9C,IAAI,CAACoR,SAAS,CAAC,CACfrM,MAAM,CAAC4L,UAAU,CAACzL,IAAI,EAAE,CAAC,CACzBvD,CAAC,CAAC,UAAAU,CAAC;YAAA,OAAIA,CAAC,KAAK,MAAI,CAACoP,SAAS,GACxBqB,UAAU,CAACnR,CAAC,GAAGmR,UAAU,CAACrR,KAAK,GAAG,CAAC,GAAG,MAAI,CAACI,QAAQ,GACnD,MAAI,CAACL,YAAY,CAACG,CAAC;UAAA,EAAC,CACvBC,CAAC,CAAC,UAAAS,CAAC;YAAA,OAAIyQ,UAAU,CAAClR,CAAC,GAAG,MAAI,CAAC+J,WAAW,CAACvI,QAAQ,EAAE,CAACf,CAAC,CAAC,GAAG,CAAC;UAAA,EAAC,CACzD0F,IAAI,CAAC,UAAA1F,CAAC;YAAA,OAAIA,CAAC;UAAA,EAAC,CACZ0Q,MAAM,CAACrG,UAAU,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,KAAK,OAAO,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAC5D7D,MAAM,EAAE;SAEZ,MACI;UAEHlD,iBAAI,CAAC,0BAA0B,EAAEqB,MAAM,CAACC,MAAM,CAAC;YAACkK,SAAS,EAAEP;UAAQ,CAAC,EAAEE,WAAW,CAAC,CAAC;UAEnF,IAAIyC,UAAU,GAAGlJ,KAAK,CAACmJ,MAAM,CAAC,UAACC,GAAG,EAAErJ,IAAI,EAAE1L,CAAC,EAAK;YAE9C,IAAMgI,KAAK,GAAG,MAAI,CAACyD,aAAa,CAACnC,IAAI,CAAC,MAAI,CAAC,CAACoC,IAAI,EAAE1L,CAAC,EAAE2L,KAAK,EAAEC,SAAS,CAAC;YACtEmJ,GAAG,CAACvU,IAAI,CAAC;cAACwU,KAAK,EAAE9F,MAAM,CAAClP,CAAC,GAAG,CAAC,CAAC;cAAEiI,EAAE,EAAED;YAAK,CAAC,CAAC;YAE3C,OAAO+M,GAAG;WACX,EAAE,EAAE,CAAC;UACN,IAAI,CAACxG,UAAU,EAAEsG,UAAU,GAAGA,UAAU,CAAC/H,OAAO,EAAE;UAElD,IAAMmI,YAAY,GAAG1M,mBAAM,CAAC;YAC1BqL,KAAK,EAAErF,UAAU,GAAG,QAAQ,GAAG;cAAC2G,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,QAAQ;cAAEC,GAAG,EAAE;YAAO,CAAC,CAAC,IAAI,CAACxS,MAAM,CAAC;YAC3FyS,SAAS,EAAE9G,UAAU,GAAG,KAAK,GAAG,QAAQ;YACxC1E,QAAQ,EAAE,IAAI,CAAC9G,SAAS;YACxBQ,MAAM,EAAE,IAAI,CAACP,OAAO;YACpBR,OAAO,EAAE,IAAI,CAACkB,QAAQ;YACtBkK,WAAW,EAAErF,mBAAM,CAAC;cAClBsB,QAAQ,EAAE,IAAI,CAAC9G;aAChB,EAAE,IAAI,CAACqI,WAAW,CAACwC,WAAW,IAAI,EAAE,CAAC;YACtC0H,KAAK,EAAE,IAAI,CAAClK,WAAW,CAACkK,KAAK;YAC7BC,WAAW,EAAE,IAAI,CAACnK,WAAW,CAACmK,WAAW,IAAI,EAAE;YAC/CjS,KAAK,EAAE,IAAI,CAAC6C,MAAM;YAClBjB,aAAa,EAAEqJ,UAAU,GAAG;cAAC2G,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE,QAAQ;cAAEC,GAAG,EAAE;YAAQ,CAAC,CAAC,IAAI,CAACxS,MAAM,CAAC,GAAG;WAC5F,EAAE,IAAI,CAAC+K,aAAa,CAAC;UAEtB,IAAI,CAACD,YAAY,CACd7L,IAAI,CAACgT,UAAU,CAAC,CAChBjO,MAAM,CAAC+L,WAAW,CAAC5L,IAAI,EAAE,CAAC,CAC1BmD,MAAM,CAAC+K,YAAY,CAAC,CACpB9K,MAAM,EAAE;UAEX,IAAI,CAAC9G,YAAY,GAAG,IAAI,CAACqK,YAAY,CAAC+F,WAAW,EAAE;;QAIrD,IAAI/M,QAAQ,EAAEgE,UAAU,CAAChE,QAAQ,EAAE,IAAI,CAAC3D,SAAS,GAAG,GAAG,CAAC;QAExD,OAAO,IAAI;;;;;;;;;;;aAUb,oBAAW4H,CAAC,EAAE;QACZ,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACmL,WAAW,GAAG7C,mBAAM,CAAC,IAAI,CAAC6C,WAAW,EAAET,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACS,WAAW;;;;;;;;;;;aASrG,eAAMT,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC2C,MAAM,GAAG+H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC/H,MAAM;;;;;;;;;;;aASjE,iBAAQ+H,CAAC,EAAE;QACT,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACsL,QAAQ,GAAGZ,CAAC,EAAE,IAAI,IAAI,IAAI,CAACY,QAAQ;;;;;;;;;;;aASrE,oBAAWZ,CAAC,EAAE;QACZ,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACuL,WAAW,GAAGb,CAAC,EAAE,IAAI,IAAI,IAAI,CAACa,WAAW;;;;;;;;;;;aAS3E,sBAAab,CAAC,EAAE;QACd,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACwL,aAAa,GAAGd,CAAC,EAAE,IAAI,IAAI,IAAI,CAACc,aAAa;;;;;;;;;;;aAS/E,sBAAad,CAAC,EAAE;QACd,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC8M,aAAa,GAAGpC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACoC,aAAa;;;;;;;;;;;aAU/E,kBAASpC,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC+M,SAAS,GAAGrC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACqC,SAAS;;;;;;;;;;;aASvE,eAAMrC,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACgN,MAAM,GAAGtC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACsC,MAAM;;;;;;;;;;;aASjE,kBAAStC,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACiN,SAAS,GAAGvC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACuC,SAAS;;;;;;;;;;;aASvE,kBAASvC,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACmN,SAAS,GAAGzC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACyC,SAAS;;;;;;;;;;;aASvE,kBAASzC,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACqN,SAAS,GAAG3C,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC2C,SAAS;;;;;;;;;;;aASvE,cAAK3C,CAAC,EAAE;QACN,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC4C,KAAK,GAAG8H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC9H,KAAK;;;;;;;;;;;aAS/D,gBAAO8H,CAAC,EAAE;QACR,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACyO,OAAO,GAAG/D,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC+D,OAAO;;;;;;;;;;;aASnE,kBAAS/D,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC8C,SAAS,GAAG4H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC5H,SAAS;;;;;;;;;;;aASvE,gBAAO4H,CAAC,EAAE;QACR,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC+C,OAAO,GAAG2H,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC3H,OAAO;;;;;;;;;;;aASnE,qBAAY2H,CAAC,EAAE;QACb,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACwN,YAAY,GAAGlF,mBAAM,CAAC,IAAI,CAACkF,YAAY,EAAE9C,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC8C,YAAY;;;;;;;;;;;aASxG,kBAAS9C,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACiT,SAAS,GAAGvI,CAAC,EAAE,IAAI,IAAI,IAAI,CAACuI,SAAS;;;;;;;;;;;aASvE,kBAASvI,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACqT,SAAS,GAAG3I,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC2I,SAAS;;;;;;;;;;;aASvE,sBAAa3I,CAAC,EAAE;QACd,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC0N,aAAa,GAAGpF,mBAAM,CAAC,IAAI,CAACoF,aAAa,EAAEhD,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACgD,aAAa;;;;;;;;;;;aAS3G,kBAAShD,CAAC,EAAE;QACV,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC8N,SAAS,GAAGpD,CAAC,EAAE,IAAI,IAAI,IAAI,CAACoD,SAAS;;;;;;;;;;;aASvE,gBAAOpD,CAAC,EAAE;QACR,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC+N,OAAO,GAAGrD,CAAC,EAAE,IAAI,IAAI,IAAI,CAACqD,OAAO;;;;;;;;;;;aASnE,uBAAc;QACZ,OAAO,IAAI,CAAC3K,YAAY;;;;;;;;;;;aAS1B,iBAAQsH,CAAC,EAAE;QACT,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACyD,QAAQ,GAAGiH,CAAC,EAAE,IAAI,IAAI,IAAI,CAACjH,QAAQ;;;;;;;;;;;aASrE,oBAAWiH,CAAC,EAAE;QACZ,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACkO,WAAW,GAAG5F,mBAAM,CAAC,IAAI,CAAC4F,WAAW,EAAExD,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACwD,WAAW;;;;;;;;;;;aASrG,eAAMxD,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACmO,MAAM,GAAGzD,CAAC,EAAE,IAAI,IAAI,IAAI,CAACyD,MAAM;;;;;;;;;;;aASjE,gBAAOzD,CAAC,EAAE;QACR,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAAC0G,OAAO,GAAGC,kBAAM,CAAC+D,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAChE,OAAO;;;;;;;;;;;aAS3E,cAAKgE,CAAC,EAAE;QACN,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACoO,KAAK,GAAG1D,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC0D,KAAK;;;;;;;;;;;;;;;aAa/D,eAAM1D,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACqO,MAAM,GAAG,OAAO3D,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAG/G,qBAAQ,CAAC+G,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC2D,MAAM;;;;;;;;;;;aASzG,eAAM3D,CAAC,EAAE;QACP,OAAOE,SAAS,CAAC5K,MAAM,IAAI,IAAI,CAACkG,MAAM,GAAGwE,CAAC,EAAE,IAAI,IAAI,IAAI,CAACxE,MAAM;;IAChE;IAAA;EAAA,EA1xBqC6E,sBAAS;;;;;;;"}