{"version":3,"file":"d3plus-text.js","sources":["../src/textWidth.js","../src/trim.js","../src/fontExists.js","../src/rtl.js","../src/stringify.js","../src/strip.js","../src/combiningMarks.js","../src/textSplit.js","../src/textWrap.js","../src/TextBox.js","../src/titleCase.js"],"sourcesContent":["/**\n * Strips HTML and \"un-escapes\" escape characters.\n * @param {String} input\n */\nfunction htmlDecode(input) {\n  if (input.replace(/\\s+/g, \"\") === \"\") return input;\n  const doc = new DOMParser().parseFromString(input.replace(/<[^>]+>/g, \"\"), \"text/html\");\n  return doc.documentElement ? doc.documentElement.textContent : input;\n}\n\n\n/**\n    @function textWidth\n    @desc Given a text string, returns the predicted pixel width of the string when placed into DOM.\n    @param {String|Array} text Can be either a single string or an array of strings to analyze.\n    @param {Object} [style] An object of CSS font styles to apply. Accepts any of the valid [CSS font property](http://www.w3schools.com/cssref/pr_font_font.asp) values.\n*/\nexport default function(text, style) {\n\n  style = Object.assign({\n    \"font-size\": 10,\n    \"font-family\": \"sans-serif\",\n    \"font-style\": \"normal\",\n    \"font-weight\": 400,\n    \"font-variant\": \"normal\"\n  }, style);\n\n  const context = document.createElement(\"canvas\").getContext(\"2d\");\n\n  const font = [];\n  font.push(style[\"font-style\"]);\n  font.push(style[\"font-variant\"]);\n  font.push(style[\"font-weight\"]);\n  font.push(typeof style[\"font-size\"] === \"string\" ? style[\"font-size\"] : `${style[\"font-size\"]}px`);\n  font.push(style[\"font-family\"]);\n\n  context.font = font.join(\" \");\n\n  if (text instanceof Array) return text.map(t => context.measureText(htmlDecode(t)).width);\n  return context.measureText(htmlDecode(text)).width;\n\n}\n","/**\n    @function trim\n    @desc Cross-browser implementation of [trim](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim).\n    @param {String} str\n*/\nfunction trim(str) {\n  return str.toString().replace(/^\\s+|\\s+$/g, \"\");\n}\n\n/**\n    @function trimLeft\n    @desc Cross-browser implementation of [trimLeft](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/TrimLeft).\n    @param {String} str\n*/\nfunction trimLeft(str) {\n  return str.toString().replace(/^\\s+/, \"\");\n}\n\n/**\n    @function trimRight\n    @desc Cross-browser implementation of [trimRight](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/TrimRight).\n    @param {String} str\n*/\nfunction trimRight(str) {\n  return str.toString().replace(/\\s+$/, \"\");\n}\n\nexport {trim, trimLeft, trimRight};\n","import {default as textWidth} from \"./textWidth.js\";\nimport {trim} from \"./trim.js\";\n\nconst alpha = \"abcdefghiABCDEFGHI_!@#$%^&*()_+1234567890\",\n      checked = {},\n      height = 32;\n\nlet dejavu, macos, monospace, proportional;\n\n/**\n    @function fontExists\n    @desc Given either a single font-family or a list of fonts, returns the name of the first font that can be rendered, or `false` if none are installed on the user's machine.\n    @param {String|Array} font Can be either a valid CSS font-family string (single or comma-separated names) or an Array of string names.\n*/\nconst fontExists = font => {\n\n  if (!dejavu) {\n    dejavu = textWidth(alpha, {\"font-family\": \"DejaVuSans\", \"font-size\": height});\n    macos = textWidth(alpha, {\"font-family\": \"-apple-system\", \"font-size\": height});\n    monospace = textWidth(alpha, {\"font-family\": \"monospace\", \"font-size\": height});\n    proportional = textWidth(alpha, {\"font-family\": \"sans-serif\", \"font-size\": height});\n  }\n\n  if (!(font instanceof Array)) font = font.split(\",\");\n  font = font.map(f => trim(f));\n\n  for (let i = 0; i < font.length; i++) {\n    const fam = font[i];\n    if (checked[fam] || [\"-apple-system\", \"monospace\", \"sans-serif\", \"DejaVuSans\"].includes(fam)) return fam;\n    else if (checked[fam] === false) continue;\n    const width = textWidth(alpha, {\"font-family\": fam, \"font-size\": height});\n    checked[fam] = width !== monospace;\n    if (checked[fam]) checked[fam] = width !== proportional;\n    if (macos && checked[fam]) checked[fam] = width !== macos;\n    if (dejavu && checked[fam]) checked[fam] = width !== dejavu;\n    if (checked[fam]) return fam;\n  }\n\n  return false;\n\n};\n\n\nexport default fontExists;\n","import {select} from \"d3-selection\";\n\nconst elemRTL = e => select(e).size() && (select(e).attr(\"dir\") === \"rtl\" || select(e).style(\"direction\") === \"rtl\");\n\n/**\n    @function rtl\n    @desc Returns `true` if the <html> or <body> element has either the \"dir\" HTML attribute or the \"direction\" CSS property set to \"rtl\". Accepts an optional DOM element as an argument, whose own inherited state will be evaluated rather than the default html/body logic.\n    @param {HTMLElement} [elem]\n*/\nexport default (elem = \"body\") => {\n  elem = select(elem).node();\n  while (elem && elem.parentNode && elem !== document.body && !elemRTL(elem)) {\n    elem = elem.parentNode;\n  }\n  return elemRTL(elem) || elemRTL(\"html\");\n}\n  \n","/**\n    @function stringify\n    @desc Coerces value into a String.\n    @param {String} value\n*/\nexport default function(value) {\n  if (value === void 0) value = \"undefined\";\n  else if (!(typeof value === \"string\" || value instanceof String)) value = JSON.stringify(value);\n  return value;\n}\n","// great unicode list: http://asecuritysite.com/coding/asc2\n\nconst diacritics = [\n  [/[\\300-\\305]/g, \"A\"], [/[\\340-\\345]/g, \"a\"],\n  [/[\\306]/g, \"AE\"], [/[\\346]/g, \"ae\"],\n  [/[\\337]/g, \"B\"],\n  [/[\\307]/g, \"C\"], [/[\\347]/g, \"c\"],\n  [/[\\320\\336\\376]/g, \"D\"], [/[\\360]/g, \"d\"],\n  [/[\\310-\\313]/g, \"E\"], [/[\\350-\\353]/g, \"e\"],\n  [/[\\314-\\317]/g, \"I\"], [/[\\354-\\357]/g, \"i\"],\n  [/[\\321]/g, \"N\"], [/[\\361]/g, \"n\"],\n  [/[\\u014c\\322-\\326\\330]/g, \"O\"], [/[\\u014d\\362-\\366\\370]/g, \"o\"],\n  [/[\\u016a\\331-\\334]/g, \"U\"], [/[\\u016b\\371-\\374]/g, \"u\"],\n  [/[\\327]/g, \"x\"],\n  [/[\\335]/g, \"Y\"], [/[\\375\\377]/g, \"y\"]\n];\n\n/**\n    @function strip\n    @desc Removes all non ASCII characters from a string.\n    @param {String} value\n*/\nexport default function(value) {\n\n  return `${value}`.replace(/[^A-Za-z0-9\\-_]/g, char => {\n\n    if (char === \" \") return \"-\";\n\n    let ret = false;\n    for (let d = 0; d < diacritics.length; d++) {\n      if (new RegExp(diacritics[d][0]).test(char)) {\n        ret = diacritics[d][1];\n        break;\n      }\n    }\n\n    return ret || \"\";\n\n  });\n}\n","// scraped from http://www.fileformat.info/info/unicode/category/Mc/list.htm\n// and http://www.fileformat.info/info/unicode/category/Mn/list.htm\n// JSON.stringify([].slice.call(document.getElementsByClassName(\"table-list\")[0].getElementsByTagName(\"tr\")).filter(function(d){ return d.getElementsByTagName(\"a\").length && d.getElementsByTagName(\"a\")[0].innerHTML.length === 6; }).map(function(d){ return d.getElementsByTagName(\"a\")[0].innerHTML.replace(\"U\", \"u\").replace(\"+\", \"\"); }).sort());\n// The following unicode characters combine to form new characters and should never be split from surrounding characters.\nconst a = [\"u0903\", \"u093B\", \"u093E\", \"u093F\", \"u0940\", \"u0949\", \"u094A\", \"u094B\", \"u094C\", \"u094E\", \"u094F\", \"u0982\", \"u0983\", \"u09BE\", \"u09BF\", \"u09C0\", \"u09C7\", \"u09C8\", \"u09CB\", \"u09CC\", \"u09D7\", \"u0A03\", \"u0A3E\", \"u0A3F\", \"u0A40\", \"u0A83\", \"u0ABE\", \"u0ABF\", \"u0AC0\", \"u0AC9\", \"u0ACB\", \"u0ACC\", \"u0B02\", \"u0B03\", \"u0B3E\", \"u0B40\", \"u0B47\", \"u0B48\", \"u0B4B\", \"u0B4C\", \"u0B57\", \"u0BBE\", \"u0BBF\", \"u0BC1\", \"u0BC2\", \"u0BC6\", \"u0BC7\", \"u0BC8\", \"u0BCA\", \"u0BCB\", \"u0BCC\", \"u0BD7\", \"u0C01\", \"u0C02\", \"u0C03\", \"u0C41\", \"u0C42\", \"u0C43\", \"u0C44\", \"u0C82\", \"u0C83\", \"u0CBE\", \"u0CC0\", \"u0CC1\", \"u0CC2\", \"u0CC3\", \"u0CC4\", \"u0CC7\", \"u0CC8\", \"u0CCA\", \"u0CCB\", \"u0CD5\", \"u0CD6\", \"u0D02\", \"u0D03\", \"u0D3E\", \"u0D3F\", \"u0D40\", \"u0D46\", \"u0D47\", \"u0D48\", \"u0D4A\", \"u0D4B\", \"u0D4C\", \"u0D57\", \"u0D82\", \"u0D83\", \"u0DCF\", \"u0DD0\", \"u0DD1\", \"u0DD8\", \"u0DD9\", \"u0DDA\", \"u0DDB\", \"u0DDC\", \"u0DDD\", \"u0DDE\", \"u0DDF\", \"u0DF2\", \"u0DF3\", \"u0F3E\", \"u0F3F\", \"u0F7F\", \"u102B\", \"u102C\", \"u1031\", \"u1038\", \"u103B\", \"u103C\", \"u1056\", \"u1057\", \"u1062\", \"u1063\", \"u1064\", \"u1067\", \"u1068\", \"u1069\", \"u106A\", \"u106B\", \"u106C\", \"u106D\", \"u1083\", \"u1084\", \"u1087\", \"u1088\", \"u1089\", \"u108A\", \"u108B\", \"u108C\", \"u108F\", \"u109A\", \"u109B\", \"u109C\", \"u17B6\", \"u17BE\", \"u17BF\", \"u17C0\", \"u17C1\", \"u17C2\", \"u17C3\", \"u17C4\", \"u17C5\", \"u17C7\", \"u17C8\", \"u1923\", \"u1924\", \"u1925\", \"u1926\", \"u1929\", \"u192A\", \"u192B\", \"u1930\", \"u1931\", \"u1933\", \"u1934\", \"u1935\", \"u1936\", \"u1937\", \"u1938\", \"u1A19\", \"u1A1A\", \"u1A55\", \"u1A57\", \"u1A61\", \"u1A63\", \"u1A64\", \"u1A6D\", \"u1A6E\", \"u1A6F\", \"u1A70\", \"u1A71\", \"u1A72\", \"u1B04\", \"u1B35\", \"u1B3B\", \"u1B3D\", \"u1B3E\", \"u1B3F\", \"u1B40\", \"u1B41\", \"u1B43\", \"u1B44\", \"u1B82\", \"u1BA1\", \"u1BA6\", \"u1BA7\", \"u1BAA\", \"u1BE7\", \"u1BEA\", \"u1BEB\", \"u1BEC\", \"u1BEE\", \"u1BF2\", \"u1BF3\", \"u1C24\", \"u1C25\", \"u1C26\", \"u1C27\", \"u1C28\", \"u1C29\", \"u1C2A\", \"u1C2B\", \"u1C34\", \"u1C35\", \"u1CE1\", \"u1CF2\", \"u1CF3\", \"u302E\", \"u302F\", \"uA823\", \"uA824\", \"uA827\", \"uA880\", \"uA881\", \"uA8B4\", \"uA8B5\", \"uA8B6\", \"uA8B7\", \"uA8B8\", \"uA8B9\", \"uA8BA\", \"uA8BB\", \"uA8BC\", \"uA8BD\", \"uA8BE\", \"uA8BF\", \"uA8C0\", \"uA8C1\", \"uA8C2\", \"uA8C3\", \"uA952\", \"uA953\", \"uA983\", \"uA9B4\", \"uA9B5\", \"uA9BA\", \"uA9BB\", \"uA9BD\", \"uA9BE\", \"uA9BF\", \"uA9C0\", \"uAA2F\", \"uAA30\", \"uAA33\", \"uAA34\", \"uAA4D\", \"uAA7B\", \"uAA7D\", \"uAAEB\", \"uAAEE\", \"uAAEF\", \"uAAF5\", \"uABE3\", \"uABE4\", \"uABE6\", \"uABE7\", \"uABE9\", \"uABEA\", \"uABEC\"];\nconst b = [\"u0300\", \"u0301\", \"u0302\", \"u0303\", \"u0304\", \"u0305\", \"u0306\", \"u0307\", \"u0308\", \"u0309\", \"u030A\", \"u030B\", \"u030C\", \"u030D\", \"u030E\", \"u030F\", \"u0310\", \"u0311\", \"u0312\", \"u0313\", \"u0314\", \"u0315\", \"u0316\", \"u0317\", \"u0318\", \"u0319\", \"u031A\", \"u031B\", \"u031C\", \"u031D\", \"u031E\", \"u031F\", \"u0320\", \"u0321\", \"u0322\", \"u0323\", \"u0324\", \"u0325\", \"u0326\", \"u0327\", \"u0328\", \"u0329\", \"u032A\", \"u032B\", \"u032C\", \"u032D\", \"u032E\", \"u032F\", \"u0330\", \"u0331\", \"u0332\", \"u0333\", \"u0334\", \"u0335\", \"u0336\", \"u0337\", \"u0338\", \"u0339\", \"u033A\", \"u033B\", \"u033C\", \"u033D\", \"u033E\", \"u033F\", \"u0340\", \"u0341\", \"u0342\", \"u0343\", \"u0344\", \"u0345\", \"u0346\", \"u0347\", \"u0348\", \"u0349\", \"u034A\", \"u034B\", \"u034C\", \"u034D\", \"u034E\", \"u034F\", \"u0350\", \"u0351\", \"u0352\", \"u0353\", \"u0354\", \"u0355\", \"u0356\", \"u0357\", \"u0358\", \"u0359\", \"u035A\", \"u035B\", \"u035C\", \"u035D\", \"u035E\", \"u035F\", \"u0360\", \"u0361\", \"u0362\", \"u0363\", \"u0364\", \"u0365\", \"u0366\", \"u0367\", \"u0368\", \"u0369\", \"u036A\", \"u036B\", \"u036C\", \"u036D\", \"u036E\", \"u036F\", \"u0483\", \"u0484\", \"u0485\", \"u0486\", \"u0487\", \"u0591\", \"u0592\", \"u0593\", \"u0594\", \"u0595\", \"u0596\", \"u0597\", \"u0598\", \"u0599\", \"u059A\", \"u059B\", \"u059C\", \"u059D\", \"u059E\", \"u059F\", \"u05A0\", \"u05A1\", \"u05A2\", \"u05A3\", \"u05A4\", \"u05A5\", \"u05A6\", \"u05A7\", \"u05A8\", \"u05A9\", \"u05AA\", \"u05AB\", \"u05AC\", \"u05AD\", \"u05AE\", \"u05AF\", \"u05B0\", \"u05B1\", \"u05B2\", \"u05B3\", \"u05B4\", \"u05B5\", \"u05B6\", \"u05B7\", \"u05B8\", \"u05B9\", \"u05BA\", \"u05BB\", \"u05BC\", \"u05BD\", \"u05BF\", \"u05C1\", \"u05C2\", \"u05C4\", \"u05C5\", \"u05C7\", \"u0610\", \"u0611\", \"u0612\", \"u0613\", \"u0614\", \"u0615\", \"u0616\", \"u0617\", \"u0618\", \"u0619\", \"u061A\", \"u064B\", \"u064C\", \"u064D\", \"u064E\", \"u064F\", \"u0650\", \"u0651\", \"u0652\", \"u0653\", \"u0654\", \"u0655\", \"u0656\", \"u0657\", \"u0658\", \"u0659\", \"u065A\", \"u065B\", \"u065C\", \"u065D\", \"u065E\", \"u065F\", \"u0670\", \"u06D6\", \"u06D7\", \"u06D8\", \"u06D9\", \"u06DA\", \"u06DB\", \"u06DC\", \"u06DF\", \"u06E0\", \"u06E1\", \"u06E2\", \"u06E3\", \"u06E4\", \"u06E7\", \"u06E8\", \"u06EA\", \"u06EB\", \"u06EC\", \"u06ED\", \"u0711\", \"u0730\", \"u0731\", \"u0732\", \"u0733\", \"u0734\", \"u0735\", \"u0736\", \"u0737\", \"u0738\", \"u0739\", \"u073A\", \"u073B\", \"u073C\", \"u073D\", \"u073E\", \"u073F\", \"u0740\", \"u0741\", \"u0742\", \"u0743\", \"u0744\", \"u0745\", \"u0746\", \"u0747\", \"u0748\", \"u0749\", \"u074A\", \"u07A6\", \"u07A7\", \"u07A8\", \"u07A9\", \"u07AA\", \"u07AB\", \"u07AC\", \"u07AD\", \"u07AE\", \"u07AF\", \"u07B0\", \"u07EB\", \"u07EC\", \"u07ED\", \"u07EE\", \"u07EF\", \"u07F0\", \"u07F1\", \"u07F2\", \"u07F3\", \"u0816\", \"u0817\", \"u0818\", \"u0819\", \"u081B\", \"u081C\", \"u081D\", \"u081E\", \"u081F\", \"u0820\", \"u0821\", \"u0822\", \"u0823\", \"u0825\", \"u0826\", \"u0827\", \"u0829\", \"u082A\", \"u082B\", \"u082C\", \"u082D\", \"u0859\", \"u085A\", \"u085B\", \"u08E3\", \"u08E4\", \"u08E5\", \"u08E6\", \"u08E7\", \"u08E8\", \"u08E9\", \"u08EA\", \"u08EB\", \"u08EC\", \"u08ED\", \"u08EE\", \"u08EF\", \"u08F0\", \"u08F1\", \"u08F2\", \"u08F3\", \"u08F4\", \"u08F5\", \"u08F6\", \"u08F7\", \"u08F8\", \"u08F9\", \"u08FA\", \"u08FB\", \"u08FC\", \"u08FD\", \"u08FE\", \"u08FF\", \"u0900\", \"u0901\", \"u0902\", \"u093A\", \"u093C\", \"u0941\", \"u0942\", \"u0943\", \"u0944\", \"u0945\", \"u0946\", \"u0947\", \"u0948\", \"u094D\", \"u0951\", \"u0952\", \"u0953\", \"u0954\", \"u0955\", \"u0956\", \"u0957\", \"u0962\", \"u0963\", \"u0981\", \"u09BC\", \"u09C1\", \"u09C2\", \"u09C3\", \"u09C4\", \"u09CD\", \"u09E2\", \"u09E3\", \"u0A01\", \"u0A02\", \"u0A3C\", \"u0A41\", \"u0A42\", \"u0A47\", \"u0A48\", \"u0A4B\", \"u0A4C\", \"u0A4D\", \"u0A51\", \"u0A70\", \"u0A71\", \"u0A75\", \"u0A81\", \"u0A82\", \"u0ABC\", \"u0AC1\", \"u0AC2\", \"u0AC3\", \"u0AC4\", \"u0AC5\", \"u0AC7\", \"u0AC8\", \"u0ACD\", \"u0AE2\", \"u0AE3\", \"u0B01\", \"u0B3C\", \"u0B3F\", \"u0B41\", \"u0B42\", \"u0B43\", \"u0B44\", \"u0B4D\", \"u0B56\", \"u0B62\", \"u0B63\", \"u0B82\", \"u0BC0\", \"u0BCD\", \"u0C00\", \"u0C3E\", \"u0C3F\", \"u0C40\", \"u0C46\", \"u0C47\", \"u0C48\", \"u0C4A\", \"u0C4B\", \"u0C4C\", \"u0C4D\", \"u0C55\", \"u0C56\", \"u0C62\", \"u0C63\", \"u0C81\", \"u0CBC\", \"u0CBF\", \"u0CC6\", \"u0CCC\", \"u0CCD\", \"u0CE2\", \"u0CE3\", \"u0D01\", \"u0D41\", \"u0D42\", \"u0D43\", \"u0D44\", \"u0D4D\", \"u0D62\", \"u0D63\", \"u0DCA\", \"u0DD2\", \"u0DD3\", \"u0DD4\", \"u0DD6\", \"u0E31\", \"u0E34\", \"u0E35\", \"u0E36\", \"u0E37\", \"u0E38\", \"u0E39\", \"u0E3A\", \"u0E47\", \"u0E48\", \"u0E49\", \"u0E4A\", \"u0E4B\", \"u0E4C\", \"u0E4D\", \"u0E4E\", \"u0EB1\", \"u0EB4\", \"u0EB5\", \"u0EB6\", \"u0EB7\", \"u0EB8\", \"u0EB9\", \"u0EBB\", \"u0EBC\", \"u0EC8\", \"u0EC9\", \"u0ECA\", \"u0ECB\", \"u0ECC\", \"u0ECD\", \"u0F18\", \"u0F19\", \"u0F35\", \"u0F37\", \"u0F39\", \"u0F71\", \"u0F72\", \"u0F73\", \"u0F74\", \"u0F75\", \"u0F76\", \"u0F77\", \"u0F78\", \"u0F79\", \"u0F7A\", \"u0F7B\", \"u0F7C\", \"u0F7D\", \"u0F7E\", \"u0F80\", \"u0F81\", \"u0F82\", \"u0F83\", \"u0F84\", \"u0F86\", \"u0F87\", \"u0F8D\", \"u0F8E\", \"u0F8F\", \"u0F90\", \"u0F91\", \"u0F92\", \"u0F93\", \"u0F94\", \"u0F95\", \"u0F96\", \"u0F97\", \"u0F99\", \"u0F9A\", \"u0F9B\", \"u0F9C\", \"u0F9D\", \"u0F9E\", \"u0F9F\", \"u0FA0\", \"u0FA1\", \"u0FA2\", \"u0FA3\", \"u0FA4\", \"u0FA5\", \"u0FA6\", \"u0FA7\", \"u0FA8\", \"u0FA9\", \"u0FAA\", \"u0FAB\", \"u0FAC\", \"u0FAD\", \"u0FAE\", \"u0FAF\", \"u0FB0\", \"u0FB1\", \"u0FB2\", \"u0FB3\", \"u0FB4\", \"u0FB5\", \"u0FB6\", \"u0FB7\", \"u0FB8\", \"u0FB9\", \"u0FBA\", \"u0FBB\", \"u0FBC\", \"u0FC6\", \"u102D\", \"u102E\", \"u102F\", \"u1030\", \"u1032\", \"u1033\", \"u1034\", \"u1035\", \"u1036\", \"u1037\", \"u1039\", \"u103A\", \"u103D\", \"u103E\", \"u1058\", \"u1059\", \"u105E\", \"u105F\", \"u1060\", \"u1071\", \"u1072\", \"u1073\", \"u1074\", \"u1082\", \"u1085\", \"u1086\", \"u108D\", \"u109D\", \"u135D\", \"u135E\", \"u135F\", \"u1712\", \"u1713\", \"u1714\", \"u1732\", \"u1733\", \"u1734\", \"u1752\", \"u1753\", \"u1772\", \"u1773\", \"u17B4\", \"u17B5\", \"u17B7\", \"u17B8\", \"u17B9\", \"u17BA\", \"u17BB\", \"u17BC\", \"u17BD\", \"u17C6\", \"u17C9\", \"u17CA\", \"u17CB\", \"u17CC\", \"u17CD\", \"u17CE\", \"u17CF\", \"u17D0\", \"u17D1\", \"u17D2\", \"u17D3\", \"u17DD\", \"u180B\", \"u180C\", \"u180D\", \"u18A9\", \"u1920\", \"u1921\", \"u1922\", \"u1927\", \"u1928\", \"u1932\", \"u1939\", \"u193A\", \"u193B\", \"u1A17\", \"u1A18\", \"u1A1B\", \"u1A56\", \"u1A58\", \"u1A59\", \"u1A5A\", \"u1A5B\", \"u1A5C\", \"u1A5D\", \"u1A5E\", \"u1A60\", \"u1A62\", \"u1A65\", \"u1A66\", \"u1A67\", \"u1A68\", \"u1A69\", \"u1A6A\", \"u1A6B\", \"u1A6C\", \"u1A73\", \"u1A74\", \"u1A75\", \"u1A76\", \"u1A77\", \"u1A78\", \"u1A79\", \"u1A7A\", \"u1A7B\", \"u1A7C\", \"u1A7F\", \"u1AB0\", \"u1AB1\", \"u1AB2\", \"u1AB3\", \"u1AB4\", \"u1AB5\", \"u1AB6\", \"u1AB7\", \"u1AB8\", \"u1AB9\", \"u1ABA\", \"u1ABB\", \"u1ABC\", \"u1ABD\", \"u1B00\", \"u1B01\", \"u1B02\", \"u1B03\", \"u1B34\", \"u1B36\", \"u1B37\", \"u1B38\", \"u1B39\", \"u1B3A\", \"u1B3C\", \"u1B42\", \"u1B6B\", \"u1B6C\", \"u1B6D\", \"u1B6E\", \"u1B6F\", \"u1B70\", \"u1B71\", \"u1B72\", \"u1B73\", \"u1B80\", \"u1B81\", \"u1BA2\", \"u1BA3\", \"u1BA4\", \"u1BA5\", \"u1BA8\", \"u1BA9\", \"u1BAB\", \"u1BAC\", \"u1BAD\", \"u1BE6\", \"u1BE8\", \"u1BE9\", \"u1BED\", \"u1BEF\", \"u1BF0\", \"u1BF1\", \"u1C2C\", \"u1C2D\", \"u1C2E\", \"u1C2F\", \"u1C30\", \"u1C31\", \"u1C32\", \"u1C33\", \"u1C36\", \"u1C37\", \"u1CD0\", \"u1CD1\", \"u1CD2\", \"u1CD4\", \"u1CD5\", \"u1CD6\", \"u1CD7\", \"u1CD8\", \"u1CD9\", \"u1CDA\", \"u1CDB\", \"u1CDC\", \"u1CDD\", \"u1CDE\", \"u1CDF\", \"u1CE0\", \"u1CE2\", \"u1CE3\", \"u1CE4\", \"u1CE5\", \"u1CE6\", \"u1CE7\", \"u1CE8\", \"u1CED\", \"u1CF4\", \"u1CF8\", \"u1CF9\", \"u1DC0\", \"u1DC1\", \"u1DC2\", \"u1DC3\", \"u1DC4\", \"u1DC5\", \"u1DC6\", \"u1DC7\", \"u1DC8\", \"u1DC9\", \"u1DCA\", \"u1DCB\", \"u1DCC\", \"u1DCD\", \"u1DCE\", \"u1DCF\", \"u1DD0\", \"u1DD1\", \"u1DD2\", \"u1DD3\", \"u1DD4\", \"u1DD5\", \"u1DD6\", \"u1DD7\", \"u1DD8\", \"u1DD9\", \"u1DDA\", \"u1DDB\", \"u1DDC\", \"u1DDD\", \"u1DDE\", \"u1DDF\", \"u1DE0\", \"u1DE1\", \"u1DE2\", \"u1DE3\", \"u1DE4\", \"u1DE5\", \"u1DE6\", \"u1DE7\", \"u1DE8\", \"u1DE9\", \"u1DEA\", \"u1DEB\", \"u1DEC\", \"u1DED\", \"u1DEE\", \"u1DEF\", \"u1DF0\", \"u1DF1\", \"u1DF2\", \"u1DF3\", \"u1DF4\", \"u1DF5\", \"u1DFC\", \"u1DFD\", \"u1DFE\", \"u1DFF\", \"u20D0\", \"u20D1\", \"u20D2\", \"u20D3\", \"u20D4\", \"u20D5\", \"u20D6\", \"u20D7\", \"u20D8\", \"u20D9\", \"u20DA\", \"u20DB\", \"u20DC\", \"u20E1\", \"u20E5\", \"u20E6\", \"u20E7\", \"u20E8\", \"u20E9\", \"u20EA\", \"u20EB\", \"u20EC\", \"u20ED\", \"u20EE\", \"u20EF\", \"u20F0\", \"u2CEF\", \"u2CF0\", \"u2CF1\", \"u2D7F\", \"u2DE0\", \"u2DE1\", \"u2DE2\", \"u2DE3\", \"u2DE4\", \"u2DE5\", \"u2DE6\", \"u2DE7\", \"u2DE8\", \"u2DE9\", \"u2DEA\", \"u2DEB\", \"u2DEC\", \"u2DED\", \"u2DEE\", \"u2DEF\", \"u2DF0\", \"u2DF1\", \"u2DF2\", \"u2DF3\", \"u2DF4\", \"u2DF5\", \"u2DF6\", \"u2DF7\", \"u2DF8\", \"u2DF9\", \"u2DFA\", \"u2DFB\", \"u2DFC\", \"u2DFD\", \"u2DFE\", \"u2DFF\", \"u302A\", \"u302B\", \"u302C\", \"u302D\", \"u3099\", \"u309A\", \"uA66F\", \"uA674\", \"uA675\", \"uA676\", \"uA677\", \"uA678\", \"uA679\", \"uA67A\", \"uA67B\", \"uA67C\", \"uA67D\", \"uA69E\", \"uA69F\", \"uA6F0\", \"uA6F1\", \"uA802\", \"uA806\", \"uA80B\", \"uA825\", \"uA826\", \"uA8C4\", \"uA8E0\", \"uA8E1\", \"uA8E2\", \"uA8E3\", \"uA8E4\", \"uA8E5\", \"uA8E6\", \"uA8E7\", \"uA8E8\", \"uA8E9\", \"uA8EA\", \"uA8EB\", \"uA8EC\", \"uA8ED\", \"uA8EE\", \"uA8EF\", \"uA8F0\", \"uA8F1\", \"uA926\", \"uA927\", \"uA928\", \"uA929\", \"uA92A\", \"uA92B\", \"uA92C\", \"uA92D\", \"uA947\", \"uA948\", \"uA949\", \"uA94A\", \"uA94B\", \"uA94C\", \"uA94D\", \"uA94E\", \"uA94F\", \"uA950\", \"uA951\", \"uA980\", \"uA981\", \"uA982\", \"uA9B3\", \"uA9B6\", \"uA9B7\", \"uA9B8\", \"uA9B9\", \"uA9BC\", \"uA9E5\", \"uAA29\", \"uAA2A\", \"uAA2B\", \"uAA2C\", \"uAA2D\", \"uAA2E\", \"uAA31\", \"uAA32\", \"uAA35\", \"uAA36\", \"uAA43\", \"uAA4C\", \"uAA7C\", \"uAAB0\", \"uAAB2\", \"uAAB3\", \"uAAB4\", \"uAAB7\", \"uAAB8\", \"uAABE\", \"uAABF\", \"uAAC1\", \"uAAEC\", \"uAAED\", \"uAAF6\", \"uABE5\", \"uABE8\", \"uABED\", \"uFB1E\", \"uFE00\", \"uFE01\", \"uFE02\", \"uFE03\", \"uFE04\", \"uFE05\", \"uFE06\", \"uFE07\", \"uFE08\", \"uFE09\", \"uFE0A\", \"uFE0B\", \"uFE0C\", \"uFE0D\", \"uFE0E\", \"uFE0F\", \"uFE20\", \"uFE21\", \"uFE22\", \"uFE23\", \"uFE24\", \"uFE25\", \"uFE26\", \"uFE27\", \"uFE28\", \"uFE29\", \"uFE2A\", \"uFE2B\", \"uFE2C\", \"uFE2D\", \"uFE2E\", \"uFE2F\"];\nexport default a.concat(b);\n","import {merge} from \"d3-array\";\nimport {default as stringify} from \"./stringify.js\";\nimport {default as combiningMarks} from \"./combiningMarks.js\";\n\nconst splitChars = [\"-\", \";\", \":\", \"&\", \"|\",\n  \"u0E2F\", // thai character pairannoi\n  \"u0EAF\", // lao ellipsis\n  \"u0EC6\", // lao ko la (word repetition)\n  \"u0ECC\", // lao cancellation mark\n  \"u104A\", // myanmar sign little section\n  \"u104B\", // myanmar sign section\n  \"u104C\", // myanmar symbol locative\n  \"u104D\", // myanmar symbol completed\n  \"u104E\", // myanmar symbol aforementioned\n  \"u104F\", // myanmar symbol genitive\n  \"u2013\", // en dash\n  \"u2014\", // em dash\n  \"u2027\", // simplified chinese hyphenation point\n  \"u3000\", // simplified chinese ideographic space\n  \"u3001\", // simplified chinese ideographic comma\n  \"u3002\", // simplified chinese ideographic full stop\n  \"uFF0C\", // full-width comma\n  \"uFF5E\"  // wave dash\n];\n\nconst prefixChars = [\"'\", \"<\", \"(\", \"{\", \"[\",\n  \"u00AB\", // left-pointing double angle quotation mark\n  \"u300A\", // left double angle bracket\n  \"u3008\"  // left angle bracket\n];\n\nconst suffixChars = [\"'\", \">\", \")\", \"}\", \"]\", \".\", \"!\", \"?\", \"/\",\n  \"u00BB\", // right-pointing double angle quotation mark\n  \"u300B\", // right double angle bracket\n  \"u3009\"  // right angle bracket\n].concat(splitChars);\n\nconst burmeseRange = \"\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\";\nconst japaneseRange = \"\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff0b\\uff0d-\\uff5d\\uff5f-\\uff9f\\u3400-\\u4dbf\";\nconst chineseRange = \"\\u3400-\\u9FBF\";\nconst laoRange = \"\\u0E81-\\u0EAE\\u0EB0-\\u0EC4\\u0EC8-\\u0ECB\\u0ECD-\\u0EDD\";\n\nconst noSpaceRange = burmeseRange + chineseRange + japaneseRange + laoRange;\n\nconst splitWords = new RegExp(`(\\\\${splitChars.join(\"|\\\\\")})*[^\\\\s|\\\\${splitChars.join(\"|\\\\\")}]*(\\\\${splitChars.join(\"|\\\\\")})*`, \"g\");\n// eslint-disable-next-line no-misleading-character-class\nconst noSpaceLanguage = new RegExp(`[${noSpaceRange}]`);\nconst splitAllChars = new RegExp(`(\\\\${prefixChars.join(\"|\\\\\")})*[${noSpaceRange}](\\\\${suffixChars.join(\"|\\\\\")}|\\\\${combiningMarks.join(\"|\\\\\")})*|[a-z0-9]+`, \"gi\");\n\n/**\n    @function textSplit\n    @desc Splits a given sentence into an array of words.\n    @param {String} sentence\n*/\nexport default function(sentence) {\n  if (!noSpaceLanguage.test(sentence)) return stringify(sentence).match(splitWords).filter(w => w.length);\n  return merge(stringify(sentence).match(splitWords).map(d => {\n    if (noSpaceLanguage.test(d)) return d.match(splitAllChars);\n    return [d];\n  }));\n}\n\nexport {prefixChars, splitChars, splitWords, suffixChars};\n","import measure from \"./textWidth.js\";\nimport defaultSplit from \"./textSplit.js\";\nimport stringify from \"./stringify.js\";\nimport {trimRight} from \"./trim.js\";\n\n/**\n    @function textWrap\n    @desc Based on the defined styles and dimensions, breaks a string into an array of strings for each line of text.\n*/\nexport default function() {\n\n  let fontFamily = \"sans-serif\",\n      fontSize = 10,\n      fontWeight = 400,\n      height = 200,\n      lineHeight,\n      maxLines = null,\n      overflow = false,\n      split = defaultSplit,\n      width = 200;\n\n  /**\n      The inner return object and wraps the text and returns the line data array.\n      @private\n  */\n  function textWrap(sentence) {\n\n    sentence = stringify(sentence);\n\n    if (lineHeight === void 0) lineHeight = Math.ceil(fontSize * 1.4);\n\n    const words = split(sentence);\n\n    const style = {\n      \"font-family\": fontFamily,\n      \"font-size\": fontSize,\n      \"font-weight\": fontWeight,\n      \"line-height\": lineHeight\n    };\n\n    let line = 1,\n        textProg = \"\",\n        truncated = false,\n        widthProg = 0;\n\n    const lineData = [],\n          sizes = measure(words, style),\n          space = measure(\" \", style);\n\n    for (let i = 0; i < words.length; i++) {\n      let word = words[i];\n      const wordWidth = sizes[words.indexOf(word)];\n      word += sentence.slice(textProg.length + word.length).match(\"^( |\\n)*\", \"g\")[0];\n      if (textProg.slice(-1) === \"\\n\" || widthProg + wordWidth > width) {\n        if (!i && !overflow) {\n          truncated = true;\n          break;\n        }\n        if (lineData.length >= line) lineData[line - 1] = trimRight(lineData[line - 1]);\n        line++;\n        if (lineHeight * line > height || wordWidth > width && !overflow || maxLines && line > maxLines) {\n          truncated = true;\n          break;\n        }\n        widthProg = 0;\n        lineData.push(word);\n      }\n      else if (!i) lineData[0] = word;\n      else lineData[line - 1] += word;\n      textProg += word;\n      widthProg += wordWidth;\n      widthProg += word.match(/[\\s]*$/g)[0].length * space;\n    }\n\n    return {\n      lines: lineData,\n      sentence, truncated,\n      widths: measure(lineData, style),\n      words\n    };\n\n  }\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the font family accessor to the specified function or string and returns this generator. If *value* is not specified, returns the current font family.\n      @param {Function|String} [*value* = \"sans-serif\"]\n  */\n  textWrap.fontFamily = function(_) {\n    return arguments.length ? (fontFamily = _, textWrap) : fontFamily;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the font size accessor to the specified function or number and returns this generator. If *value* is not specified, returns the current font size.\n      @param {Function|Number} [*value* = 10]\n  */\n  textWrap.fontSize = function(_) {\n    return arguments.length ? (fontSize = _, textWrap) : fontSize;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the font weight accessor to the specified function or number and returns this generator. If *value* is not specified, returns the current font weight.\n      @param {Function|Number|String} [*value* = 400]\n  */\n  textWrap.fontWeight = function(_) {\n    return arguments.length ? (fontWeight = _, textWrap) : fontWeight;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets height limit to the specified value and returns this generator. If *value* is not specified, returns the current value.\n      @param {Number} [*value* = 200]\n  */\n  textWrap.height = function(_) {\n    return arguments.length ? (height = _, textWrap) : height;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the line height accessor to the specified function or number and returns this generator. If *value* is not specified, returns the current line height accessor, which is 1.1 times the [font size](#textWrap.fontSize) by default.\n      @param {Function|Number} [*value*]\n  */\n  textWrap.lineHeight = function(_) {\n    return arguments.length ? (lineHeight = _, textWrap) : lineHeight;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the maximum number of lines allowed when wrapping.\n      @param {Function|Number} [*value*]\n  */\n  textWrap.maxLines = function(_) {\n    return arguments.length ? (maxLines = _, textWrap) : maxLines;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the overflow to the specified boolean and returns this generator. If *value* is not specified, returns the current overflow value.\n      @param {Boolean} [*value* = false]\n  */\n  textWrap.overflow = function(_) {\n    return arguments.length ? (overflow = _, textWrap) : overflow;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets the word split function to the specified function and returns this generator. If *value* is not specified, returns the current word split function.\n      @param {Function} [*value*] A function that, when passed a string, is expected to return that string split into an array of words to textWrap. The default split function splits strings on the following characters: `-`, `/`, `;`, `:`, `&`\n  */\n  textWrap.split = function(_) {\n    return arguments.length ? (split = _, textWrap) : split;\n  };\n\n  /**\n      @memberof textWrap\n      @desc If *value* is specified, sets width limit to the specified value and returns this generator. If *value* is not specified, returns the current value.\n      @param {Number} [*value* = 200]\n  */\n  textWrap.width = function(_) {\n    return arguments.length ? (width = _, textWrap) : width;\n  };\n\n  return textWrap;\n\n}\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {select} from \"d3-selection\";\n// eslint-disable-next-line no-unused-vars\nimport {transition} from \"d3-transition\";\nimport {max, min, sum} from \"d3-array\";\nimport {accessor, BaseClass, constant, parseSides} from \"d3plus-common\";\n\nimport fontExists from \"./fontExists.js\";\nimport {default as detectRTL} from \"./rtl.js\";\nimport strip from \"./strip.js\";\nimport textSplit from \"./textSplit.js\";\nimport measure from \"./textWidth.js\";\nimport wrap from \"./textWrap.js\";\nimport {trim, trimRight} from \"./trim.js\";\n\nconst defaultHtmlLookup = {\n  i: \"font-style: italic;\",\n  em: \"font-style: italic;\",\n  b: \"font-weight: bold;\",\n  strong: \"font-weight: bold;\"\n};\n\n/**\n    @class TextBox\n    @extends external:BaseClass\n    @desc Creates a wrapped text box for each point in an array of data. See [this example](https://d3plus.org/examples/d3plus-text/getting-started/) for help getting started using the TextBox class.\n*/\nexport default class TextBox extends BaseClass {\n\n  /**\n      @memberof TextBox\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._ariaHidden = constant(\"false\");\n    this._delay = 0;\n    this._duration = 0;\n    this._ellipsis = (text, line) => line ? `${text.replace(/\\.|,$/g, \"\")}...` : \"\";\n    this._fontColor = constant(\"black\");\n    this._fontFamily = constant([\"Roboto\", \"Helvetica Neue\", \"HelveticaNeue\", \"Helvetica\", \"Arial\", \"sans-serif\"]);\n    this._fontMax = constant(50);\n    this._fontMin = constant(8);\n    this._fontOpacity = constant(1);\n    this._fontResize = constant(false);\n    this._fontSize = constant(10);\n    this._fontStroke = constant(\"transparent\");\n    this._fontStrokeWidth = constant(0);\n    this._fontWeight = constant(400);\n    this._height = accessor(\"height\", 200);\n    this._html = defaultHtmlLookup;\n    this._id = (d, i) => d.id || `${i}`;\n    this._lineHeight = (d, i) => this._fontSize(d, i) * 1.2;\n    this._maxLines = constant(null);\n    this._on = {};\n    this._overflow = constant(false);\n    this._padding = constant(0);\n    this._pointerEvents = constant(\"auto\");\n    this._rotate = constant(0);\n    this._rotateAnchor = d => [d.w / 2, d.h / 2];\n    this._split = textSplit;\n    this._text = accessor(\"text\");\n    this._textAnchor = constant(\"start\");\n    this._verticalAlign = constant(\"top\");\n    this._width = accessor(\"width\", 200);\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n  }\n\n  /**\n      @memberof TextBox\n      @desc Renders the text boxes. If a *callback* is specified, it will be called once the shapes are done drawing.\n      @param {Function} [*callback* = undefined]\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").style(\"width\", `${window.innerWidth}px`).style(\"height\", `${window.innerHeight}px`).node());\n\n    const that = this;\n\n    const boxes = this._select.selectAll(\".d3plus-textBox\").data(this._data.reduce((arr, d, i) => {\n\n      let t = this._text(d, i);\n      if (t === void 0) return arr;\n      t = trim(t);\n\n      const resize = this._fontResize(d, i);\n      const lHRatio = this._lineHeight(d, i) / this._fontSize(d, i);\n\n      let fS = resize ? this._fontMax(d, i) : this._fontSize(d, i),\n          lH = resize ? fS * lHRatio : this._lineHeight(d, i),\n          line = 1,\n          lineData = [],\n          sizes,\n          wrapResults;\n\n      const style = {\n        \"font-family\": fontExists(this._fontFamily(d, i)),\n        \"font-size\": fS,\n        \"font-weight\": this._fontWeight(d, i),\n        \"line-height\": lH\n      };\n\n      const padding = parseSides(this._padding(d, i));\n\n      const h = this._height(d, i) - (padding.top + padding.bottom),\n            w = this._width(d, i) - (padding.left + padding.right);\n\n      const wrapper = wrap()\n        .fontFamily(style[\"font-family\"])\n        .fontSize(fS)\n        .fontWeight(style[\"font-weight\"])\n        .lineHeight(lH)\n        .maxLines(this._maxLines(d, i))\n        .height(h)\n        .overflow(this._overflow(d, i))\n        .width(w)\n        .split(this._split);\n\n      const fMax = this._fontMax(d, i),\n            fMin = this._fontMin(d, i),\n            vA = this._verticalAlign(d, i),\n            words = this._split(t, i);\n\n      /**\n          Figures out the lineData to be used for wrapping.\n          @private\n      */\n      function checkSize() {\n        const truncate = () => {\n          if (line < 1) lineData = [that._ellipsis(\"\", line)];\n          else lineData[line - 1] = that._ellipsis(lineData[line - 1], line);\n        };\n\n        // Constraint the font size\n        fS = max([fS, fMin]);\n        fS = min([fS, fMax]);\n\n        if (resize) {\n          lH = fS * lHRatio;\n          wrapper\n            .fontSize(fS)\n            .lineHeight(lH);\n          style[\"font-size\"] = fS;\n          style[\"line-height\"] = lH;\n        }\n\n        wrapResults = wrapper(t);\n        lineData = wrapResults.lines.filter(l => l !== \"\");\n        line = lineData.length;\n\n        if (wrapResults.truncated) {\n          if (resize) {\n            fS--;\n            if (fS < fMin) {\n              fS = fMin;\n              truncate();\n              return;\n            }\n            else checkSize();\n          }\n          else truncate();\n        }\n      }\n\n      if (w > fMin && (h > lH || resize && h > fMin * lHRatio)) {\n\n        if (resize) {\n\n          sizes = measure(words, style);\n\n          const areaMod = 1.165 + w / h * 0.1,\n                boxArea = w * h,\n                maxWidth = max(sizes),\n                textArea = sum(sizes, d => d * lH) * areaMod;\n\n          if (maxWidth > w || textArea > boxArea) {\n            const areaRatio = Math.sqrt(boxArea / textArea),\n                  widthRatio = w / maxWidth;\n            const sizeRatio = min([areaRatio, widthRatio]);\n            fS = Math.floor(fS * sizeRatio);\n          }\n\n          const heightMax = Math.floor(h * 0.8);\n          if (fS > heightMax) fS = heightMax;\n\n        }\n\n        checkSize();\n\n      }\n\n      if (lineData.length) {\n\n        const tH = line * lH;\n        const r = this._rotate(d, i);\n        let yP = r === 0 ? vA === \"top\" ? 0 : vA === \"middle\" ? h / 2 - tH / 2 : h - tH : 0;\n        yP -= lH * 0.1;\n\n        arr.push({\n          aH: this._ariaHidden(d, i),\n          data: d,\n          i,\n          lines: lineData,\n          fC: this._fontColor(d, i),\n          fStroke: this._fontStroke(d, i),\n          fSW: this._fontStrokeWidth(d, i),\n          fF: style[\"font-family\"],\n          fO: this._fontOpacity(d, i),\n          fW: style[\"font-weight\"],\n          id: this._id(d, i),\n          tA: this._textAnchor(d, i),\n          vA: this._verticalAlign(d, i),\n          widths: wrapResults.widths,\n          fS, lH, w, h, r,\n          x: this._x(d, i) + padding.left,\n          y: this._y(d, i) + yP + padding.top\n        });\n\n      }\n\n      return arr;\n\n    }, []), d => this._id(d.data, d.i));\n\n    const t = this._select.transition().duration(this._duration);\n\n    if (this._duration === 0) {\n\n      boxes.exit().remove();\n\n    }\n    else {\n\n      boxes.exit().transition().delay(this._duration).remove();\n\n      boxes.exit().selectAll(\"text\").transition(t)\n        .attr(\"opacity\", 0)\n        .style(\"opacity\", 0);\n\n    }\n\n    /**\n     * Applies translate and rotate to a text element.\n     * @param {D3Selection} text\n     * @private\n     */\n    function rotate(text) {\n      text.attr(\"transform\", (d, i) => {\n        const rotateAnchor = that._rotateAnchor(d, i);\n        return `translate(${d.x}, ${d.y}) rotate(${d.r}, ${rotateAnchor[0]}, ${rotateAnchor[1]})`;\n      });\n    }\n\n    const update = boxes.enter().append(\"g\")\n        .attr(\"class\", \"d3plus-textBox\")\n        .attr(\"id\", d => `d3plus-textBox-${strip(d.id)}`)\n        .call(rotate)\n      .merge(boxes);\n\n    const rtl = detectRTL(this._select.node());\n\n    update\n      .order()\n      .style(\"pointer-events\", d => this._pointerEvents(d.data, d.i))\n      .each(function(d) {\n\n        /**\n            Sets the inner text content of each <text> element.\n            @private\n        */\n        function textContent(text) {\n\n          let tag = false;\n\n          text[that._html ? \"html\" : \"text\"](t => {\n\n            let cleaned = trimRight(t)\n              .replace(/&([^;&]*)/g, (str, a) => a === \"amp\" ? str : `&amp;${a}`) // replaces all non-HTML ampersands with escaped entity\n              .replace(/<([^A-z^/]+)/g, (str, a) => `&lt;${a}`).replace(/<$/g, \"&lt;\") // replaces all non-HTML left angle brackets with escaped entity\n              .replace(/(<[^>^/]+>)([^<^>]+)$/g, (str, a, b) => `${a}${b}${a.replace(\"<\", \"</\")}`) // ands end tag to lines before mid-HTML break\n              .replace(/^([^<^>]+)(<\\/[^>]+>)/g, (str, a, b) => `${b.replace(\"</\", \"<\")}${a}${b}`); // ands start tag to lines after mid-HTML break\n\n            const tagRegex = new RegExp(/<([A-z]+)[^>]*>([^<^>]+)<\\/[^>]+>/g);\n            if (cleaned.match(tagRegex)) {\n              cleaned = cleaned\n                .replace(tagRegex, (str, a, b) => {\n                  tag = that._html[a] ? a : false;\n                  if (tag) {\n                    const style = that._html[tag];\n                    if (t.includes(`</${tag}>`)) tag = false;\n                    return `<tspan style=\"${style}\">${b}</tspan>`;\n                  }\n                  return b;\n                });\n            }\n            else if (tag.length) {\n              cleaned = `<tspan style=\"${that._html[tag]}\">${cleaned}</tspan>`;\n            }\n\n            return cleaned;\n\n          });\n\n        }\n\n        /**\n            Styles to apply to each <text> element.\n            @private\n        */\n        function textStyle(text) {\n\n          text\n            .attr(\"aria-hidden\", d.aH)\n            .attr(\"dir\", rtl ? \"rtl\" : \"ltr\")\n            .attr(\"fill\", d.fC)\n            .attr(\"stroke\", d.fStroke)\n            .attr(\"stroke-width\", d.fSW)\n            .attr(\"text-anchor\", d.tA)\n            .attr(\"font-family\", d.fF)\n            .style(\"font-family\", d.fF)\n            .attr(\"font-size\", `${d.fS}px`)\n            .style(\"font-size\", `${d.fS}px`)\n            .attr(\"font-weight\", d.fW)\n            .style(\"font-weight\", d.fW)\n            .attr(\"x\", `${d.tA === \"middle\" ? d.w / 2 : rtl ? d.tA === \"start\" ? d.w : 0 : d.tA === \"end\" ? d.w : 2 * Math.sin(Math.PI * d.r / 180)}px`)\n            .attr(\"y\", (t, i) => d.r === 0 || d.vA === \"top\" ? `${(i + 1) * d.lH - (d.lH - d.fS)}px`\n            : d.vA === \"middle\"\n              ? `${(d.h + d.fS) / 2 - (d.lH - d.fS) + (i - d.lines.length / 2 + 0.5) * d.lH}px`\n              : `${d.h - 2 * (d.lH - d.fS) - (d.lines.length - (i + 1)) * d.lH + 2 * Math.cos(Math.PI * d.r / 180)}px`);\n\n        }\n\n        const texts = select(this).selectAll(\"text\").data(d.lines);\n\n        if (that._duration === 0) {\n\n          texts\n            .call(textContent)\n            .call(textStyle);\n\n          texts.exit().remove();\n\n          texts.enter().append(\"text\")\n            .attr(\"dominant-baseline\", \"alphabetic\")\n            .style(\"baseline-shift\", \"0%\")\n            .attr(\"unicode-bidi\", \"bidi-override\")\n            .call(textContent)\n            .call(textStyle)\n            .attr(\"opacity\", d.fO)\n            .style(\"opacity\", d.fO);\n\n        }\n        else {\n\n          texts.call(textContent).transition(t).call(textStyle);\n\n          texts.exit().transition(t)\n            .attr(\"opacity\", 0).remove();\n\n          texts.enter().append(\"text\")\n              .attr(\"dominant-baseline\", \"alphabetic\")\n              .style(\"baseline-shift\", \"0%\")\n              .attr(\"opacity\", 0)\n              .style(\"opacity\", 0)\n              .call(textContent)\n              .call(textStyle)\n            .merge(texts).transition(t).delay(that._delay)\n              .call(textStyle)\n              .attr(\"opacity\", d.fO)\n              .style(\"opacity\", d.fO);\n        }\n\n      })\n      .transition(t).call(rotate);\n\n    const events = Object.keys(this._on),\n          on = events.reduce((obj, e) => {\n            obj[e] = (d, i) => this._on[e](d.data, i);\n            return obj;\n          }, {});\n    for (let e = 0; e < events.length; e++) update.on(events[e], on[events[e]]);\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof TextBox\n      @desc If *value* is specified, sets the aria-hidden attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  ariaHidden(_) {\n    return _ !== undefined\n      ? (this._ariaHidden = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._ariaHidden;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the data array to the specified array. A text box will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the animation delay to the specified number in milliseconds.\n      @param {Number} [*value* = 0]\n      @chainable\n  */\n  delay(_) {\n    return arguments.length ? (this._delay = _, this) : this._delay;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the animation duration to the specified number in milliseconds.\n      @param {Number} [*value* = 0]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the function that handles what to do when a line is truncated. It should return the new value for the line, and is passed 2 arguments: the String of text for the line in question, and the number of the line. By default, an ellipsis is added to the end of any line except if it is the first word that cannot fit (in that case, an empty string is returned).\n      @param {Function|String} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(text, line) {\n  return line ? text.replace(/\\.|,$/g, \"\") + \"...\" : \"\";\n}\n  */\n  ellipsis(_) {\n    return arguments.length ? (this._ellipsis = typeof _ === \"function\" ? _ : constant(_), this) : this._ellipsis;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font color to the specified accessor function or static string, which is inferred from the [DOM selection](#textBox.select) by default.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  fontColor(_) {\n    return arguments.length ? (this._fontColor = typeof _ === \"function\" ? _ : constant(_), this) : this._fontColor;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Defines the font-family to be used. The value passed can be either a *String* name of a font, a comma-separated list of font-family fallbacks, an *Array* of fallbacks, or a *Function* that returns either a *String* or an *Array*. If supplying multiple fallback fonts, the [fontExists](#fontExists) function will be used to determine the first available font on the client's machine.\n      @param {Array|Function|String} [*value* = [\"Roboto\", \"Helvetica Neue\", \"HelveticaNeue\", \"Helvetica\", \"Arial\", \"sans-serif\"]]\n      @chainable\n  */\n  fontFamily(_) {\n    return arguments.length ? (this._fontFamily = typeof _ === \"function\" ? _ : constant(_), this) : this._fontFamily;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the maximum font size to the specified accessor function or static number (which corresponds to pixel units), which is used when [dynamically resizing fonts](#textBox.fontResize).\n      @param {Function|Number} [*value* = 50]\n      @chainable\n  */\n  fontMax(_) {\n    return arguments.length ? (this._fontMax = typeof _ === \"function\" ? _ : constant(_), this) : this._fontMax;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the minimum font size to the specified accessor function or static number (which corresponds to pixel units), which is used when [dynamically resizing fonts](#textBox.fontResize).\n      @param {Function|Number} [*value* = 8]\n      @chainable\n  */\n  fontMin(_) {\n    return arguments.length ? (this._fontMin = typeof _ === \"function\" ? _ : constant(_), this) : this._fontMin;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font opacity to the specified accessor function or static number between 0 and 1.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n   */\n  fontOpacity(_) {\n    return arguments.length ? (this._fontOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._fontOpacity;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Toggles font resizing, which can either be defined as a static boolean for all data points, or an accessor function that returns a boolean. See [this example](http://d3plus.org/examples/d3plus-text/resizing-text/) for a side-by-side comparison.\n      @param {Function|Boolean} [*value* = false]\n      @chainable\n  */\n  fontResize(_) {\n    return arguments.length ? (this._fontResize = typeof _ === \"function\" ? _ : constant(_), this) : this._fontResize;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font size to the specified accessor function or static number (which corresponds to pixel units), which is inferred from the [DOM selection](#textBox.select) by default.\n      @param {Function|Number} [*value* = 10]\n      @chainable\n  */\n  fontSize(_) {\n    return arguments.length ? (this._fontSize = typeof _ === \"function\" ? _ : constant(_), this) : this._fontSize;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font stroke color for the rendered text.\n      @param {Function|String} [*value* = \"transparent\"]\n      @chainable\n  */\n  fontStroke(_) {\n    return arguments.length ? (this._fontStroke = typeof _ === \"function\" ? _ : constant(_), this) : this._fontStroke;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font stroke width for the rendered text.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  fontStrokeWidth(_) {\n    return arguments.length ? (this._fontStrokeWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._fontStrokeWidth;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the font weight to the specified accessor function or static number, which is inferred from the [DOM selection](#textBox.select) by default.\n      @param {Function|Number|String} [*value* = 400]\n      @chainable\n  */\n  fontWeight(_) {\n    return arguments.length ? (this._fontWeight = typeof _ === \"function\" ? _ : constant(_), this) : this._fontWeight;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the height for each box to the specified accessor function or static number.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d) {\n  return d.height || 200;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Configures the ability to render simple HTML tags. Defaults to supporting `<b>`, `<strong>`, `<i>`, and `<em>`, set to false to disable or provide a mapping of tags to svg styles\n      @param {Object|Boolean} [*value* = {\n                i: 'font-style: italic;',\n                em: 'font-style: italic;',\n                b: 'font-weight: bold;',\n                strong: 'font-weight: bold;'\n            }]\n      @chainable\n  */\n  html(_) {\n    return arguments.length ? (this._html = typeof _ === \"boolean\" ? _ ? defaultHtmlLookup : false : _, this) : this._html;\n  }\n\n\n  /**\n      @memberof TextBox\n      @desc Defines the unique id for each box to the specified accessor function or static number.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d, i) {\n  return d.id || i + \"\";\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = typeof _ === \"function\" ? _ : constant(_), this) : this._id;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the line height to the specified accessor function or static number, which is 1.2 times the [font size](#textBox.fontSize) by default.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  lineHeight(_) {\n    return arguments.length ? (this._lineHeight = typeof _ === \"function\" ? _ : constant(_), this) : this._lineHeight;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Restricts the maximum number of lines to wrap onto, which is null (unlimited) by default.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  maxLines(_) {\n    return arguments.length ? (this._maxLines = typeof _ === \"function\" ? _ : constant(_), this) : this._maxLines;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the text overflow to the specified accessor function or static boolean.\n      @param {Function|Boolean} [*value* = false]\n      @chainable\n  */\n  overflow(_) {\n    return arguments.length ? (this._overflow = typeof _ === \"function\" ? _ : constant(_), this) : this._overflow;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the padding to the specified accessor function, CSS shorthand string, or static number, which is 0 by default.\n      @param {Function|Number|String} [*value*]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = typeof _ === \"function\" ? _ : constant(_), this) : this._padding;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the pointer-events to the specified accessor function or static string.\n      @param {Function|String} [*value* = \"auto\"]\n      @chainable\n  */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the rotate percentage for each box to the specified accessor function or static string.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  rotate(_) {\n    return arguments.length ? (this._rotate = typeof _ === \"function\" ? _ : constant(_), this) : this._rotate;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the anchor point around which to rotate the text box.\n      @param {Function|Number[]}\n      @chainable\n   */\n  rotateAnchor(_) {\n    return arguments.length ? (this._rotateAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._rotateAnchor;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the SVG container element to the specified d3 selector or DOM element. If not explicitly specified, an SVG element will be added to the page for use.\n      @param {String|HTMLElement} [*selector*]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the word split behavior to the specified function, which when passed a string is expected to return that string split into an array of words.\n      @param {Function} [*value*]\n      @chainable\n  */\n  split(_) {\n    return arguments.length ? (this._split = _, this) : this._split;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the text for each box to the specified accessor function or static string.\n      @param {Function|String} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d) {\n  return d.text;\n}\n  */\n  text(_) {\n    return arguments.length ? (this._text = typeof _ === \"function\" ? _ : constant(_), this) : this._text;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the horizontal text anchor to the specified accessor function or static string, whose values are analagous to the SVG [text-anchor](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor) property.\n      @param {Function|String} [*value* = \"start\"]\n      @chainable\n  */\n  textAnchor(_) {\n    return arguments.length ? (this._textAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._textAnchor;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the vertical alignment to the specified accessor function or static string. Accepts `\"top\"`, `\"middle\"`, and `\"bottom\"`.\n      @param {Function|String} [*value* = \"top\"]\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = typeof _ === \"function\" ? _ : constant(_), this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the width for each box to the specified accessor function or static number.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d) {\n  return d.width || 200;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the x position for each box to the specified accessor function or static number. The number given should correspond to the left side of the textBox.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d) {\n  return d.x || 0;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof TextBox\n      @desc Sets the y position for each box to the specified accessor function or static number. The number given should correspond to the top side of the textBox.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example <caption>default accessor</caption>\nfunction(d) {\n  return d.y || 0;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","import {suffixChars, default as textSplit} from \"./textSplit.js\";\n\nconst lowercase = [\"a\", \"an\", \"and\", \"as\", \"at\", \"but\", \"by\", \"for\", \"from\", \"if\", \"in\", \"into\", \"near\", \"nor\", \"of\", \"on\", \"onto\", \"or\", \"per\", \"that\", \"the\", \"to\", \"with\", \"via\", \"vs\", \"vs.\"];\nconst uppercase = [\"CEO\", \"CFO\", \"CNC\", \"COO\", \"CPU\", \"GDP\", \"HVAC\", \"ID\", \"IT\", \"R&D\", \"TV\", \"UI\"];\n\n/**\n    @function titleCase\n    @desc Capitalizes the first letter of each word in a phrase/sentence.\n    @param {String} str The string to apply the title case logic.\n*/\nexport default function(str) {\n\n  if (str === void 0) return \"\";\n\n  const smalls = lowercase.map(s =>  s.toLowerCase());\n\n  let bigs = uppercase.slice();\n  bigs = bigs.concat(bigs.map(b => `${b}s`));\n  const biglow = bigs.map(b => b.toLowerCase());\n\n  const split = textSplit(str);\n  return split.map((s, i) => {\n    if (s) {\n      const lower = s.toLowerCase();\n      const stripped = suffixChars.includes(lower.charAt(lower.length - 1)) ? lower.slice(0, -1) : lower;\n      const bigindex = biglow.indexOf(stripped);\n      if (bigindex >= 0) return bigs[bigindex];\n      else if (smalls.includes(stripped) && i !== 0 && i !== split.length - 1) return lower;\n      else return s.charAt(0).toUpperCase() + s.substr(1).toLowerCase();\n    }\n    else return \"\";\n  }).reduce((ret, s, i) => {\n    if (i && str.charAt(ret.length) === \" \") ret += \" \";\n    ret += s;\n    return ret;\n  }, \"\");\n\n}\n"],"names":["htmlDecode","input","replace","doc","DOMParser","parseFromString","documentElement","textContent","measure","text","style","Object","assign","context","document","createElement","getContext","font","push","join","Array","map","t","measureText","width","trim","str","toString","trimLeft","trimRight","alpha","checked","height","dejavu","macos","monospace","proportional","fontExists","textWidth","split","f","i","length","fam","includes","elemRTL","e","select","size","attr","detectRTL","elem","node","parentNode","body","stringify","value","String","JSON","diacritics","strip","char","ret","d","RegExp","test","a","b","combiningMarks","concat","splitChars","prefixChars","suffixChars","burmeseRange","japaneseRange","chineseRange","laoRange","noSpaceRange","splitWords","noSpaceLanguage","splitAllChars","textSplit","sentence","match","filter","w","merge","wrap","fontFamily","fontSize","fontWeight","lineHeight","maxLines","overflow","defaultSplit","textWrap","Math","ceil","words","line","textProg","truncated","widthProg","lineData","sizes","space","word","wordWidth","indexOf","slice","lines","widths","_","arguments","defaultHtmlLookup","em","strong","TextBox","_ariaHidden","constant","_delay","_duration","_ellipsis","_fontColor","_fontFamily","_fontMax","_fontMin","_fontOpacity","_fontResize","_fontSize","_fontStroke","_fontStrokeWidth","_fontWeight","_height","accessor","_html","_id","id","_lineHeight","_maxLines","_on","_overflow","_padding","_pointerEvents","_rotate","_rotateAnchor","h","_split","_text","_textAnchor","_verticalAlign","_width","_x","_y","callback","_select","append","window","innerWidth","innerHeight","that","boxes","selectAll","data","_data","reduce","arr","resize","lHRatio","fS","lH","wrapResults","padding","parseSides","top","bottom","left","right","wrapper","fMax","fMin","vA","checkSize","truncate","max","min","l","areaMod","boxArea","maxWidth","textArea","sum","areaRatio","sqrt","widthRatio","sizeRatio","floor","heightMax","tH","r","yP","aH","fC","fStroke","fSW","fF","fO","fW","tA","x","y","transition","duration","exit","remove","delay","rotate","rotateAnchor","update","enter","call","rtl","order","each","tag","cleaned","tagRegex","textStyle","sin","PI","cos","texts","events","keys","on","obj","setTimeout","undefined","BaseClass","lowercase","uppercase","titleCase","smalls","s","toLowerCase","bigs","biglow","lower","stripped","charAt","bigindex","toUpperCase","substr"],"mappingszB,IAAIA,KAAK,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,OAAOD,KAAK;IAClD,IAAME,GAAG,GAAG,IAAIC,SAAS,EAAE,CAACC,eAAe,CAACJ,KAAK,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC;IACvF,OAAOC,GAAG,CAACG,eAAe,GAAGH,GAAG,CAACG,eAAe,CAACC,WAAW,GAAGN,KAAK;EACtE;;EAGA;AACA;AACA;AACA;AACA;AACA;EACe,SAAAO,OAAQ,CAACC,IAAI,EAAEC,KAAK,EAAE;IAEnCA,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;MACpB,WAAW,EAAE,EAAE;MACf,aAAa,EAAE,YAAY;MAC3B,YAAY,EAAE,QAAQ;MACtB,aAAa,EAAE,GAAG;MAClB,cAAc,EAAE;IACjB,CAAA,EAAEF,KAAK,CAAC;IAET,IAAMG,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAEjE,IAAMC,IAAI,GAAG,EAAE;IACfA,IAAI,CAACC,IAAI,CAACR,KAAK,CAAC,YAAY,CAAC,CAAC;IAC9BO,IAAI,CAACC,IAAI,CAACR,KAAK,CAAC,cAAc,CAAC,CAAC;IAChCO,IAAI,CAACC,IAAI,CAACR,KAAK,CAAC,aAAa,CAAC,CAAC;IAC/BO,IAAI,CAACC,IAAI,CAAC,OAAOR,KAAK,CAAC,WAAW,CAAC,KAAK,QAAQ,GAAGA,KAAK,CAAC,WAAW,CAAC,aAAMA,KAAK,CAAC,WAAW,CAAC,OAAI,CAAC;IAClGO,IAAI,CAACC,IAAI,CAACR,KAAK,CAAC,aAAa,CAAC,CAAC;IAE/BG,OAAO,CAACI,IAAI,GAAGA,IAAI,CAACE,IAAI,CAAC,GAAG,CAAC;IAE7B,IAAIV,IAAI,YAAYW,KAAK,EAAE,OAAOX,IAAI,CAACY,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAIT,OAAO,CAACU,WAAW,CAACvB,UAAU,CAACsB,CAAC,CAAC,CAAC,CAACE,KAAK;IAAA,EAAC;IACzF,OAAOX,OAAO,CAACU,WAAW,CAACvB,UAAU,CAACS,IAAI,CAAC,CAAC,CAACe,KAAK;EAEpD;;ECzCA;AACA;AACA;AACA;AACA;EACA,SAASC,IAAI,CAACC,GAAG,EAAE;IACjB,OAAOA,GAAG,CAACC,QAAQ,EAAE,CAACzB,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;EACjD;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS0B,QAAQ,CAACF,GAAG,EAAE;IACrB,OAAOA,GAAG,CAACC,QAAQ,EAAE,CAACzB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC3C;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS2B,SAAS,CAACH,GAAG,EAAE;IACtB,OAAOA,GAAG,CAACC,QAAQ,EAAE,CAACzB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC3C;ECtBA,IAAM4B,KAAK,GAAG,2CAA2C;IACnDC,OAAO,GAAG,CAAE,CAAA;IACZC,MAAM,GAAG,EAAE;EAEjB,IAAIC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,YAAY;;EAE1C;AACA;AACA;AACA;AACA;EACM,IAAAC,UAAU,GAAG,SAAbA,UAAU,CAAGpB,IAAI,EAAI;IAEzB,IAAI,CAACgB,MAAM,EAAE;MACXA,MAAM,GAAGK,OAAS,CAACR,KAAK,EAAE;QAAC,aAAa,EAAE,YAAY;QAAE,WAAW,EAAEE;MAAM,CAAC,CAAC;MAC7EE,KAAK,GAAGI,OAAS,CAACR,KAAK,EAAE;QAAC,aAAa,EAAE,eAAe;QAAE,WAAW,EAAEE;MAAM,CAAC,CAAC;MAC/EG,SAAS,GAAGG,OAAS,CAACR,KAAK,EAAE;QAAC,aAAa,EAAE,WAAW;QAAE,WAAW,EAAEE;MAAM,CAAC,CAAC;MAC/EI,YAAY,GAAGE,OAAS,CAACR,KAAK,EAAE;QAAC,aAAa,EAAE,YAAY;QAAE,WAAW,EAAEE;MAAM,CAAC,CAAC;IACpF;IAED,IAAI,EAAEf,IAAI,YAAYG,KAAK,CAAC,EAAEH,IAAI,GAAGA,IAAI,CAACsB,KAAK,CAAC,GAAG,CAAC;IACpDtB,IAAI,GAAGA,IAAI,CAACI,GAAG,CAAC,UAAAmB,CAAC;MAAA,OAAIf,IAAI,CAACe,CAAC,CAAC;IAAA,EAAC;IAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,IAAI,CAACyB,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAME,GAAG,GAAG1B,IAAI,CAACwB,CAAC,CAAC;MACnB,IAAIV,OAAO,CAACY,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,YAAY,CAAC,CAACC,QAAQ,CAACD,GAAG,CAAC,EAAE,OAAOA,GAAG,CAAC,KACpG,IAAIZ,OAAO,CAACY,GAAG,CAAC,KAAK,KAAK,EAAE;MACjC,IAAMnB,KAAK,GAAGc,OAAS,CAACR,KAAK,EAAE;QAAC,aAAa,EAAEa,GAAG;QAAE,WAAW,EAAEX;MAAM,CAAC,CAAC;MACzED,OAAO,CAACY,GAAG,CAAC,GAAGnB,KAAK,KAAKW,SAAS;MAClC,IAAIJ,OAAO,CAACY,GAAG,CAAC,EAAEZ,OAAO,CAACY,GAAG,CAAC,GAAGnB,KAAK,KAAKY,YAAY;MACvD,IAAIF,KAAK,IAAIH,OAAO,CAACY,GAAG,CAAC,EAAEZ,OAAO,CAACY,GAAG,CAAC,GAAGnB,KAAK,KAAKU,KAAK;MACzD,IAAID,MAAM,IAAIF,OAAO,CAACY,GAAG,CAAC,EAAEZ,OAAO,CAACY,GAAG,CAAC,GAAGnB,KAAK,KAAKS,MAAM;MAC3D,IAAIF,OAAO,CAACY,GAAG,CAAC,EAAE,OAAOA,GAAG;IAC7B;IAED,OAAO,KAAK;EAEd,CAAA;ECtCA,IAAME,OAAO,GAAG,SAAVA,OAAO,CAAGC,CAAC;IAAA,OAAIC,WAAAA,CAAAA,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,EAAE,KAAKD,WAAAA,CAAAA,MAAM,CAACD,CAAC,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAIF,WAAAA,CAAAA,MAAM,CAACD,CAAC,CAAC,CAACpC,KAAK,CAAC,WAAW,CAAC,KAAK,KAAK,CAAC;EAAA;;EAEpH;AACA;AACA;AACA;AACA;EACA,IAAAwC,SAAA,GAAe,SAAfA,SAAA,GAAkC;IAAA,IAAlBC,IAAI,uEAAG,MAAM;IAC3BA,IAAI,GAAGJ,WAAM,CAAAA,MAAA,CAACI,IAAI,CAAC,CAACC,IAAI,EAAE;IAC1B,OAAOD,IAAI,IAAIA,IAAI,CAACE,UAAU,IAAIF,IAAI,KAAKrC,QAAQ,CAACwC,IAAI,IAAI,CAACT,OAAO,CAACM,IAAI,CAAC,EAAE;MAC1EA,IAAI,GAAGA,IAAI,CAACE,UAAU;IACvB;IACD,OAAOR,OAAO,CAACM,IAAI,CAAC,IAAIN,OAAO,CAAC,MAAM,CAAC;EACzC,CAAA;;ECfA;AACA;AACA;AACA;AACA;EACe,SAAQU,SAAA,CAACC,KAAK,EAAE;IAC7B,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAEA,KAAK,GAAG,WAAW,CAAC,KACrC,IAAI,EAAE,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYC,MAAM,CAAC,EAAED,KAAK,GAAGE,IAAI,CAACH,SAAS,CAACC,KAAK,CAAC;IAC/F,OAAOA,KAAK;EACd;;ECTA;;EAEA,IAAMG,UAAU,GAAG,CACjB,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,CAAC,EAC5C,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,EACpC,CAAC,SAAS,EAAE,GAAG,CAAC,EAChB,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAClC,CAAC,iBAAiB,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAC1C,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,CAAC,EAC5C,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,CAAC,EAC5C,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAClC,CAAC,wBAAwB,EAAE,GAAG,CAAC,EAAE,CAAC,wBAAwB,EAAE,GAAG,CAAC,EAChE,CAAC,oBAAoB,EAAE,GAAG,CAAC,EAAE,CAAC,oBAAoB,EAAE,GAAG,CAAC,EACxD,CAAC,SAAS,EAAE,GAAG,CAAC,EAChB,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,CAAC,CACvC;;EAED;AACA;AACA;AACA;AACA;EACe,SAAQC,KAAA,CAACJ,KAAK,EAAE;IAE7B,OAAO,UAAGA,KAAK,EAAGtD,OAAO,CAAC,kBAAkB,EAAE,UAAA2D,KAAI,EAAI;MAEpD,IAAIA,KAAI,KAAK,GAAG,EAAE,OAAO,GAAG;MAE5B,IAAIC,GAAG,GAAG,KAAK;MACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACjB,MAAM,EAAEqB,CAAC,EAAE,EAAE;QAC1C,IAAI,IAAIC,MAAM,CAACL,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAACJ,KAAI,CAAC,EAAE;UAC3CC,GAAG,GAAGH,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB;QACD;MACF;MAED,OAAOD,GAAG,IAAI,EAAE;IAEpB,CAAG,CAAC;EACJ;;ECvrytsR,IAAAC,cAAA,GAAeF,CAAC,CAACG,MAAM,CAACF,CAAC,CAAC;ECF1B,IAAMG,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzC,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO,CAAA;EAAA,CACR;;EAED,IAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC1C,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO,CAAA;EAAA,CACR;;EAED,IAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9D,OAAO;EAAA;EACP,OAAO;EAAA;EACP,OAAO,CAAA;EAAA,CACR,CAACH,MAAM,CAACC,UAAU,CAAC;EAEpB,IAAMG,YAAY,GAAG,yCAAyC;EAC9D,IAAMC,aAAa,GAAG,gFAAgF;EACtG,IAAMC,YAAY,GAAG,eAAe;EACpC,IAAMC,QAAQ,GAAG,sDAAsD;EAEvE,IAAMC,YAAY,GAAGJ,YAAY,GAAGE,YAAY,GAAGD,aAAa,GAAGE,QAAQ;EAE3E,IAAME,UAAU,GAAG,IAAId,MAAM,cAAOM,UAAU,CAACnD,IAAI,CAAC,KAAK,CAAC,uBAAamD,UAAU,CAACnD,IAAI,CAAC,KAAK,CAAC,kBAAQmD,UAAU,CAACnD,IAAI,CAAC,KAAK,CAAC,SAAM,GAAG,CAAC;EACrI;EACA,IAAM4D,eAAe,GAAG,IAAIf,MAAM,YAAKa,YAAY,OAAI;EACvD,IAAMG,aAAa,GAAG,IAAIhB,MAAM,cAAOO,WAAW,CAACpD,IAAI,CAAC,KAAK,CAAC,gBAAM0D,YAAY,iBAAOL,WAAW,CAACrD,IAAI,CAAC,KAAK,CAAC,gBAAMiD,cAAc,CAACjD,IAAI,CAAC,KAAK,CAAC,mBAAgB,IAAI,CAAC;;EAEnK;AACA;AACA;AACA;AACA;EACe,SAAQ8D,SAAA,CAACC,QAAQ,EAAE;IAChC,IAAI,CAACH,eAAe,CAACd,IAAI,CAACiB,QAAQ,CAAC,EAAE,OAAO3B,SAAS,CAAC2B,QAAQ,CAAC,CAACC,KAAK,CAACL,UAAU,CAAC,CAACM,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAAC3C,MAAM;IAAA,EAAC;IACvG,OAAO4C,OAAK,CAAAA,KAAA,CAAC/B,SAAS,CAAC2B,QAAQ,CAAC,CAACC,KAAK,CAACL,UAAU,CAAC,CAACzD,GAAG,CAAC,UAAA0C,CAAC,EAAI;MAC1D,IAAIgB,eAAe,CAACd,IAAI,CAACF,CAAC,CAAC,EAAE,OAAOA,CAAC,CAACoB,KAAK,CAACH,aAAa,CAAC;MAC1D,OAAO,CAACjB,CAAC,CAAC;IACX,CAAA,CAAC,CAAC;EACL;;ECvDA;AACA;AACA;AACA;EACe,SAAAwB,IAAQ,GAAG;IAExB,IAAIC,UAAU,GAAG,YAAY;MACzBC,QAAQ,GAAG,EAAE;MACbC,UAAU,GAAG,GAAG;MAChB1D,MAAM,GAAG,GAAG;MACZ2D,UAAU;MACVC,QAAQ,GAAG,IAAI;MACfC,QAAQ,GAAG,KAAK;MAChBtD,KAAK,GAAGuD,SAAY;MACpBtE,KAAK,GAAG,GAAG;;IAEjB;AACA;AACA;AACA;IACE,SAASuE,QAAQ,CAACb,QAAQ,EAAE;MAE1BA,QAAQ,GAAG3B,SAAS,CAAC2B,QAAQ,CAAC;MAE9B,IAAIS,UAAU,KAAK,KAAK,CAAC,EAAEA,UAAU,GAAGK,IAAI,CAACC,IAAI,CAACR,QAAQ,GAAG,GAAG,CAAC;MAEjE,IAAMS,KAAK,GAAG3D,KAAK,CAAC2C,QAAQ,CAAC;MAE7B,IAAMxE,KAAK,GAAG;QACZ,aAAa,EAAE8E,UAAU;QACzB,WAAW,EAAEC,QAAQ;QACrB,aAAa,EAAEC,UAAU;QACzB,aAAa,EAAEC;MACrB,CAAK;MAED,IAAIQ,IAAI,GAAG,CAAC;QACRC,QAAQ,GAAG,EAAE;QACbC,SAAS,GAAG,KAAK;QACjBC,SAAS,GAAG,CAAC;MAEjB,IAAMC,QAAQ,GAAG,EAAE;QACbC,KAAK,GAAGhG,OAAO,CAAC0F,KAAK,EAAExF,KAAK,CAAC;QAC7B+F,KAAK,GAAGjG,OAAO,CAAC,GAAG,EAAEE,KAAK,CAAC;MAEjC,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyD,KAAK,CAACxD,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,IAAIiE,IAAI,GAAGR,KAAK,CAACzD,CAAC,CAAC;QACnB,IAAMkE,SAAS,GAAGH,KAAK,CAACN,KAAK,CAACU,OAAO,CAACF,IAAI,CAAC,CAAC;QAC5CA,IAAI,IAAIxB,QAAQ,CAAC2B,KAAK,CAACT,QAAQ,CAAC1D,MAAM,GAAGgE,IAAI,CAAChE,MAAM,CAAC,CAACyC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/E,IAAIiB,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIP,SAAS,GAAGK,SAAS,GAAGnF,KAAK,EAAE;UAChE,IAAI,CAACiB,CAAC,IAAI,CAACoD,QAAQ,EAAE;YACnBQ,SAAS,GAAG,IAAI;YAChB;UACD;UACD,IAAIE,QAAQ,CAAC7D,MAAM,IAAIyD,IAAI,EAAEI,QAAQ,CAACJ,IAAI,GAAG,CAAC,CAAC,GAAGtE,SAAS,CAAC0E,QAAQ,CAACJ,IAAI,GAAG,CAAC,CAAC,CAAC;UAC/EA,IAAI,EAAE;UACN,IAAIR,UAAU,GAAGQ,IAAI,GAAGnE,MAAM,IAAI2E,SAAS,GAAGnF,KAAK,IAAI,CAACqE,QAAQ,IAAID,QAAQ,IAAIO,IAAI,GAAGP,QAAQ,EAAE;YAC/FS,SAAS,GAAG,IAAI;YAChB;UACD;UACDC,SAAS,GAAG,CAAC;UACbC,QAAQ,CAACrF,IAAI,CAACwF,IAAI,CAAC;QACpB,CAAA,MACI,IAAI,CAACjE,CAAC,EAAE8D,QAAQ,CAAC,CAAC,CAAC,GAAGG,IAAI,CAAC,KAC3BH,QAAQ,CAACJ,IAAI,GAAG,CAAC,CAAC,IAAIO,IAAI;QAC/BN,QAAQ,IAAIM,IAAI;QAChBJ,SAAS,IAAIK,SAAS;QACtBL,SAAS,IAAII,IAAI,CAACvB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAACzC,MAAM,GAAG+D,KAAK;MACrD;MAED,OAAO;QACLK,KAAK,EAAEP,QAAQ;QACfrB,QAAQ,EAARA,QAAQ;QAAEmB,SAAS,EAATA,SAAS;QACnBU,MAAM,EAAEvG,OAAO,CAAC+F,QAAQ,EAAE7F,KAAK,CAAC;QAChCwF,KAAK,EAALA;MACN,CAAK;IAEF;;IAEH;AACA;AACA;AACA;AACA;IACEH,QAAQ,CAACP,UAAU,GAAG,UAASwB,CAAC,EAAE;MAChC,OAAOC,SAAS,CAACvE,MAAM,IAAI8C,UAAU,GAAGwB,CAAC,EAAEjB,QAAQ,IAAIP,UAAU;IACrE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEO,QAAQ,CAACN,QAAQ,GAAG,UAASuB,CAAC,EAAE;MAC9B,OAAOC,SAAS,CAACvE,MAAM,IAAI+C,QAAQ,GAAGuB,CAAC,EAAEjB,QAAQ,IAAIN,QAAQ;IACjE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEM,QAAQ,CAACL,UAAU,GAAG,UAASsB,CAAC,EAAE;MAChC,OAAOC,SAAS,CAACvE,MAAM,IAAIgD,UAAU,GAAGsB,CAAC,EAAEjB,QAAQ,IAAIL,UAAU;IACrE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEK,QAAQ,CAAC/D,MAAM,GAAG,UAASgF,CAAC,EAAE;MAC5B,OAAOC,SAAS,CAACvE,MAAM,IAAIV,MAAM,GAAGgF,CAAC,EAAEjB,QAAQ,IAAI/D,MAAM;IAC7D,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACE+D,QAAQ,CAACJ,UAAU,GAAG,UAASqB,CAAC,EAAE;MAChC,OAAOC,SAAS,CAACvE,MAAM,IAAIiD,UAAU,GAAGqB,CAAC,EAAEjB,QAAQ,IAAIJ,UAAU;IACrE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEI,QAAQ,CAACH,QAAQ,GAAG,UAASoB,CAAC,EAAE;MAC9B,OAAOC,SAAS,CAACvE,MAAM,IAAIkD,QAAQ,GAAGoB,CAAC,EAAEjB,QAAQ,IAAIH,QAAQ;IACjE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEG,QAAQ,CAACF,QAAQ,GAAG,UAASmB,CAAC,EAAE;MAC9B,OAAOC,SAAS,CAACvE,MAAM,IAAImD,QAAQ,GAAGmB,CAAC,EAAEjB,QAAQ,IAAIF,QAAQ;IACjE,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEE,QAAQ,CAACxD,KAAK,GAAG,UAASyE,CAAC,EAAE;MAC3B,OAAOC,SAAS,CAACvE,MAAM,IAAIH,KAAK,GAAGyE,CAAC,EAAEjB,QAAQ,IAAIxD,KAAK;IAC3D,CAAG;;IAEH;AACA;AACA;AACA;AACA;IACEwD,QAAQ,CAACvE,KAAK,GAAG,UAASwF,CAAC,EAAE;MAC3B,OAAOC,SAAS,CAACvE,MAAM,IAAIlB,KAAK,GAAGwF,CAAC,EAAEjB,QAAQ,IAAIvE,KAAK;IAC3D,CAAG;IAED,OAAOuE,QAAQ;EAEjB;;ECtKA;AACA;AACA;AACA;;EAgBA,IAAMmB,iBAAiB,GAAG;IACxBzE,CAAC,EAAE,qBAAqB;IACxB0E,EAAE,EAAE,qBAAqB;IACzBhD,CAAC,EAAE,oBAAoB;IACvBiD,MAAM,EAAE;EACV,CAAC;;EAED;AACA;AACA;AACA;AACA;EAJA,IAKqBC,OAAO;IAAA;IAAA;IAE5B;AACA;AACA;AACA;AACA;IACE,mBAAc;MAAA;MAAA;MAEZ;MAEA,MAAKC,WAAW,GAAGC,qBAAQ,CAAC,OAAO,CAAC;MACpC,MAAKC,MAAM,GAAG,CAAC;MACf,MAAKC,SAAS,GAAG,CAAC;MAClB,MAAKC,SAAS,GAAG,UAACjH,IAAI,EAAE0F,IAAI;QAAA,OAAKA,IAAI,aAAM1F,IAAI,CAACP,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,WAAQ,EAAE;MAAA;MAC/E,MAAKyH,UAAU,GAAGJ,qBAAQ,CAAC,OAAO,CAAC;MACnC,MAAKK,WAAW,GAAGL,qBAAQ,CAAC,CAAC,QAAQ,EAAE,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;MAC9G,MAAKM,QAAQ,GAAGN,qBAAQ,CAAC,EAAE,CAAC;MAC5B,MAAKO,QAAQ,GAAGP,qBAAQ,CAAC,CAAC,CAAC;MAC3B,MAAKQ,YAAY,GAAGR,qBAAQ,CAAC,CAAC,CAAC;MAC/B,MAAKS,WAAW,GAAGT,qBAAQ,CAAC,KAAK,CAAC;MAClC,MAAKU,SAAS,GAAGV,qBAAQ,CAAC,EAAE,CAAC;MAC7B,MAAKW,WAAW,GAAGX,qBAAQ,CAAC,aAAa,CAAC;MAC1C,MAAKY,gBAAgB,GAAGZ,qBAAQ,CAAC,CAAC,CAAC;MACnC,MAAKa,WAAW,GAAGb,qBAAQ,CAAC,GAAG,CAAC;MAChC,MAAKc,OAAO,GAAGC,YAAAA,CAAAA,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC;MACtC,MAAKC,KAAK,GAAGrB,iBAAiB;MAC9B,MAAKsB,GAAG,GAAG,UAACzE,CAAC,EAAEtB,CAAC;QAAA,OAAKsB,CAAC,CAAC0E,EAAE,cAAOhG,CAAC,CAAE;MAAA;MACnC,MAAKiG,WAAW,GAAG,UAAC3E,CAAC,EAAEtB,CAAC;QAAA,OAAK,MAAKwF,SAAS,CAAClE,CAAC,EAAEtB,CAAC,CAAC,GAAG,GAAG;MAAA;MACvD,MAAKkG,SAAS,GAAGpB,qBAAQ,CAAC,IAAI,CAAC;MAC/B,MAAKqB,GAAG,GAAG,EAAE;MACb,MAAKC,SAAS,GAAGtB,qBAAQ,CAAC,KAAK,CAAC;MAChC,MAAKuB,QAAQ,GAAGvB,qBAAQ,CAAC,CAAC,CAAC;MAC3B,MAAKwB,cAAc,GAAGxB,qBAAQ,CAAC,MAAM,CAAC;MACtC,MAAKyB,OAAO,GAAGzB,qBAAQ,CAAC,CAAC,CAAC;MAC1B,MAAK0B,aAAa,GAAG,UAAAlF,CAAC;QAAA,OAAI,CAACA,CAAC,CAACsB,CAAC,GAAG,CAAC,EAAEtB,CAAC,CAACmF,CAAC,GAAG,CAAC,CAAC;MAAA;MAC5C,MAAKC,MAAM,GAAGlE,SAAS;MACvB,MAAKmE,KAAK,GAAGd,qBAAQ,CAAC,MAAM,CAAC;MAC7B,MAAKe,WAAW,GAAG9B,qBAAQ,CAAC,OAAO,CAAC;MACpC,MAAK+B,cAAc,GAAG/B,qBAAQ,CAAC,KAAK,CAAC;MACrC,MAAKgC,MAAM,GAAGjB,YAAAA,CAAAA,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;MACpC,MAAKkB,EAAE,GAAGlB,YAAAA,CAAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;MAC1B,MAAKmB,EAAE,GAAGnB,YAAAA,CAAAA,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;MAAC;IAC5B;;IAEH;AACA;AACA;AACA;AACA;IAJA;MAAA;MAAA,OAKE,gBAAOoB,QAAQ,EAAE;QAAA;QAEf,IAAI,IAAI,CAACC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC5G,MAAM,CAACA,kBAAM,CAAC,MAAM,CAAC,CAAC6G,MAAM,CAAC,KAAK,CAAC,CAAClJ,KAAK,CAAC,OAAO,YAAKmJ,MAAM,CAACC,UAAU,QAAK,CAACpJ,KAAK,CAAC,QAAQ,YAAKmJ,MAAM,CAACE,WAAW,QAAK,CAAC3G,IAAI,EAAE,CAAC;QAEjK,IAAM4G,IAAI,GAAG,IAAI;QAEjB,IAAMC,KAAK,GAAG,IAAI,CAACN,OAAO,CAACO,SAAS,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEvG,CAAC,EAAEtB,CAAC,EAAK;UAE5F,IAAInB,CAAC,GAAG,MAAI,CAAC8H,KAAK,CAACrF,CAAC,EAAEtB,CAAC,CAAC;UACxB,IAAInB,CAAC,KAAK,KAAK,CAAC,EAAE,OAAOgJ,GAAG;UAC5BhJ,CAAC,GAAGG,IAAI,CAACH,CAAC,CAAC;UAEX,IAAMiJ,MAAM,GAAG,MAAI,CAACvC,WAAW,CAACjE,CAAC,EAAEtB,CAAC,CAAC;UACrC,IAAM+H,OAAO,GAAG,MAAI,CAAC9B,WAAW,CAAC3E,CAAC,EAAEtB,CAAC,CAAC,GAAG,MAAI,CAACwF,SAAS,CAAClE,CAAC,EAAEtB,CAAC,CAAC;UAE7D,IAAIgI,EAAE,GAAGF,MAAM,GAAG,MAAI,CAAC1C,QAAQ,CAAC9D,CAAC,EAAEtB,CAAC,CAAC,GAAG,MAAI,CAACwF,SAAS,CAAClE,CAAC,EAAEtB,CAAC,CAAC;YACxDiI,EAAE,GAAGH,MAAM,GAAGE,EAAE,GAAGD,OAAO,GAAG,MAAI,CAAC9B,WAAW,CAAC3E,CAAC,EAAEtB,CAAC,CAAC;YACnD0D,IAAI,GAAG,CAAC;YACRI,QAAQ,GAAG,EAAE;YACbC,KAAK;YACLmE,WAAW;UAEf,IAAMjK,KAAK,GAAG;YACZ,aAAa,EAAE2B,UAAU,CAAC,MAAI,CAACuF,WAAW,CAAC7D,CAAC,EAAEtB,CAAC,CAAC,CAAC;YACjD,WAAW,EAAEgI,EAAE;YACf,aAAa,EAAE,MAAI,CAACrC,WAAW,CAACrE,CAAC,EAAEtB,CAAC,CAAC;YACrC,aAAa,EAAEiI;UACvB,CAAO;UAED,IAAME,OAAO,GAAGC,YAAAA,CAAAA,UAAU,CAAC,MAAI,CAAC/B,QAAQ,CAAC/E,CAAC,EAAEtB,CAAC,CAAC,CAAC;UAE/C,IAAMyG,CAAC,GAAG,MAAI,CAACb,OAAO,CAACtE,CAAC,EAAEtB,CAAC,CAAC,IAAImI,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACG,MAAM,CAAC;YACvD1F,CAAC,GAAG,MAAI,CAACkE,MAAM,CAACxF,CAAC,EAAEtB,CAAC,CAAC,IAAImI,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACK,KAAK,CAAC;UAE5D,IAAMC,OAAO,GAAG3F,IAAI,EAAE,CACnBC,UAAU,CAAC9E,KAAK,CAAC,aAAa,CAAC,CAAC,CAChC+E,QAAQ,CAACgF,EAAE,CAAC,CACZ/E,UAAU,CAAChF,KAAK,CAAC,aAAa,CAAC,CAAC,CAChCiF,UAAU,CAAC+E,EAAE,CAAC,CACd9E,QAAQ,CAAC,MAAI,CAAC+C,SAAS,CAAC5E,CAAC,EAAEtB,CAAC,CAAC,CAAC,CAC9BT,MAAM,CAACkH,CAAC,CAAC,CACTrD,QAAQ,CAAC,MAAI,CAACgD,SAAS,CAAC9E,CAAC,EAAEtB,CAAC,CAAC,CAAC,CAC9BjB,KAAK,CAAC6D,CAAC,CAAC,CACR9C,KAAK,CAAC,MAAI,CAAC4G,MAAM,CAAC;UAErB,IAAMgC,IAAI,GAAG,MAAI,CAACtD,QAAQ,CAAC9D,CAAC,EAAEtB,CAAC,CAAC;YAC1B2I,IAAI,GAAG,MAAI,CAACtD,QAAQ,CAAC/D,CAAC,EAAEtB,CAAC,CAAC;YAC1B4I,EAAE,GAAG,MAAI,CAAC/B,cAAc,CAACvF,CAAC,EAAEtB,CAAC,CAAC;YAC9ByD,KAAK,GAAG,MAAI,CAACiD,MAAM,CAAC7H,CAAC,EAAEmB,CAAC,CAAC;;UAErC;AACA;AACA;AACA;UACM,SAAS6I,SAAS,GAAG;YACnB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;cACrB,IAAIpF,IAAI,GAAG,CAAC,EAAEI,QAAQ,GAAG,CAACyD,IAAI,CAACtC,SAAS,CAAC,EAAE,EAAEvB,IAAI,CAAC,CAAC,CAAC,KAC/CI,QAAQ,CAACJ,IAAI,GAAG,CAAC,CAAC,GAAG6D,IAAI,CAACtC,SAAS,CAACnB,QAAQ,CAACJ,IAAI,GAAG,CAAC,CAAC,EAAEA,IAAI,CAAC;YAC5E,CAAS;;YAET;YACQsE,EAAE,GAAGe,OAAAA,CAAAA,GAAG,CAAC,CAACf,EAAE,EAAEW,IAAI,CAAC,CAAC;YACpBX,EAAE,GAAGgB,OAAAA,CAAAA,GAAG,CAAC,CAAChB,EAAE,EAAEU,IAAI,CAAC,CAAC;YAEpB,IAAIZ,MAAM,EAAE;cACVG,EAAE,GAAGD,EAAE,GAAGD,OAAO;cACjBU,OAAO,CACJzF,QAAQ,CAACgF,EAAE,CAAC,CACZ9E,UAAU,CAAC+E,EAAE,CAAC;cACjBhK,KAAK,CAAC,WAAW,CAAC,GAAG+J,EAAE;cACvB/J,KAAK,CAAC,aAAa,CAAC,GAAGgK,EAAE;YAC1B;YAEDC,WAAW,GAAGO,OAAO,CAAC5J,CAAC,CAAC;YACxBiF,QAAQ,GAAGoE,WAAW,CAAC7D,KAAK,CAAC1B,MAAM,CAAC,UAAAsG,CAAC;cAAA,OAAIA,CAAC,KAAK,EAAE;YAAA,EAAC;YAClDvF,IAAI,GAAGI,QAAQ,CAAC7D,MAAM;YAEtB,IAAIiI,WAAW,CAACtE,SAAS,EAAE;cACzB,IAAIkE,MAAM,EAAE;gBACVE,EAAE,EAAE;gBACJ,IAAIA,EAAE,GAAGW,IAAI,EAAE;kBACbX,EAAE,GAAGW,IAAI;kBACTG,QAAQ,EAAE;kBACV;gBACD,CAAA,MACID,SAAS,EAAE;cACjB,CAAA,MACIC,QAAQ,EAAE;YAChB;UACF;UAED,IAAIlG,CAAC,GAAG+F,IAAI,KAAKlC,CAAC,GAAGwB,EAAE,IAAIH,MAAM,IAAIrB,CAAC,GAAGkC,IAAI,GAAGZ,OAAO,CAAC,EAAE;YAExD,IAAID,MAAM,EAAE;cAEV/D,KAAK,GAAGhG,OAAO,CAAC0F,KAAK,EAAExF,KAAK,CAAC;cAE7B,IAAMiL,OAAO,GAAG,KAAK,GAAGtG,CAAC,GAAG6D,CAAC,GAAG,GAAG;gBAC7B0C,OAAO,GAAGvG,CAAC,GAAG6D,CAAC;gBACf2C,QAAQ,GAAGL,OAAG,CAAAA,GAAA,CAAChF,KAAK,CAAC;gBACrBsF,QAAQ,GAAGC,OAAG,CAAAA,GAAA,CAACvF,KAAK,EAAE,UAAAzC,CAAC;kBAAA,OAAIA,CAAC,GAAG2G,EAAE;gBAAA,EAAC,GAAGiB,OAAO;cAElD,IAAIE,QAAQ,GAAGxG,CAAC,IAAIyG,QAAQ,GAAGF,OAAO,EAAE;gBACtC,IAAMI,SAAS,GAAGhG,IAAI,CAACiG,IAAI,CAACL,OAAO,GAAGE,QAAQ,CAAC;kBACzCI,UAAU,GAAG7G,CAAC,GAAGwG,QAAQ;gBAC/B,IAAMM,SAAS,GAAGV,OAAG,CAAAA,GAAA,CAAC,CAACO,SAAS,EAAEE,UAAU,CAAC,CAAC;gBAC9CzB,EAAE,GAAGzE,IAAI,CAACoG,KAAK,CAAC3B,EAAE,GAAG0B,SAAS,CAAC;cAChC;cAED,IAAME,SAAS,GAAGrG,IAAI,CAACoG,KAAK,CAAClD,CAAC,GAAG,GAAG,CAAC;cACrC,IAAIuB,EAAE,GAAG4B,SAAS,EAAE5B,EAAE,GAAG4B,SAAS;YAEnC;YAEDf,SAAS,EAAE;UAEZ;UAED,IAAI/E,QAAQ,CAAC7D,MAAM,EAAE;YAEnB,IAAM4J,EAAE,GAAGnG,IAAI,GAAGuE,EAAE;YACpB,IAAM6B,CAAC,GAAG,MAAI,CAACvD,OAAO,CAACjF,CAAC,EAAEtB,CAAC,CAAC;YAC5B,IAAI+J,EAAE,GAAGD,CAAC,KAAK,CAAC,GAAGlB,EAAE,KAAK,KAAK,GAAG,CAAC,GAAGA,EAAE,KAAK,QAAQ,GAAGnC,CAAC,GAAG,CAAC,GAAGoD,EAAE,GAAG,CAAC,GAAGpD,CAAC,GAAGoD,EAAE,GAAG,CAAC;YACnFE,EAAE,IAAI9B,EAAE,GAAG,GAAG;YAEdJ,GAAG,CAACpJ,IAAI,CAAC;cACPuL,EAAE,EAAE,MAAI,CAACnF,WAAW,CAACvD,CAAC,EAAEtB,CAAC,CAAC;cAC1B0H,IAAI,EAAEpG,CAAC;cACPtB,CAAC,EAADA,CAAC;cACDqE,KAAK,EAAEP,QAAQ;cACfmG,EAAE,EAAE,MAAI,CAAC/E,UAAU,CAAC5D,CAAC,EAAEtB,CAAC,CAAC;cACzBkK,OAAO,EAAE,MAAI,CAACzE,WAAW,CAACnE,CAAC,EAAEtB,CAAC,CAAC;cAC/BmK,GAAG,EAAE,MAAI,CAACzE,gBAAgB,CAACpE,CAAC,EAAEtB,CAAC,CAAC;cAChCoK,EAAE,EAAEnM,KAAK,CAAC,aAAa,CAAC;cACxBoM,EAAE,EAAE,MAAI,CAAC/E,YAAY,CAAChE,CAAC,EAAEtB,CAAC,CAAC;cAC3BsK,EAAE,EAAErM,KAAK,CAAC,aAAa,CAAC;cACxB+H,EAAE,EAAE,MAAI,CAACD,GAAG,CAACzE,CAAC,EAAEtB,CAAC,CAAC;cAClBuK,EAAE,EAAE,MAAI,CAAC3D,WAAW,CAACtF,CAAC,EAAEtB,CAAC,CAAC;cAC1B4I,EAAE,EAAE,MAAI,CAAC/B,cAAc,CAACvF,CAAC,EAAEtB,CAAC,CAAC;cAC7BsE,MAAM,EAAE4D,WAAW,CAAC5D,MAAM;cAC1B0D,EAAE,EAAFA,EAAE;cAAEC,EAAE,EAAFA,EAAE;cAAErF,CAAC,EAADA,CAAC;cAAE6D,CAAC,EAADA,CAAC;cAAEqD,CAAC,EAADA,CAAC;cACfU,CAAC,EAAE,MAAI,CAACzD,EAAE,CAACzF,CAAC,EAAEtB,CAAC,CAAC,GAAGmI,OAAO,CAACI,IAAI;cAC/BkC,CAAC,EAAE,MAAI,CAACzD,EAAE,CAAC1F,CAAC,EAAEtB,CAAC,CAAC,GAAG+J,EAAE,GAAG5B,OAAO,CAACE;YAC1C,CAAS,CAAC;UAEH;UAED,OAAOR,GAAG;QAEhB,CAAK,EAAE,EAAE,CAAC,EAAE,UAAAvG,CAAC;UAAA,OAAI,MAAI,CAACyE,GAAG,CAACzE,CAAC,CAACoG,IAAI,EAAEpG,CAAC,CAACtB,CAAC,CAAC;QAAA,EAAC;QAEnC,IAAMnB,CAAC,GAAG,IAAI,CAACqI,OAAO,CAACwD,UAAU,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC3F,SAAS,CAAC;QAE5D,IAAI,IAAI,CAACA,SAAS,KAAK,CAAC,EAAE;UAExBwC,KAAK,CAACoD,IAAI,EAAE,CAACC,MAAM,EAAE;QAEtB,CAAA,MACI;UAEHrD,KAAK,CAACoD,IAAI,EAAE,CAACF,UAAU,EAAE,CAACI,KAAK,CAAC,IAAI,CAAC9F,SAAS,CAAC,CAAC6F,MAAM,EAAE;UAExDrD,KAAK,CAACoD,IAAI,EAAE,CAACnD,SAAS,CAAC,MAAM,CAAC,CAACiD,UAAU,CAAC7L,CAAC,CAAC,CACzC2B,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAClBvC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;QAEvB;;QAEL;AACA;AACA;AACA;AACA;QACI,SAAS8M,MAAM,CAAC/M,IAAI,EAAE;UACpBA,IAAI,CAACwC,IAAI,CAAC,WAAW,EAAE,UAACc,CAAC,EAAEtB,CAAC,EAAK;YAC/B,IAAMgL,YAAY,GAAGzD,IAAI,CAACf,aAAa,CAAClF,CAAC,EAAEtB,CAAC,CAAC;YAC7C,2BAAoBsB,CAAC,CAACkJ,CAAC,eAAKlJ,CAAC,CAACmJ,CAAC,sBAAYnJ,CAAC,CAACwI,CAAC,eAAKkB,YAAY,CAAC,CAAC,CAAC,eAAKA,YAAY,CAAC,CAAC,CAAC;UAC9F,CAAO,CAAC;QACH;QAED,IAAMC,MAAM,GAAGzD,KAAK,CAAC0D,KAAK,EAAE,CAAC/D,MAAM,CAAC,GAAG,CAAC,CACnC3G,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAC/BA,IAAI,CAAC,IAAI,EAAE,UAAAc,CAAC;UAAA,gCAAsBH,KAAK,CAACG,CAAC,CAAC0E,EAAE,CAAC;QAAA,CAAE,CAAC,CAChDmF,IAAI,CAACJ,MAAM,CAAC,CACdlI,KAAK,CAAC2E,KAAK,CAAC;QAEf,IAAM4D,GAAG,GAAG3K,SAAS,CAAC,IAAI,CAACyG,OAAO,CAACvG,IAAI,EAAE,CAAC;QAE1CsK,MAAM,CACHI,KAAK,EAAE,CACPpN,KAAK,CAAC,gBAAgB,EAAE,UAAAqD,CAAC;UAAA,OAAI,MAAI,CAACgF,cAAc,CAAChF,CAAC,CAACoG,IAAI,EAAEpG,CAAC,CAACtB,CAAC,CAAC;QAAA,EAAC,CAC9DsL,IAAI,CAAC,UAAShK,CAAC,EAAE;UAExB;AACA;AACA;AACA;UACQ,SAASxD,WAAW,CAACE,IAAI,EAAE;YAEzB,IAAIuN,GAAG,GAAG,KAAK;YAEfvN,IAAI,CAACuJ,IAAI,CAACzB,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,UAAAjH,CAAC,EAAI;cAEtC,IAAI2M,OAAO,GAAGpM,SAAS,CAACP,CAAC,CAAC,CACvBpB,OAAO,CAAC,YAAY,EAAE,UAACwB,GAAG,EAAEwC,CAAC;gBAAA,OAAKA,CAAC,KAAK,KAAK,GAAGxC,GAAG,kBAAWwC,CAAC,CAAE;cAAA,EAAC,CAAA;cAAA,CAClEhE,OAAO,CAAC,eAAe,EAAE,UAACwB,GAAG,EAAEwC,CAAC;gBAAA,qBAAYA,CAAC;cAAA,CAAE,CAAC,CAAChE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;cAAA,CACvEA,OAAO,CAAC,wBAAwB,EAAE,UAACwB,GAAG,EAAEwC,CAAC,EAAEC,CAAC;gBAAA,iBAAQD,CAAC,SAAGC,CAAC,SAAGD,CAAC,CAAChE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC;cAAA,CAAE,CAAC,CAAA;cAAA,CACnFA,OAAO,CAAC,wBAAwB,EAAE,UAACwB,GAAG,EAAEwC,CAAC,EAAEC,CAAC;gBAAA,iBAAQA,CAAC,CAACjE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,SAAGgE,CAAC,SAAGC,CAAC;cAAA,CAAE,CAAC,CAAC,CAAA;;cAEvF,IAAM+J,QAAQ,GAAG,IAAIlK,MAAM,CAAC,oCAAoC,CAAC;cACjE,IAAIiK,OAAO,CAAC9I,KAAK,CAAC+I,QAAQ,CAAC,EAAE;gBAC3BD,OAAO,GAAGA,OAAO,CACd/N,OAAO,CAACgO,QAAQ,EAAE,UAACxM,GAAG,EAAEwC,CAAC,EAAEC,CAAC,EAAK;kBAChC6J,GAAG,GAAGhE,IAAI,CAACzB,KAAK,CAACrE,CAAC,CAAC,GAAGA,CAAC,GAAG,KAAK;kBAC/B,IAAI8J,GAAG,EAAE;oBACP,IAAMtN,KAAK,GAAGsJ,IAAI,CAACzB,KAAK,CAACyF,GAAG,CAAC;oBAC7B,IAAI1M,CAAC,CAACsB,QAAQ,aAAMoL,GAAG,OAAI,EAAEA,GAAG,GAAG,KAAK;oBACxC,gCAAwBtN,KAAK,gBAAKyD,CAAC;kBACpC;kBACD,OAAOA,CAAC;gBAC1B,CAAiB,CAAC;cACL,CAAA,MACI,IAAI6J,GAAG,CAACtL,MAAM,EAAE;gBACnBuL,OAAO,4BAAoBjE,IAAI,CAACzB,KAAK,CAACyF,GAAG,CAAC,gBAAKC,OAAO,aAAU;cACjE;cAED,OAAOA,OAAO;YAE1B,CAAW,CAAC;UAEH;;UAET;AACA;AACA;AACA;UACQ,SAASE,SAAS,CAAC1N,IAAI,EAAE;YAEvBA,IAAI,CACDwC,IAAI,CAAC,aAAa,EAAEc,CAAC,CAAC0I,EAAE,CAAC,CACzBxJ,IAAI,CAAC,KAAK,EAAE4K,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,CAChC5K,IAAI,CAAC,MAAM,EAAEc,CAAC,CAAC2I,EAAE,CAAC,CAClBzJ,IAAI,CAAC,QAAQ,EAAEc,CAAC,CAAC4I,OAAO,CAAC,CACzB1J,IAAI,CAAC,cAAc,EAAEc,CAAC,CAAC6I,GAAG,CAAC,CAC3B3J,IAAI,CAAC,aAAa,EAAEc,CAAC,CAACiJ,EAAE,CAAC,CACzB/J,IAAI,CAAC,aAAa,EAAEc,CAAC,CAAC8I,EAAE,CAAC,CACzBnM,KAAK,CAAC,aAAa,EAAEqD,CAAC,CAAC8I,EAAE,CAAC,CAC1B5J,IAAI,CAAC,WAAW,YAAKc,CAAC,CAAC0G,EAAE,QAAK,CAC9B/J,KAAK,CAAC,WAAW,YAAKqD,CAAC,CAAC0G,EAAE,QAAK,CAC/BxH,IAAI,CAAC,aAAa,EAAEc,CAAC,CAACgJ,EAAE,CAAC,CACzBrM,KAAK,CAAC,aAAa,EAAEqD,CAAC,CAACgJ,EAAE,CAAC,CAC1B9J,IAAI,CAAC,GAAG,YAAKc,CAAC,CAACiJ,EAAE,KAAK,QAAQ,GAAGjJ,CAAC,CAACsB,CAAC,GAAG,CAAC,GAAGwI,GAAG,GAAG9J,CAAC,CAACiJ,EAAE,KAAK,OAAO,GAAGjJ,CAAC,CAACsB,CAAC,GAAG,CAAC,GAAGtB,CAAC,CAACiJ,EAAE,KAAK,KAAK,GAAGjJ,CAAC,CAACsB,CAAC,GAAG,CAAC,GAAGW,IAAI,CAACoI,GAAG,CAACpI,IAAI,CAACqI,EAAE,GAAGtK,CAAC,CAACwI,CAAC,GAAG,GAAG,CAAC,QAAK,CAC3ItJ,IAAI,CAAC,GAAG,EAAE,UAAC3B,CAAC,EAAEmB,CAAC;cAAA,OAAKsB,CAAC,CAACwI,CAAC,KAAK,CAAC,IAAIxI,CAAC,CAACsH,EAAE,KAAK,KAAK,aAAM,CAAC5I,CAAC,GAAG,CAAC,IAAIsB,CAAC,CAAC2G,EAAE,IAAI3G,CAAC,CAAC2G,EAAE,GAAG3G,CAAC,CAAC0G,EAAE,CAAC,UAClF1G,CAAC,CAACsH,EAAE,KAAK,QAAQ,aACZ,CAACtH,CAAC,CAACmF,CAAC,GAAGnF,CAAC,CAAC0G,EAAE,IAAI,CAAC,IAAI1G,CAAC,CAAC2G,EAAE,GAAG3G,CAAC,CAAC0G,EAAE,CAAC,GAAG,CAAChI,CAAC,GAAGsB,CAAC,CAAC+C,KAAK,CAACpE,MAAM,GAAG,CAAC,GAAG,GAAG,IAAIqB,CAAC,CAAC2G,EAAE,oBACxE3G,CAAC,CAACmF,CAAC,GAAG,CAAC,IAAInF,CAAC,CAAC2G,EAAE,GAAG3G,CAAC,CAAC0G,EAAE,CAAC,GAAG,CAAC1G,CAAC,CAAC+C,KAAK,CAACpE,MAAM,IAAID,CAAC,GAAG,CAAC,CAAC,IAAIsB,CAAC,CAAC2G,EAAE,GAAG,CAAC,GAAG1E,IAAI,CAACsI,GAAG,CAACtI,IAAI,CAACqI,EAAE,GAAGtK,CAAC,CAACwI,CAAC,GAAG,GAAG,CAAC,OAAI;YAAA,EAAC;UAE9G;UAED,IAAMgC,KAAK,GAAGxL,kBAAM,CAAC,IAAI,CAAC,CAACmH,SAAS,CAAC,MAAM,CAAC,CAACC,IAAI,CAACpG,CAAC,CAAC+C,KAAK,CAAC;UAE1D,IAAIkD,IAAI,CAACvC,SAAS,KAAK,CAAC,EAAE;YAExB8G,KAAK,CACFX,IAAI,CAACrN,WAAW,CAAC,CACjBqN,IAAI,CAACO,SAAS,CAAC;YAElBI,KAAK,CAAClB,IAAI,EAAE,CAACC,MAAM,EAAE;YAErBiB,KAAK,CAACZ,KAAK,EAAE,CAAC/D,MAAM,CAAC,MAAM,CAAC,CACzB3G,IAAI,CAAC,mBAAmB,EAAE,YAAY,CAAC,CACvCvC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAC7BuC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CACrC2K,IAAI,CAACrN,WAAW,CAAC,CACjBqN,IAAI,CAACO,SAAS,CAAC,CACflL,IAAI,CAAC,SAAS,EAAEc,CAAC,CAAC+I,EAAE,CAAC,CACrBpM,KAAK,CAAC,SAAS,EAAEqD,CAAC,CAAC+I,EAAE,CAAC;UAE1B,CAAA,MACI;YAEHyB,KAAK,CAACX,IAAI,CAACrN,WAAW,CAAC,CAAC4M,UAAU,CAAC7L,CAAC,CAAC,CAACsM,IAAI,CAACO,SAAS,CAAC;YAErDI,KAAK,CAAClB,IAAI,EAAE,CAACF,UAAU,CAAC7L,CAAC,CAAC,CACvB2B,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAACqK,MAAM,EAAE;YAE9BiB,KAAK,CAACZ,KAAK,EAAE,CAAC/D,MAAM,CAAC,MAAM,CAAC,CACvB3G,IAAI,CAAC,mBAAmB,EAAE,YAAY,CAAC,CACvCvC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAC7BuC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAClBvC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBkN,IAAI,CAACrN,WAAW,CAAC,CACjBqN,IAAI,CAACO,SAAS,CAAC,CACjB7I,KAAK,CAACiJ,KAAK,CAAC,CAACpB,UAAU,CAAC7L,CAAC,CAAC,CAACiM,KAAK,CAACvD,IAAI,CAACxC,MAAM,CAAC,CAC3CoG,IAAI,CAACO,SAAS,CAAC,CACflL,IAAI,CAAC,SAAS,EAAEc,CAAC,CAAC+I,EAAE,CAAC,CACrBpM,KAAK,CAAC,SAAS,EAAEqD,CAAC,CAAC+I,EAAE,CAAC;UAC5B;QAET,CAAO,CAAC,CACDK,UAAU,CAAC7L,CAAC,CAAC,CAACsM,IAAI,CAACJ,MAAM,CAAC;QAE7B,IAAMgB,MAAM,GAAG7N,MAAM,CAAC8N,IAAI,CAAC,IAAI,CAAC7F,GAAG,CAAC;UAC9B8F,EAAE,GAAGF,MAAM,CAACnE,MAAM,CAAC,UAACsE,GAAG,EAAE7L,CAAC,EAAK;YAC7B6L,GAAG,CAAC7L,CAAC,CAAC,GAAG,UAACiB,CAAC,EAAEtB,CAAC;cAAA,OAAK,MAAI,CAACmG,GAAG,CAAC9F,CAAC,CAAC,CAACiB,CAAC,CAACoG,IAAI,EAAE1H,CAAC,CAAC;YAAA;YACzC,OAAOkM,GAAG;UACX,CAAA,EAAE,CAAE,CAAA,CAAC;QACZ,KAAK,IAAI7L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0L,MAAM,CAAC9L,MAAM,EAAEI,CAAC,EAAE,EAAE4K,MAAM,CAACgB,EAAE,CAACF,MAAM,CAAC1L,CAAC,CAAC,EAAE4L,EAAE,CAACF,MAAM,CAAC1L,CAAC,CAAC,CAAC,CAAC;QAE3E,IAAI4G,QAAQ,EAAEkF,UAAU,CAAClF,QAAQ,EAAE,IAAI,CAACjC,SAAS,GAAG,GAAG,CAAC;QAExD,OAAO,IAAI;MAEZ;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWT,CAAC,EAAE;QACZ,OAAOA,CAAC,KAAK6H,SAAS,IACjB,IAAI,CAACvH,WAAW,GAAG,OAAON,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IACnE,IAAI,CAACM,WAAW;MACrB;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,cAAKN,CAAC,EAAE;QACN,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC0H,KAAK,GAAGpD,CAAC,EAAE,IAAI,IAAI,IAAI,CAACoD,KAAK;MAC9D;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,eAAMpD,CAAC,EAAE;QACP,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC8E,MAAM,GAAGR,CAAC,EAAE,IAAI,IAAI,IAAI,CAACQ,MAAM;MAChE;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,kBAASR,CAAC,EAAE;QACV,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC+E,SAAS,GAAGT,CAAC,EAAE,IAAI,IAAI,IAAI,CAACS,SAAS;MACtE;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,kBAAST,CAAC,EAAE;QACV,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACgF,SAAS,GAAG,OAAOV,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACU,SAAS;MAC9G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,mBAAUV,CAAC,EAAE;QACX,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACiF,UAAU,GAAG,OAAOX,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACW,UAAU;MAChH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWX,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACkF,WAAW,GAAG,OAAOZ,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACY,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,iBAAQZ,CAAC,EAAE;QACT,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACmF,QAAQ,GAAG,OAAOb,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACa,QAAQ;MAC5G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,iBAAQb,CAAC,EAAE;QACT,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACoF,QAAQ,GAAG,OAAOd,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACc,QAAQ;MAC5G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,qBAAYd,CAAC,EAAE;QACb,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACqF,YAAY,GAAG,OAAOf,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACe,YAAY;MACpH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWf,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACsF,WAAW,GAAG,OAAOhB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACgB,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,kBAAShB,CAAC,EAAE;QACV,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACuF,SAAS,GAAG,OAAOjB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACiB,SAAS;MAC9G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWjB,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACwF,WAAW,GAAG,OAAOlB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACkB,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,yBAAgBlB,CAAC,EAAE;QACjB,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACyF,gBAAgB,GAAG,OAAOnB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACmB,gBAAgB;MAC5H;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWnB,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC0F,WAAW,GAAG,OAAOpB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACoB,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,gBAAOpB,CAAC,EAAE;QACR,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC2F,OAAO,GAAG,OAAOrB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACqB,OAAO;MAC1G;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVA;MAAA;MAAA,OAWE,cAAKrB,CAAC,EAAE;QACN,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC6F,KAAK,GAAG,OAAOvB,CAAC,KAAK,SAAS,GAAGA,CAAC,GAAGE,iBAAiB,GAAG,KAAK,GAAGF,CAAC,EAAE,IAAI,IAAI,IAAI,CAACuB,KAAK;MACvH;;MAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,YAAGvB,CAAC,EAAE;QACJ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC8F,GAAG,GAAG,OAAOxB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACwB,GAAG;MAClG;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWxB,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACgG,WAAW,GAAG,OAAO1B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC0B,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,kBAAS1B,CAAC,EAAE;QACV,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACiG,SAAS,GAAG,OAAO3B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC2B,SAAS;MAC9G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,kBAAS3B,CAAC,EAAE;QACV,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACmG,SAAS,GAAG,OAAO7B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC6B,SAAS;MAC9G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,iBAAQ7B,CAAC,EAAE;QACT,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACoG,QAAQ,GAAG,OAAO9B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC8B,QAAQ;MAC5G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,uBAAc9B,CAAC,EAAE;QACf,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACqG,cAAc,GAAG,OAAO/B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC+B,cAAc;MACxH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,gBAAO/B,CAAC,EAAE;QACR,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACsG,OAAO,GAAG,OAAOhC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACgC,OAAO;MAC1G;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,sBAAahC,CAAC,EAAE;QACd,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACuG,aAAa,GAAG,OAAOjC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACiC,aAAa;MACtH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,gBAAOjC,CAAC,EAAE;QACR,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACiH,OAAO,GAAG5G,kBAAM,CAACiE,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC2C,OAAO;MAC1E;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,eAAM3C,CAAC,EAAE;QACP,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAACyG,MAAM,GAAGnC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACmC,MAAM;MAChE;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,cAAKnC,CAAC,EAAE;QACN,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC0G,KAAK,GAAG,OAAOpC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACoC,KAAK;MACtG;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,oBAAWpC,CAAC,EAAE;QACZ,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC2G,WAAW,GAAG,OAAOrC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACqC,WAAW;MAClH;;MAEH;AACA;AACA;AACA;AACA;AACA;IALA;MAAA;MAAA,OAME,uBAAcrC,CAAC,EAAE;QACf,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC4G,cAAc,GAAG,OAAOtC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACsC,cAAc;MACxH;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,eAAMtC,CAAC,EAAE;QACP,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC6G,MAAM,GAAG,OAAOvC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACuC,MAAM;MACxG;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,WAAEvC,CAAC,EAAE;QACH,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC8G,EAAE,GAAG,OAAOxC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACwC,EAAE;MAChG;;MAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATA;MAAA;MAAA,OAUE,WAAExC,CAAC,EAAE;QACH,OAAOC,SAAS,CAACvE,MAAM,IAAI,IAAI,CAAC+G,EAAE,GAAG,OAAOzC,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGO,YAAQ,CAAAA,QAAA,CAACP,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAACyC,EAAE;MAChG;IAAA;IAAA;EAAA,EAztBkCqF,YAAAA,CAAAA,SAAS;EC7B9C,IAAMC,SAAS,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EACjM,IAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;;EAEnG;AACA;AACA;AACA;AACA;EACe,SAAQC,SAAA,CAACvN,GAAG,EAAE;IAE3B,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE,OAAO,EAAE;IAE7B,IAAMwN,MAAM,GAAGH,SAAS,CAAC1N,GAAG,CAAC,UAAA8N,CAAC;MAAA,OAAKA,CAAC,CAACC,WAAW,EAAE;IAAA,EAAC;IAEnD,IAAIC,IAAI,GAAGL,SAAS,CAACnI,KAAK,EAAE;IAC5BwI,IAAI,GAAGA,IAAI,CAAChL,MAAM,CAACgL,IAAI,CAAChO,GAAG,CAAC,UAAA8C,CAAC;MAAA,iBAAOA,CAAC;IAAA,CAAG,CAAC,CAAC;IAC1C,IAAMmL,MAAM,GAAGD,IAAI,CAAChO,GAAG,CAAC,UAAA8C,CAAC;MAAA,OAAIA,CAAC,CAACiL,WAAW,EAAE;IAAA,EAAC;IAE7C,IAAM7M,KAAK,GAAG0C,SAAS,CAACvD,GAAG,CAAC;IAC5B,OAAOa,KAAK,CAAClB,GAAG,CAAC,UAAC8N,CAAC,EAAE1M,CAAC,EAAK;MACzB,IAAI0M,CAAC,EAAE;QACL,IAAMI,KAAK,GAAGJ,CAAC,CAACC,WAAW,EAAE;QAC7B,IAAMI,QAAQ,GAAGhL,WAAW,CAAC5B,QAAQ,CAAC2M,KAAK,CAACE,MAAM,CAACF,KAAK,CAAC7M,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG6M,KAAK,CAAC1I,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG0I,KAAK;QAClG,IAAMG,QAAQ,GAAGJ,MAAM,CAAC1I,OAAO,CAAC4I,QAAQ,CAAC;QACzC,IAAIE,QAAQ,IAAI,CAAC,EAAE,OAAOL,IAAI,CAACK,QAAQ,CAAC,CAAC,KACpC,IAAIR,MAAM,CAACtM,QAAQ,CAAC4M,QAAQ,CAAC,IAAI/M,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAKF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE,OAAO6M,KAAK,CAAC,KACjF,OAAOJ,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE,GAAGR,CAAC,CAACS,MAAM,CAAC,CAAC,CAAC,CAACR,WAAW,EAAE;MAClE,CAAA,MACI,OAAO,EAAE;IACf,CAAA,CAAC,CAAC/E,MAAM,CAAC,UAACvG,GAAG,EAAEqL,CAAC,EAAE1M,CAAC,EAAK;MACvB,IAAIA,CAAC,IAAIf,GAAG,CAAC+N,MAAM,CAAC3L,GAAG,CAACpB,MAAM,CAAC,KAAK,GAAG,EAAEoB,GAAG,IAAI,GAAG;MACnDA,GAAG,IAAIqL,CAAC;MACR,OAAOrL,GAAG;IACX,CAAA,EAAE,EAAE,CAAC;EAER;;;;;;;;;;;;;;;;"}