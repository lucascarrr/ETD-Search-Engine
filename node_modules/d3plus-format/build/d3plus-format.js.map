{"version":3,"file":"d3plus-format.js","sources":["../src/locale.js","../src/formatAbbreviate.js","../src/format.js","../src/formatDefaultLocale.js","../src/formatDate.js"],"sourcesContent":["/**\n    @namespace {Object} formatLocale\n    @desc A set of default locale formatters used when assigning suffixes and currency in numbers.\n      *\n      * | Name | Default | Description |\n      * |---|---|---|\n      * | separator | \"\" | Separation between the number with the suffix. |\n      * | suffixes | [] | List of suffixes used to format numbers. |\n      * | grouping | [3] | The array of group sizes, |\n      * | delimiters | {thousands: \",\", decimal: \".\"} | Decimal and group separators. |\n      * | currency | [\"$\", \"\"] | The currency prefix and suffix. |\n*/\n\nexport default {\n  \"en-GB\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"B\", \"T\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"£\", \"\"]\n  },\n  \"en-US\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"B\", \"T\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-CL\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"MM\", \"B\", \"T\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \".\",\n      decimal: \",\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-MX\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"MM\", \"B\", \"T\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-ES\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"mm\", \"b\", \"t\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \".\",\n      decimal: \",\"\n    },\n    currency: [\"€\", \"\"]\n  },\n  \"et-EE\": {\n    separator: \" \",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"tuhat\", \"miljonit\", \"miljardit\", \"triljonit\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \" \",\n      decimal: \",\"\n    },\n    currency: [\"\", \"eurot\"]\n  },\n  \"fr-FR\": {\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"m\", \"b\", \"t\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \" \",\n      decimal: \",\"\n    },\n    currency: [\"€\", \"\"]\n  }\n};\n","import {formatLocale} from \"d3-format\";\nimport defaultLocale from \"./locale.js\";\n\nconst round = (x, n) =>\n  parseFloat(Math.round(x * Math.pow(10, n)) / Math.pow(10, n)).toFixed(n);\n\n/**\n * @private\n*/\nfunction formatSuffix(str, precision, suffixes) {\n  let i = 0;\n  let value = parseFloat(str.replace(\"−\", \"-\"), 10);\n  if (value) {\n    if (value < 0) value *= -1;\n    i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n    i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n  }\n  const d = suffixes[8 + i / 3];\n\n  return {\n    number: round(d.scale(value), precision),\n    symbol: d.symbol\n  };\n}\n\n/**\n * @private\n*/\nfunction parseSuffixes(d, i) {\n  const k = Math.pow(10, Math.abs(8 - i) * 3);\n  return {\n    scale: i > 8 ? d => d / k : d => d * k,\n    symbol: d\n  };\n}\n\n\n/**\n    @function formatAbbreviate\n    @desc Formats a number to an appropriate number of decimal places and rounding, adding suffixes if applicable (ie. `1200000` to `\"1.2M\"`).\n    @param {Number|String} n The number to be formatted.\n    @param {Object|String} locale The locale config to be used. If *value* is an object, the function will format the numbers according the object. The object must include `suffixes`, `delimiter` and `currency` properties.\n    @returns {String}\n*/\nexport default function(n, locale = \"en-US\", precision = undefined) {\n  if (isFinite(n)) n *= 1;\n  else return \"N/A\";\n\n  const negative = n < 0;\n\n  const length = n.toString().split(\".\")[0].replace(\"-\", \"\").length,\n        localeConfig = typeof locale === \"object\" ? locale : defaultLocale[locale] || defaultLocale[\"en-US\"],\n        suffixes = localeConfig.suffixes.map(parseSuffixes);\n\n  const decimal = localeConfig.delimiters.decimal || \".\",\n        separator = localeConfig.separator || \"\",\n        thousands = localeConfig.delimiters.thousands || \",\";\n\n  const d3plusFormatLocale = formatLocale({\n    currency: localeConfig.currency || [\"$\", \"\"],\n    decimal,\n    grouping: localeConfig.grouping || [3],\n    thousands\n  });\n\n  let val;\n  if (precision) val = d3plusFormatLocale.format(precision)(n);\n  else if (n === 0) val = \"0\";\n  else if (length >= 3) {\n    const f = formatSuffix(d3plusFormatLocale.format(\".3r\")(n), 2, suffixes);\n    const num = parseFloat(f.number).toString().replace(\".\", decimal);\n    const char = f.symbol;\n    val = `${num}${separator}${char}`;\n  }\n  else if (length === 3) val = d3plusFormatLocale.format(\",f\")(n);\n  else if (n < 1 && n > -1) val = d3plusFormatLocale.format(\".2g\")(n);\n  else val = d3plusFormatLocale.format(\".3g\")(n);\n\n  return `${negative && val.charAt(0) !== \"−\" ? \"−\" : \"\"}${val}`\n    .replace(/−/g, \"-\") // replace new d3 default minus sign (−) to hyphen-minus (-)\n    .replace(/(\\.[0]*[1-9]*)[0]*$/g, \"$1\") // removes any trailing zeros\n    .replace(/\\.[0]*$/g, \"\"); // removes any trailing decimal point\n\n}\n","import abbreviate from \"./formatAbbreviate.js\";\nimport {format} from \"d3-format\";\n\n/**\n    @function format\n    @desc An extension to d3's [format](https://github.com/d3/d3-format#api-reference) function that adds more string formatting types and localizations.\n\nThe new specifier strings added by d3plus-format are:\n - `.3~a` - abbreviated decimal notation with a numeric suffix (ie. \"k\", \"M\", \"B\", etc). This is an alias of the `formatAbbreviate` function.\n    @param {String} specifier The string specifier used by the format function.\n    @returns {Function}\n*/\nexport default specifier => {\n  if (specifier === \".3~a\") return abbreviate;\n  return format(specifier);\n};\n","import format from \"./format.js\";\nimport {formatDefaultLocale} from \"d3-format\";\n\n/**\n    @function formatDefaultLocale\n    @desc An extension to d3's [formatDefaultLocale](https://github.com/d3/d3-format#api-reference) function that allows setting the locale globally for formatters.\n    @param {Object} definition The localization definition.\n    @returns {Object}\n*/\nexport default definition => {\n  const locale = formatDefaultLocale(definition);\n  locale.format = format;\n  return locale;\n};\n","import {timeYear, timeMonth, timeHour, timeMinute, timeSecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\n\nconst formatHour = timeFormat(\"%I %p\"),\n      formatMillisecond = timeFormat(\".%L\"),\n      formatMinute = timeFormat(\"%I:%M\"),\n      formatMonth = timeFormat(\"%b\"),\n      formatMonthDay = timeFormat(\"%b %-d\"),\n      formatMonthDayYear = timeFormat(\"%b %-d, %Y\"),\n      formatMonthYear = timeFormat(\"%b %Y\"),\n      formatQuarter = timeFormat(\"Q%q\"),\n      formatQuarterYear = timeFormat(\"Q%q %Y\"),\n      formatSecond = timeFormat(\":%S\"),\n      formatYear = timeFormat(\"%Y\");\n\n/**\n    @function formatDate\n    @desc A default set of date formatters, which takes into account both the interval in between in each data point but also the start/end data points.\n    @param {Date} d The date string to be formatted.\n    @param {Array} dataArray The full array of ordered Date Objects.\n    @returns {String}\n*/\nexport default function(d, dataArray) {\n\n  const labelIndex = dataArray.findIndex(a => +a === +d);\n  const firstOrLast = labelIndex === 0 || labelIndex === dataArray.length - 1;\n  const smallArray = dataArray.length <= 5;\n\n  const [yearlySteps, monthlySteps, dailySteps, hourlySteps] = dataArray.reduce((arr, d, i) => {\n    if (i) {\n      arr[0].push(d.getFullYear() - dataArray[i - 1].getFullYear());\n      arr[1].push(monthDiff(dataArray[i - 1], d));\n      arr[2].push(Math.round((d - dataArray[i - 1]) / (1000 * 60 * 60 * 24)));\n      arr[3].push(Math.round((d - dataArray[i - 1]) / (1000 * 60 * 60)));\n    }\n    return arr;\n  }, [[], [], [], []]);\n\n  return (\n    yearlySteps.every(s => s >= 1 && !(s % 1)) // Yearly Data \n      ? formatYear\n    : monthlySteps.every(s => s >= 3 && !(s % 3)) // Quarterly Data\n      ? +timeYear(d) === d || firstOrLast || smallArray ? formatQuarterYear : formatQuarter\n    : monthlySteps.every(s => s >= 1 && !(s % 1)) // Monthly Data\n      ? +timeYear(d) === d || firstOrLast || smallArray ? formatMonthYear : formatMonth \n    : dailySteps.every(s => s >= 1 && !(s % 1)) // Daily Data\n      ? +timeYear(d) === d || firstOrLast || smallArray ? formatMonthDayYear : formatMonthDay \n    : hourlySteps.every(s => s >= 1 && !(s % 1)) // Hourly Data\n      ? firstOrLast || smallArray ? formatMonthDayYear : +timeMonth(d) === d ? formatMonthDay : formatHour\n    : timeSecond(d) < d ? formatMillisecond\n    : timeMinute(d) < d ? formatSecond\n    : timeHour(d) < d ? formatMinute : d\n  )(d);\n\n}\n\n/**\n    @function monthDiff\n    @desc Returns the number of months between two Date objects\n    @param {*} d1\n    @param {*} d2\n    @returns {Number} the number of months between the two Date objects\n    @private\n*/\nfunction monthDiff(d1, d2) {\n  let months;\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\n  months -= d1.getMonth();\n  months += d2.getMonth();\n  return months <= 0 ? 0 : months;\n}\n"],"names":["separator","suffixes","grouping","delimiters","thousands","decimal","currency","round","x","n","parseFloat","Math","pow","toFixed","formatSuffix","str","precision","i","value","replace","floor","log","LN10","max","min","d","number","scale","symbol","parseSuffixes","k","abs","locale","undefined","isFinite","negative","length","toString","split","localeConfig","defaultLocale","map","d3plusFormatLocale","formatLocale","val","format","f","num","char","charAt","specifier","abbreviate","definition","formatDefaultLocale","formatHour","timeFormat","formatMillisecond","formatMinute","formatMonth","formatMonthDay","formatMonthDayYear","formatMonthYear","formatQuarter","formatQuarterYear","formatSecond","formatYear","dataArray","labelIndex","findIndex","a","firstOrLast","smallArray","reduce","arr","push","getFullYear","monthDiff","yearlySteps","monthlySteps","dailySteps","hourlySteps","every","s","timeYear","timeMonth","timeSecond","timeMinute","timeHour","d1","d2","months","getMonth"],"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"}