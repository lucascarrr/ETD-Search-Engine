{"version":3,"file":"d3plus-priestley.js","sources":["../src/Priestley.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {min, max, range} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {scaleBand} from \"d3-scale\";\n\nimport {Axis, date} from \"d3plus-axis\";\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Priestley\n    @extends external:Viz\n    @desc Creates a priestley timeline based on an array of data.\n*/\nexport default class Priestley extends Viz {\n\n  /**\n      @memberof Priestley\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._axis = new Axis().align(\"end\").orient(\"bottom\");\n    this._axisConfig = {scale: \"time\"};\n    this._axisTest = new Axis().align(\"end\").gridSize(0).orient(\"bottom\");\n    this.end(\"end\");\n    this._paddingInner = 0.05;\n    this._paddingOuter = 0.05;\n    this._shapeConfig = assign({}, this._shapeConfig, {\n      ariaLabel: (d, i) => `${this._drawLabel(d, i)}, ${this._start(d, i)} - ${this._end(d, i)}.`\n    });\n    this.start(\"start\");\n\n  }\n\n  /**\n      @memberof Priestley\n      @desc Extends the render behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    if (!this._filteredData) return this;\n\n    const data = this._filteredData.map((data, i) => ({\n      __d3plus__: true,\n      data,\n      end: this._axisConfig.scale === \"time\" ? date(this._end(data, i)) : this._end(data, i),\n      i,\n      id: this._id(data, i),\n      start: this._axisConfig.scale === \"time\" ? date(this._start(data, i)) : this._start(data, i)\n    })).filter(d => d.end - d.start > 0).sort((a, b) => a.start - b.start);\n\n    let nestedData;\n    if (this._groupBy.length > 1 && this._drawDepth > 0) {\n      const dataNest = nest();\n      for (let i = 0; i < this._drawDepth; i++) dataNest.key(d => this._groupBy[i](d.data, d.i));\n      nestedData = dataNest.entries(data);\n    }\n    else nestedData = [{values: data}];\n\n    let maxLane = 0;\n    nestedData.forEach(g => {\n      let track = [];\n      g.values.forEach(d => {\n        track = track.map(t => t <= d.start ? false : t);\n        const i = track.indexOf(false);\n        if (i < 0) {\n          d.lane = maxLane + track.length;\n          track.push(d.end);\n        }\n        else {\n          track[i] = d.end;\n          d.lane = maxLane + i;\n        }\n      });\n      maxLane += track.length;\n    });\n\n    const axisConfig = {\n      domain: [min(data, d => d.start) || 0, max(data, d => d.end) || 0],\n      height: this._height - this._margin.top - this._margin.bottom,\n      width: this._width - this._margin.left - this._margin.right\n    };\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._axisTest\n      .config(axisConfig)\n      .config(this._axisConfig)\n      .select(elem(\"g.d3plus-priestley-axis-test\", {parent: this._select, enter: {opacity: 0}}).node())\n      .render();\n\n    this._axis\n      .config(axisConfig)\n      .config(this._axisConfig)\n      .select(elem(\"g.d3plus-priestley-axis\", {parent: this._select, enter: {transform}, update: {transform}}).node())\n      .render();\n\n    const axisPad = this._axisTest._padding;\n\n    const xScale = this._axis._d3Scale;\n\n    const yScale = scaleBand()\n      .domain(range(0, maxLane, 1))\n      .paddingInner(this._paddingInner)\n      .paddingOuter(this._paddingOuter)\n      .rangeRound([this._height - this._margin.bottom - this._axisTest.outerBounds().height - axisPad, this._margin.top + axisPad]);\n\n    const bandWidth = yScale.bandwidth();\n\n    this._shapes.push(new Rect()\n      .data(data)\n      .duration(this._duration)\n      .height(bandWidth)\n      .label((d, i) => this._drawLabel(d.data, i))\n      .select(elem(\"g.d3plus-priestley-shapes\", {parent: this._select}).node())\n      .width(d => {\n        const w = Math.abs(xScale(d.end) - xScale(d.start));\n        return w > 2 ? w - 2 : w;\n      })\n      .x(d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n      .y(d => yScale(d.lane) + bandWidth / 2)\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the config method for the axis and returns the current class instance. If *value* is not specified, returns the current axis configuration.\n      @param {Object} [*value*]\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the end accessor to the specified function or key and returns the current class instance. If *value* is not specified, returns the current end accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  end(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._end = _;\n      else {\n        this._end = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = max;\n      }\n      return this;\n    }\n    else return this._end;\n  }\n\n  /**\n      @memberof Priestley\n      @desc Sets the [paddingInner](https://github.com/d3/d3-scale#band_paddingInner) value of the underlining [Band Scale](https://github.com/d3/d3-scale#band-scales) used to determine the height of each bar. Values should be a ratio between 0 and 1 representing the space in between each rectangle.\n      @param {Number} [*value* = 0.05]\n      @chainable\n  */\n  paddingInner(_) {\n    return arguments.length ? (this._paddingInner = _, this) : this._paddingInner;\n  }\n\n  /**\n      @memberof Priestley\n      @desc Sets the [paddingOuter](https://github.com/d3/d3-scale#band_paddingOuter) value of the underlining [Band Scale](https://github.com/d3/d3-scale#band-scales) used to determine the height of each bar. Values should be a ratio between 0 and 1 representing the space around the outer rectangles.\n      @param {Number} [*value* = 0.05]\n      @chainable\n  */\n  paddingOuter(_) {\n    return arguments.length ? (this._paddingOuter = _, this) : this._paddingOuter;\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the start accessor to the specified function or key and returns the current class instance. If *value* is not specified, returns the current start accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  start(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._start = _;\n      else {\n        this._start = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = min;\n      }\n      return this;\n    }\n    else return this._start;\n  }\n\n}\n"],"names":["Priestley","_axis","Axis","align","orient","_axisConfig","scale","_axisTest","gridSize","end","_paddingInner","_paddingOuter","_shapeConfig","assign","ariaLabel","d","i","_drawLabel","_start","_end","start","callback","_filteredData","data","map","__d3plus__","date","id","_id","filter","sort","a","b","nestedData","_groupBy","length","_drawDepth","dataNest","nest","key","entries","values","maxLane","forEach","g","track","t","indexOf","lane","push","axisConfig","domain","min","max","height","_height","_margin","top","bottom","width","_width","left","right","transform","config","select","elem","parent","_select","enter","opacity","node","render","update","axisPad","_padding","xScale","_d3Scale","yScale","scaleBand","range","paddingInner","paddingOuter","rangeRound","outerBounds","bandWidth","bandwidth","_shapes","Rect","duration","_duration","label","w","Math","abs","x","y","configPrep","bind","_","arguments","accessor","_aggs","Viz"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}