{"version":3,"file":"d3plus-network.js","sources":["../src/Network.js","../src/Rings.js","../src/Sankey.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, mean, min, merge} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {forceLink, forceManyBody, forceSimulation} from \"d3-force\";\nimport {polygonHull} from \"d3-polygon\";\nimport * as scales from \"d3-scale\";\nimport {zoomTransform} from \"d3-zoom\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n * Fetches the unique ID for a data point, whether it's defined by data or nodes.\n * @private\n */\nfunction getNodeId(d, i) {\n  return `${this._id(d, i) || this._nodeGroupBy[min([this._drawDepth, this._nodeGroupBy.length - 1])](d, i)}`;\n}\n\n/**\n    @class Network\n    @extends external:Viz\n    @desc Creates a network visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/getting-started/) for help getting started using the Network class.\n*/\nexport default class Network extends Viz {\n\n  /**\n      @memberof Network\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodeGroupBy = [accessor(\"id\")];\n    this._nodes = [];\n    this._on[\"click.shape\"] = (d, i, x, event) => {\n\n      this._tooltipClass.data([]).render();\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        const id = getNodeId.bind(this)(d, i);\n\n        if (this._focus && this._focus === id) {\n\n          this.active(false);\n          this._on.mouseenter.bind(this)(d, i, x, event);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const links = this._linkLookup[id],\n                node = this._nodeLookup[id];\n\n          const filterIds = [id];\n          let xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n          links.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return h.source.id === id || h.target.id === id;\n            else return filterIds.includes(getNodeId.bind(this)(h, x));\n          });\n\n          this._focus = id;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n      }\n\n    };\n    this._on[\"click.legend\"] = (d, i, x, event) => {\n\n      const ids = this._id(d);\n      let id = this._ids(d);\n      id = id[id.length - 1];\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        if (this._focus && this._focus === ids) {\n\n          this.active(false);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const nodes = ids.map(id => this._nodeLookup[id]);\n\n          const filterIds = [`${id}`];\n          let xDomain = [nodes[0].x - nodes[0].r, nodes[0].x + nodes[0].r],\n              yDomain = [nodes[0].y - nodes[0].r, nodes[0].y + nodes[0].r];\n\n          nodes.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return filterIds.includes(h.source.id) && filterIds.includes(h.target.id);\n            else {\n              const myIds = this._ids(h, x);\n              return filterIds.includes(`${myIds[myIds.length - 1]}`);\n            }\n          });\n\n          this._focus = ids;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n        this._on.mouseenter.bind(this)(d, i, x, event);\n        this._on[\"mousemove.legend\"].bind(this)(d, i, x, event);\n\n      }\n\n    };\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      const id = getNodeId.bind(this)(d, i),\n            links = this._linkLookup[id] || [],\n            node = this._nodeLookup[id];\n\n      const filterIds = [id];\n      const xDomain = [node.x - node.r, node.x + node.r],\n            yDomain = [node.y - node.r, node.y + node.r];\n\n      links.forEach(l => {\n        filterIds.push(l.id);\n        if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n        if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n        if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n        if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n      });\n\n      this.hover((h, x) => {\n        if (h.source && h.target) return h.source.id === id || h.target.id === id;\n        else return filterIds.includes(`${this._ids(h, x)[this._drawDepth]}`);\n      });\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\"\n      }\n    });\n    this._x = accessor(\"x\");\n    this._y = accessor(\"y\");\n\n    this._zoom = true;\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const duration = this._duration,\n          height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes.reduce((obj, d, i) => {\n      obj[getNodeId.bind(this)(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        fx: d !== undefined && !isNaN(this._x(d)) ? this._x(d) : this._x(n),\n        fy: d !== undefined && !isNaN(this._y(d)) ? this._y(d) : this._y(n),\n        node: n,\n        r: this._size ? d !== undefined && this._size(d) !== undefined ? this._size(d) : this._size(n) : this._sizeMin,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const nodeIndices = nodes.map(n => n.node);\n    const links = this._links.map(l => {\n      const referenceType = typeof l.source;\n      return {\n        size: this._linkSize(l),\n        source: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.source])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.source]\n            : nodeLookup[l.source.id],\n        target: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.target])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.target]\n            : nodeLookup[l.target.id]\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const missingCoords = nodes.some(n => n.fx === undefined || n.fy === undefined);\n\n    if (missingCoords) {\n\n      const linkStrength = scales.scaleLinear()\n        .domain(extent(links, d => d.size))\n        .range([0.1, 0.5]);\n\n      const simulation = forceSimulation()\n        .force(\"link\", forceLink(links)\n          .id(d => d.id)\n          .distance(1)\n          .strength(d => linkStrength(d.size))\n          .iterations(4)\n        )\n        .force(\"charge\", forceManyBody().strength(-1))\n        .stop();\n\n      const iterations = 100;\n      const alphaMin = 0.001;\n      const alphaDecay = 1 - Math.pow(alphaMin, 1 / iterations);\n      simulation.velocityDecay(0);\n      simulation.alphaMin(alphaMin);\n      simulation.alphaDecay(alphaDecay);\n      simulation.alphaDecay(0);\n\n      simulation.nodes(nodes);\n      simulation.tick(iterations).stop();\n\n      const nodePositions = nodes.map(n => [n.vx, n.vy]);\n      let angle = 0, cx = 0, cy = 0;\n      if (nodePositions.length === 2) {\n        angle = 100;\n      }\n      else if (nodePositions.length > 2) {\n        const hull = polygonHull(nodePositions);\n        const rect = shapes.largestRect(hull, {verbose: true});\n        angle = rect.angle;\n        cx = rect.cx;\n        cy = rect.cy;\n      }\n\n      nodes.forEach(n => {\n        const p = shapes.pointRotate([n.vx, n.vy], -1 * (Math.PI / 180 * angle), [cx, cy]);\n        n.fx = p[0];\n        n.fy = p[1];\n      });\n\n    }\n\n    const xExtent = extent(nodes.map(n => n.fx)),\n          yExtent = extent(nodes.map(n => n.fy));\n\n    const x = scales.scaleLinear().domain(xExtent).range([0, width]),\n          y = scales.scaleLinear().domain(yExtent).range([0, height]);\n\n    const nodeRatio = (xExtent[1] - xExtent[0]) / (yExtent[1] - yExtent[0]) || 1,\n          screenRatio = width / height;\n\n    if (nodeRatio > screenRatio) {\n      const h = height * screenRatio / nodeRatio;\n      y.range([(height - h) / 2, height - (height - h) / 2]);\n    }\n    else {\n      const w = width * nodeRatio / screenRatio;\n      x.range([(width - w) / 2, width - (width - w) / 2]);\n    }\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.y = y(n.fy);\n    });\n\n    const rExtent = extent(nodes.map(n => n.r));\n    let rMax = this._sizeMax || max([1, min(\n      merge(nodes\n        .map(n1 => nodes\n          .map(n2 => n1 === n2 ? null : shapes.pointDistance([n1.x, n1.y], [n2.x, n2.y]))\n        )\n      )\n    ) / 2]);\n\n    const r = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n                .domain(rExtent).range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]),\n          xDomain = x.domain(),\n          yDomain = y.domain();\n\n    const xOldSize = xDomain[1] - xDomain[0],\n          yOldSize = yDomain[1] - yDomain[0];\n\n    nodes.forEach(n => {\n      const size = r(n.r);\n      if (xDomain[0] > x.invert(n.x - size)) xDomain[0] = x.invert(n.x - size);\n      if (xDomain[1] < x.invert(n.x + size)) xDomain[1] = x.invert(n.x + size);\n      if (yDomain[0] > y.invert(n.y - size)) yDomain[0] = y.invert(n.y - size);\n      if (yDomain[1] < y.invert(n.y + size)) yDomain[1] = y.invert(n.y + size);\n    });\n\n    const xNewSize = xDomain[1] - xDomain[0],\n          yNewSize = yDomain[1] - yDomain[0];\n\n    rMax *= min([xOldSize / xNewSize, yOldSize / yNewSize]);\n    r.range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]);\n    x.domain(xDomain);\n    y.domain(yDomain);\n\n    const fallbackRadius = (nodeRatio > screenRatio ? width : height) / 2;\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.fx = n.x;\n      n.y = y(n.fy);\n      n.fy = n.y;\n      n.r = r(n.r) || fallbackRadius;\n      n.width = n.r * 2;\n      n.height = n.r * 2;\n    });\n\n    this._container = this._select.selectAll(\"svg.d3plus-network\").data([0]);\n\n    this._container = this._container.enter().append(\"svg\")\n        .attr(\"class\", \"d3plus-network\")\n        .attr(\"opacity\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", this._margin.left)\n        .attr(\"y\", this._margin.top)\n        .style(\"background-color\", \"transparent\")\n      .merge(this._container);\n\n    this._container.transition().duration(duration)\n      .attr(\"opacity\", 1)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"x\", this._margin.left)\n      .attr(\"y\", this._margin.top);\n\n    const hitArea = this._container.selectAll(\"rect.d3plus-network-hitArea\").data([0]);\n    hitArea.enter().append(\"rect\")\n        .attr(\"class\", \"d3plus-network-hitArea\")\n      .merge(hitArea)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"transparent\")\n        .on(\"click\", () => {\n          if (this._focus) {\n            this.active(false);\n            this._focus = undefined;\n            this._zoomToBounds(null);\n          }\n        });\n\n    this._zoomGroup = this._container.selectAll(\"g.d3plus-network-zoomGroup\").data([0]);\n    const parent = this._zoomGroup = this._zoomGroup.enter().append(\"g\")\n        .attr(\"class\", \"d3plus-network-zoomGroup\")\n      .merge(this._zoomGroup);\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, r.range()[0]]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .activeStyle({\n        \"stroke-width\": d => d.size\n      })\n      .d(d => `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(links)\n      .select(elem(\"g.d3plus-network-links\", {parent, duration, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      select: elem(\"g.d3plus-network-nodes\", {parent, duration, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .config(shapeConfig[d.key] || {})\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    if (this._nodes.length < this._dataCutoff) {\n      this._shapes.forEach(s => s.hover(_));\n      if (this._legend) this._legendClass.hover(_);\n    }\n\n    return this;\n  }\n\n  /**\n      @memberof Network\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Network.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = \"id\"]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = (a, c) => {\n            const v = Array.from(new Set(a.map(c)));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Network\n      @desc The list of nodes to be used for drawing the network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the maximum pixel radius used in size scaling. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel radius used in size scaling.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of nodes in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the x accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current x accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = mean;\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the y accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current y accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = mean;\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorLegible} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n    @class Rings\n    @extends external:Viz\n    @desc Creates a ring visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/simple-rings/) for help getting started using the Rings class.\n*/\nexport default class Rings extends Viz {\n\n  /**\n      @memberof Rings\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i, x, event);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n              links = this._linkLookup[id],\n              node = this._nodeLookup[id];\n\n        const filterIds = [node.id];\n        const xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n        links.forEach(l => {\n          filterIds.push(l.id);\n          if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n          if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n          if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n          if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n          else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n        });\n      }\n    };\n    this._on[\"click.shape\"] = d => {\n      this._center = d.id;\n      // Need to resets margins and padding because we are\n      // skipping over the default render method and using\n      // _draw directly.\n      this._margin = {bottom: 0, left: 0, right: 0, top: 0};\n      this._padding = {bottom: 0, left: 0, right: 0, top: 0};\n      this._draw();\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes;\n\n    if (!this._nodes.length && this._links.length) {\n      const nodeIds = Array.from(new Set(this._links.reduce((ids, link) => ids.concat([link.source, link.target]), [])));\n      nodes = nodeIds.map(node => typeof node === \"object\" ? node : {id: node});\n    }\n\n    nodes = nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        node: n,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const links = this._links.map(link => {\n      const check = [\"source\", \"target\"];\n      const edge = check.reduce((result, check) => {\n        result[check] = typeof link[check] === \"number\" ? nodes[link[check]] : nodeLookup[link[check].id || link[check]];\n        return result;\n      }, {});\n      edge.size = this._linkSize(link);\n      return edge;\n    });\n\n    const linkMap = links.reduce((map, link) => {\n      if (!map[link.source.id]) {\n        map[link.source.id] = [];\n      }\n      map[link.source.id].push(link);\n      if (!map[link.target.id]) {\n        map[link.target.id] = [];\n      }\n      map[link.target.id].push(link);\n      return map;\n    }, {});\n\n    const duration = this._duration,\n          height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const edges = [],\n          radius = min([height, width]) / 2,\n          ringWidth = radius / 3;\n\n    const primaryRing = ringWidth,\n          secondaryRing = ringWidth * 2;\n\n    const center = nodeLookup[this._center];\n\n    center.x = width / 2;\n    center.y = height / 2;\n    center.r = this._sizeMin ? max([this._sizeMin, primaryRing * .65]) : this._sizeMax ? min([this._sizeMax, primaryRing * .65]) : primaryRing * .65;\n\n    const claimed = [center],\n          primaries = [];\n\n    linkMap[this._center].forEach(edge => {\n      const node = edge.source.id === this._center ? edge.target : edge.source;\n      node.edges = linkMap[node.id].filter(link => link.source.id !== this._center || link.target.id !== this._center);\n      node.edge = edge;\n\n      claimed.push(node);\n      primaries.push(node);\n    });\n\n    primaries.sort((a, b) => a.edges.length - b.edges.length);\n\n    const secondaries = [];\n    let totalEndNodes = 0;\n\n    primaries.forEach(p => {\n      const primaryId = p.id;\n\n      p.edges = p.edges.filter(edge => !claimed.includes(edge.source) && edge.target.id === primaryId ||\n                                       !claimed.includes(edge.target) && edge.source.id === primaryId);\n\n      totalEndNodes += p.edges.length || 1;\n\n      p.edges.forEach(edge => {\n        const {source, target} = edge;\n        const claim = target.id === primaryId ? source : target;\n        claimed.push(claim);\n      });\n    });\n\n    const tau = Math.PI * 2;\n    let offset = 0;\n\n    primaries.forEach((p, i) => {\n      const children = p.edges.length || 1;\n      const space = tau / totalEndNodes * children;\n\n      if (i === 0) {\n        offset -= space / 2;\n      }\n\n      const angle = offset + space / 2 - tau / 4;\n\n      p.radians = angle;\n      p.x = width / 2 + primaryRing * Math.cos(angle);\n      p.y = height / 2 + primaryRing * Math.sin(angle);\n\n      offset += space;\n\n      p.edges.forEach((edge, i) => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n        const s = tau / totalEndNodes;\n        const a = angle - s * children / 2 + s / 2 + s * i;\n\n        node.radians = a;\n        node.x = width / 2 + secondaryRing * Math.cos(a);\n        node.y = height / 2 + secondaryRing * Math.sin(a);\n\n        secondaries.push(node);\n      });\n    });\n\n    const primaryDistance = ringWidth / 2;\n    const secondaryDistance = ringWidth / 4;\n\n    let primaryMax = primaryDistance / 2 - 4;\n    if (primaryDistance / 2 - 4 < 8) {\n      primaryMax = min([primaryDistance / 2, 8]);\n    }\n\n    let secondaryMax = secondaryDistance / 2 - 4;\n    if (secondaryDistance / 2 - 4 < 4) {\n      secondaryMax = min([secondaryDistance / 2, 4]);\n    }\n\n    if (secondaryMax > ringWidth / 10) {\n      secondaryMax = ringWidth / 10;\n    }\n\n    if (secondaryMax > primaryMax && secondaryMax > 10) {\n      secondaryMax = primaryMax * .75;\n    }\n    if (primaryMax > secondaryMax * 1.5) {\n      primaryMax = secondaryMax * 1.5;\n    }\n\n    primaryMax = Math.floor(primaryMax);\n    secondaryMax = Math.floor(secondaryMax);\n\n    let radiusFn;\n\n    if (this._size) {\n      const domain = extent(data, d => d.size);\n\n      if (domain[0] === domain[1]) {\n        domain[0] = 0;\n      }\n\n      radiusFn = scales.scaleLinear()\n        .domain(domain)\n        .rangeRound([3, min([primaryMax, secondaryMax])]);\n\n      const val = center.size;\n      center.r = radiusFn(val);\n    }\n    else {\n      radiusFn = scales.scaleLinear()\n        .domain([1, 2])\n        .rangeRound([primaryMax, secondaryMax]);\n    }\n\n    secondaries.forEach(s => {\n      s.ring = 2;\n      const val = this._size ? s.size : 2;\n      s.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    primaries.forEach(p => {\n      p.ring = 1;\n      const val = this._size ? p.size : 1;\n      p.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    nodes = [center].concat(primaries).concat(secondaries);\n\n    primaries.forEach(p => {\n      const check = [\"source\", \"target\"];\n      const {edge} = p;\n\n      check.forEach(node => {\n        edge[node] = nodes.find(n => n.id === edge[node].id);\n      });\n\n      edges.push(edge);\n\n      linkMap[p.id].forEach(edge => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n\n        if (node.id !== center.id) {\n          let target = secondaries.find(s => s.id === node.id);\n\n          if (!target) {\n            target = primaries.find(s => s.id === node.id);\n          }\n\n          if (target) {\n            edge.spline = true;\n\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const middleRing = primaryRing + (secondaryRing - primaryRing) * 0.5;\n\n            const check = [\"source\", \"target\"];\n\n            check.forEach((node, i) => {\n              edge[`${node}X`] = edge[node].x + Math.cos(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}Y`] = edge[node].y + Math.sin(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}BisectX`] = centerX + middleRing * Math.cos(edge[node].radians);\n              edge[`${node}BisectY`] = centerY + middleRing * Math.sin(edge[node].radians);\n\n              edge[node] = nodes.find(n => n.id === edge[node].id);\n\n              if (edge[node].edges === undefined) edge[node].edges = {};\n\n              const oppId = i === 0 ? edge.target.id : edge.source.id;\n\n              if (edge[node].id === p.id) {\n                edge[node].edges[oppId] = {\n                  angle: p.radians + Math.PI,\n                  radius: ringWidth / 2\n                };\n              }\n              else {\n                edge[node].edges[oppId] = {\n                  angle: target.radians,\n                  radius: ringWidth / 2\n                };\n              }\n            });\n\n            edges.push(edge);\n          }\n        }\n      });\n    });\n\n    nodes.forEach(node => {\n\n      if (node.id !== this._center) {\n        const fontSize = this._shapeConfig.labelConfig.fontSize && this._shapeConfig.labelConfig.fontSize(node) || 11;\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 5;\n        const width = ringWidth - node.r;\n\n        let angle = node.radians * (180 / Math.PI);\n        let x = node.r + padding;\n        let textAnchor = \"start\";\n\n        if (angle < -90 || angle > 90) {\n          x = -node.r - width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        node.labelBounds = {\n          x,\n          y: -lineHeight / 2,\n          width,\n          height\n        };\n\n        node.rotate = angle;\n        node.textAnchor = textAnchor;\n      }\n      else {\n        node.labelBounds = {\n          x: -primaryRing / 2,\n          y: -primaryRing / 2,\n          width: primaryRing,\n          height: primaryRing\n        };\n      }\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const radius = min(nodes, d => d.r);\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, radius]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .id(d => `${d.source.id}_${d.target.id}`)\n      .d(d => d.spline ? `M${d.sourceX},${d.sourceY}C${d.sourceBisectX},${d.sourceBisectY} ${d.targetBisectX},${d.targetBisectY} ${d.targetX},${d.targetY}` : `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(edges)\n      .select(elem(\"g.d3plus-rings-links\", {parent: this._select, duration, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const that = this;\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: d => d.id === this._center ? configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.fontColor(d) : colorLegible(configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).fill(d)),\n        fontResize: d => d.id === this._center,\n        padding: 0,\n        textAnchor: d => nodeLookup[d.id].textAnchor || configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.textAnchor,\n        verticalAlign: d => d.id === this._center ? \"middle\" : \"top\"\n      },\n      rotate: d => nodeLookup[d.id].rotate || 0,\n      select: elem(\"g.d3plus-rings-nodes\", {parent: this._select, duration, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n   @memberof Rings\n   @desc Sets the center node to be the node with the given id.\n   @param {String}\n   @chainable\n   */\n  center(_) {\n    return arguments.length ? (this._center = _, this) : this._center;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Rings\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Rings.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = (a, c) => {\n            const v = Array.from(new Set(a.map(c)));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Rings\n      @desc The list of nodes to be used for drawing the rings network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyRight\n} from \"d3-sankey\";\n\nconst sankeyAligns = {\n  center: sankeyCenter,\n  justify: sankeyJustify,\n  left: sankeyLeft,\n  right: sankeyRight\n};\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n    @class Sankey\n    @extends external:Viz\n    @desc Creates a sankey visualization based on a defined set of nodes and links. [Click here](http://d3plus.org/examples/d3plus-network/sankey-diagram/) for help getting started using the Sankey class.\n*/\nexport default class Sankey extends Viz {\n\n  /**\n      @memberof Sankey\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    super();\n    this._nodeId = accessor(\"id\");\n    this._links = accessor(\"links\");\n    this._linksSource = \"source\";\n    this._linksTarget = \"target\";\n    this._noDataMessage = false;\n    this._nodes = accessor(\"nodes\");\n    this._nodeAlign = sankeyAligns.justify;\n    this._nodePadding = 8;\n    this._nodeWidth = 30;\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i, x, event);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeId(d, i),\n              node = this._nodeLookup[id],\n              nodeLookup = Object.keys(this._nodeLookup).reduce((all, item) => {\n                all[this._nodeLookup[item]] = !isNaN(item) ? parseInt(item, 10) : item;\n                return all;\n              }, {});\n\n        const links = this._linkLookup[node];\n        const filterIds = [id];\n\n        links.forEach(l => {\n          filterIds.push(nodeLookup[l]);\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) {\n            return h.source.id === id || h.target.id === id;\n          }\n          else {\n            return filterIds.includes(this._nodeId(h, x));\n          }\n        });\n      }\n    };\n    this._path = sankeyLinkHorizontal();\n    this._sankey = sankey();\n    this._shape = constant(\"Rect\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Path: {\n        fill: \"none\",\n        hoverStyle: {\n          \"stroke-width\": d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n        },\n        label: false,\n        stroke: \"#DBDBDB\",\n        strokeOpacity: 0.5,\n        strokeWidth: d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n\n      },\n      Rect: {}\n    });\n    this._value = constant(1);\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const _nodes = Array.isArray(this._nodes)\n      ? this._nodes\n      : this._links.reduce((all, d) => {\n        if (!all.includes(d[this._linksSource])) all.push(d[this._linksSource]);\n        if (!all.includes(d[this._linksTarget])) all.push(d[this._linksTarget]);\n        return all;\n      }, []).map(id => ({id}));\n\n    const nodes = _nodes\n      .map((n, i) => ({\n        __d3plus__: true,\n        data: n,\n        i,\n        id: this._nodeId(n, i),\n        node: n,\n        shape: \"Rect\"\n      }));\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d, i) => {\n      obj[d.id] = i;\n      return obj;\n    }, {});\n\n    const links = this._links.map((link, i) => {\n      const check = [this._linksSource, this._linksTarget];\n      const linkLookup = check.reduce((result, item) => {\n        result[item] = nodeLookup[link[item]];\n        return result;\n      }, {});\n      return {\n        source: linkLookup[this._linksSource],\n        target: linkLookup[this._linksTarget],\n        value: this._value(link, i)\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source]) obj[d.source] = [];\n      obj[d.source].push(d.target);\n      if (!obj[d.target]) obj[d.target] = [];\n      obj[d.target].push(d.source);\n      return obj;\n    }, {});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._sankey\n      .nodeAlign(this._nodeAlign)\n      .nodePadding(this._nodePadding)\n      .nodeWidth(this._nodeWidth)\n      .nodes(nodes)\n      .links(links)\n      .size([width, height])();\n\n    this._shapes.push(\n      new Path()\n        .config(this._shapeConfig.Path)\n        .data(links)\n        .d(this._path)\n        .select(\n          elem(\"g.d3plus-Links\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .render()\n    );\n    nest()\n      .key(d => d.shape)\n      .entries(nodes)\n      .forEach(d => {\n        this._shapes.push(\n          new shapes[d.key]()\n            .data(d.values)\n            .height(d => d.y1 - d.y0)\n            .width(d => d.x1 - d.x0)\n            .x(d => (d.x1 + d.x0) / 2)\n            .y(d => (d.y1 + d.y0) / 2)\n            .select(\n              elem(\"g.d3plus-sankey-nodes\", {\n                parent: this._select,\n                enter: {transform},\n                update: {transform}\n              }).node()\n            )\n            .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n            .render()\n        );\n      });\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Sankey.node) method. The `source` and `target` keys in each link need to map to the nodes in one of one way:\n1. A *String* value matching the `id` of the node.\n\nThe value passed should be an *Array* of data. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array} *links* = []\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the source node.\n      @param {String} [*value* = \"source\"]\n      @chainable\n  */\n  linksSource(_) {\n    return arguments.length ? (this._linksSource = _, this) : this._linksSource;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the target node.\n      @param {String} [*value* = \"target\"]\n      @chainable\n  */\n  linksTarget(_) {\n    return arguments.length ? (this._linksTarget = _, this) : this._linksTarget;\n  }\n\n  /**\n      @memberof Sankey\n      @desc Sets the nodeAlign property of the sankey layout, which can either be \"left\", \"right\", \"center\", or \"justify\".\n      @param {Function|String} [*value* = \"justify\"]\n      @chainable\n  */\n  nodeAlign(_) {\n    return arguments.length\n      ? (this._nodeAlign = typeof _ === \"function\" ? _ : sankeyAligns[_], this)\n      : this._nodeAlign;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the node id accessor(s) to the specified array of values and returns the current class instance. If *value* is not specified, returns the current node group accessor.\n      @param {String} [*value* = \"id\"]\n      @chainable\n  */\n  nodeId(_) {\n    return arguments.length\n      ? (this._nodeId = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._nodeId;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The list of nodes to be used for drawing the network. The value passed must be an *Array* of data.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array} *nodes* = []\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the padding of the node and returns the current class instance. If *value* is not specified, returns the current nodePadding. By default, the nodePadding size is 8.\n      @param {Number} [*value* = 8]\n      @chainable\n  */\n  nodePadding(_) {\n    return arguments.length ? (this._nodePadding = _, this) : this._nodePadding;\n  }\n\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the node and returns the current class instance. If *value* is not specified, returns the current nodeWidth. By default, the nodeWidth size is 30.\n      @param {Number} [*value* = 30]\n      @chainable\n  */\n  nodeWidth(_) {\n    return arguments.length ? (this._nodeWidth = _, this) : this._nodeWidth;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the links and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|Number} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n\n    return arguments.length\n      ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._value;\n  }\n}\n"],"names":["getNodeId","d","i","_id","_nodeGroupBy","min","_drawDepth","length","Network","_links","_linkSize","constant","_linkSizeMin","_linkSizeScale","_noDataMessage","accessor","_nodes","_on","x","event","_tooltipClass","data","render","_hover","_groupBy","id","bind","_focus","active","mouseenter","undefined","_zoomToBounds","hover","links","_linkLookup","node","_nodeLookup","filterIds","xDomain","r","yDomain","y","forEach","l","push","h","source","target","includes","t","zoomTransform","_container","map","k","ids","_ids","nodes","myIds","defaultMouseMove","_sizeMin","_sizeScale","_shape","_shapeConfig","assign","ariaLabel","validSize","_size","_drawLabel","labelConfig","duration","fontMin","fontResize","labelPadding","textAnchor","verticalAlign","Path","fill","label","stroke","_x","_y","_zoom","callback","_duration","height","_height","_margin","top","bottom","transform","left","width","_width","right","_filteredData","reduce","obj","Array","from","Set","Object","keys","concat","n","__d3plus__","fx","isNaN","fy","shape","filter","nodeLookup","nodeIndices","referenceType","size","indexOf","missingCoords","some","linkStrength","scales.scaleLinear","domain","extent","range","simulation","forceSimulation","force","forceLink","distance","strength","iterations","forceManyBody","stop","alphaMin","alphaDecay","Math","pow","velocityDecay","tick","nodePositions","vx","vy","angle","cx","cy","hull","polygonHull","rect","shapes.largestRect","verbose","p","shapes.pointRotate","PI","xExtent","yExtent","nodeRatio","screenRatio","w","rExtent","rMax","_sizeMax","max","merge","n1","n2","shapes.pointDistance","scales","charAt","toUpperCase","slice","xOldSize","yOldSize","invert","xNewSize","yNewSize","fallbackRadius","_select","selectAll","enter","append","attr","style","transition","hitArea","on","_zoomGroup","parent","strokeExtent","strokeScale","link","linkConfig","configPrep","_shapes","shapes.Path","config","strokeWidth","activeStyle","select","elem","update","shapeConfig","_dataCutoff","_active","nest","key","entries","shapes","values","_","s","_legend","_legendClass","f","arguments","addToQueue","_aggs","a","c","v","mean","Viz","Rings","_center","_padding","_draw","nodeIds","check","edge","result","linkMap","edges","radius","ringWidth","primaryRing","secondaryRing","center","claimed","primaries","sort","b","secondaries","totalEndNodes","primaryId","claim","tau","offset","children","space","radians","cos","sin","primaryDistance","secondaryDistance","primaryMax","secondaryMax","floor","radiusFn","rangeRound","val","ring","find","spline","centerX","centerY","middleRing","oppId","fontSize","lineHeight","padding","labelBounds","rotate","sourceX","sourceY","sourceBisectX","sourceBisectY","targetBisectX","targetBisectY","targetX","targetY","that","fontColor","colorLegible","sankeyAligns","sankeyCenter","justify","sankeyJustify","sankeyLeft","sankeyRight","Sankey","_nodeId","_linksSource","_linksTarget","_nodeAlign","_nodePadding","_nodeWidth","all","item","parseInt","_path","sankeyLinkHorizontal","_sankey","sankey","hoverStyle","abs","y1","y0","value","strokeOpacity","Rect","_value","isArray","linkLookup","nodeAlign","nodePadding","nodeWidth","x1","x0"],"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"}