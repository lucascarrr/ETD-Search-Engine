{"version":3,"file":"d3plus-hierarchy.js","sources":["../src/Pie.js","../src/Donut.js","../src/Pack.js","../src/nest.js","../src/Tree.js","../src/Treemap.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    const defaultLegend = this._legend;\n    this._legend = (config, arr) => {\n      if (arr.length === this._filteredData.length) return false;\n      return defaultLegend.bind(this)(config, arr);\n    };\n    this._legendSort = (a, b) => this._value(b) - this._value(a);\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._pieData ? `${++this._pieData[i].index}. ${this._drawLabel(d, i)}, ${this._value(d, i)}.` : \"\",\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._legendSort = (a, b) => this._value(b) - this._value(a);\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => this._value(b) - this._value(a);\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)(this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .label(this._drawLabel)\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n}\n","import {min} from \"d3-array\";\nimport {default as Pie} from \"./Pie.js\";\n\n/**\n    @class Donut\n    @extends Pie\n    @desc Extends the Pie visualization to create a donut chart.\n*/\nexport default class Donut extends Pie {\n\n  /**\n      @memberof Donut\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._innerRadius = () => min([\n      this._width - this._margin.left - this._margin.right,\n      this._height - this._margin.top - this._margin.bottom\n    ]) / 4;\n    this._padPixel = 2;\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {hierarchy, pack} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Circle} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst recursionCircles = (d, arr = []) => {\n  if (d.values) {\n    d.values.forEach(h => {\n      arr.push(h);\n      recursionCircles(h, arr);\n    });\n  }\n  else {\n    arr.push(d);\n  }\n  return arr;\n};\n\n/**\n    @class Pack\n    @extends Viz\n    @desc Uses the [d3 pack layout](https://github.com/d3/d3-hierarchy#pack) to creates Circle Packing chart based on an array of data.\n*/\nexport default class Pack extends Viz {\n\n  /**\n      @memberof Pack\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._layoutPadding = 1;\n\n    const defaultLegend = this._legend;\n    this._legend = (config, arr) => {\n      if (arr.length === this._filteredData.length) return false;\n      return defaultLegend.bind(this)(config, arr);\n    };\n\n    this._on.mouseenter = () => {};\n\n    const defaultMouseMoveLegend = this._on[\"mousemove.legend\"];\n    this._on[\"mousemove.legend\"] = (d, i, x, event) => {\n      defaultMouseMoveLegend(d, i, x, event);\n\n      const ids = this._ids(d, i);\n      const hoverData = recursionCircles(d);\n\n      this.hover(h => {\n        const hover = Object.keys(h).filter(key => key !== \"value\").every(key => d[key] && d[key].includes(h[key]));\n\n        if (hover) hoverData.push(h);\n        else if (ids.includes(h.key)) hoverData.push(...recursionCircles(h, [h]));\n\n        return hoverData.includes(h);\n      });\n\n    };\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      if (d.__d3plusTooltip__) defaultMouseMoveShape(d, i, x, event);\n      this.hover(h => recursionCircles(d, [d]).includes(h));\n    };\n    this._pack = pack();\n    this._packOpacity = constant(0.25);\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Circle: {\n        label: d => d.parent && !d.children ? d.id : false,\n        labelConfig: {\n          fontResize: true\n        },\n        opacity: d => d.__d3plusOpacity__\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const diameter = Math.min(height, width);\n    const transform = `translate(${(width - diameter) / 2}, ${(height - diameter) / 2})`;\n\n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const packData = this._pack\n      .padding(this._layoutPadding)\n      .size([diameter, diameter])(\n        hierarchy({key: nestedData.key, values: nestedData}, d => d.values).sum(this._sum).sort(this._sort)\n      )\n      .descendants();\n\n    packData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n      d.id = d.parent ? d.parent.data.key : null;\n      d.data.__d3plusOpacity__ = d.height ? this._packOpacity(d.data, i) : 1;\n      d.data.__d3plusTooltip__ = !d.height ? true : false;\n    });\n\n    this._shapes.push(\n      new Circle()\n        .data(packData)\n        .select(\n          elem(\"g.d3plus-Pack\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n\n    if (this._legend) this._legendClass.hover(_);\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  layoutPadding(_) {\n    return arguments.length ? (this._layoutPadding = _, this) : this._layoutPadding;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  packOpacity(_) {\n    return arguments.length ? (this._packOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._packOpacity;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *comparator* is specified, sets the sort order for the pack using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : accessor(_), this) : this._sum;\n  }\n}\n","import {nest} from \"d3-collection\";\n\n/**\n    @function nest\n    @summary Extends the base behavior of d3.nest to allow for multiple depth levels.\n    @param {Array} *data* The data array to be nested.\n    @param {Array} *keys* An array of key accessors that signify each nest level.\n    @private\n*/\nexport default function(data, keys) {\n\n  if (!(keys instanceof Array)) keys = [keys];\n\n  const dataNest = nest();\n  for (let i = 0; i < keys.length; i++) dataNest.key(keys[i]);\n  const nestedData = dataNest.entries(data);\n\n  return bubble(nestedData);\n\n}\n\n/**\n    Bubbles up values that do not nest to the furthest key.\n    @param {Array} *values* The \"values\" of a nest object.\n    @private\n*/\nfunction bubble(values) {\n\n  return values.map(d => {\n\n    if (d.key && d.values) {\n      if (d.values[0].key === \"undefined\") return d.values[0].values[0];\n      else d.values = bubble(d.values);\n    }\n\n    return d;\n\n  });\n\n}\n","import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest.js\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._treeData ? `${this._treeData[i].depth}. ${this._drawLabel(d, i)}.` : \"\",\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])(\n        hierarchy({\n          key: \"root\",\n          values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n        }, d => d.key && d.values ? d.values : null).sort(this._sort)\n      )\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n          : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n","import {sum} from \"d3-array\";\r\nimport {nest} from \"d3-collection\";\r\nimport {hierarchy, treemap} from \"d3-hierarchy\";\r\nimport {treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify} from \"d3-hierarchy\";\r\nconst tileMethods = {treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify};\r\n\r\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\r\nimport {formatAbbreviate} from \"d3plus-format\";\r\nimport {Rect} from \"d3plus-shape\";\r\nimport {Viz} from \"d3plus-viz\";\r\n\r\n/**\r\n    @class Treemap\r\n    @extends Viz\r\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\r\n*/\r\nexport default class Treemap extends Viz {\r\n\r\n  /**\r\n    @memberof Treemap\r\n    @desc Invoked when creating a new class instance, and sets any default parameters.\r\n    @private\r\n  */\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this._layoutPadding = 1;\r\n\r\n    const defaultLegend = this._legend;\r\n    this._legend = (config, arr) => {\r\n      if (arr.length === this._filteredData.length) return false;\r\n      return defaultLegend.bind(this)(config, arr);\r\n    };\r\n    this._legendSort = (a, b) => this._sum(b) - this._sum(a);\r\n    this._legendTooltip = assign({}, this._legendTooltip, {\r\n      tbody: []\r\n    });\r\n    this._shapeConfig = assign({}, this._shapeConfig, {\r\n      ariaLabel: (d, i) => {\r\n        const rank = this._rankData ? `${this._rankData.indexOf(d) + 1}. ` : \"\";\r\n        return `${rank}${this._drawLabel(d, i)}, ${this._sum(d, i)}.`;\r\n      },\r\n      labelConfig: {\r\n        fontMax: 40,\r\n        fontMin: 8,\r\n        fontResize: true,\r\n        padding: 5\r\n      }\r\n    });\r\n    this._sort = (a, b) => {\r\n      const aggA = isAggregated(a);\r\n      const aggB = isAggregated(b);\r\n      return aggA && !aggB ? 1 : !aggA && aggB ? -1 : b.value - a.value;\r\n    };\r\n    this._sum = accessor(\"value\");\r\n    this._thresholdKey = this._sum;\r\n    this._tile = treemapSquarify;\r\n    this._tooltipConfig = assign({}, this._tooltipConfig, {\r\n      tbody: [\r\n        [() => this._translate(\"Share\"), (d, i, x) => `${formatAbbreviate(x.share * 100, this._locale)}%`]\r\n      ]\r\n    });\r\n    this._treemap = treemap().round(true);\r\n\r\n    const isAggregated = leaf => leaf.children && leaf.children.length === 1 && leaf.children[0].data._isAggregation;\r\n\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc Extends the draw behavior of the abstract Viz class.\r\n      @private\r\n  */\r\n  _draw(callback) {\r\n\r\n    super._draw(callback);\r\n\r\n    let nestedData = nest();\r\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\r\n    nestedData = nestedData.entries(this._filteredData);\r\n\r\n    const tmapData = this._treemap\r\n      .padding(this._layoutPadding)\r\n      .size([\r\n        this._width - this._margin.left - this._margin.right,\r\n        this._height - this._margin.top - this._margin.bottom\r\n      ])\r\n      .tile(this._tile)(hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\r\n\r\n    const shapeData = [], that = this;\r\n\r\n    /**\r\n        @memberof Treemap\r\n        @desc Flattens and merges treemap data.\r\n        @private\r\n    */\r\n    function extractLayout(children) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        const node = children[i];\r\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\r\n        else {\r\n          const index = node.data.values.length === 1 ? that._filteredData.indexOf(node.data.values[0]) : undefined;\r\n          node.__d3plus__ = true;\r\n          node.id = node.data.key;\r\n          node.i = index > -1 ? index : undefined;\r\n          node.data = merge(node.data.values, that._aggs);\r\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\r\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\r\n          shapeData.push(node);\r\n        }\r\n      }\r\n    }\r\n    if (tmapData.children) extractLayout(tmapData.children);\r\n\r\n    this._rankData = shapeData.sort(this._sort).map(d => d.data);\r\n    const total = tmapData.value;\r\n    shapeData.forEach(d => {\r\n      d.share = this._sum(d.data, d.i) / total;\r\n    });\r\n\r\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\r\n    const rectConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\");\r\n    const fontMax = rectConfig.labelConfig.fontMax;\r\n    const fontMin = rectConfig.labelConfig.fontMin;\r\n    const padding = rectConfig.labelConfig.padding;\r\n\r\n    this._shapes.push(new Rect()\r\n      .data(shapeData)\r\n      .label(d => [\r\n        this._drawLabel(d.data, d.i),\r\n        `${formatAbbreviate(d.share * 100, this._locale)}%`\r\n      ])\r\n      .select(elem(\"g.d3plus-Treemap\", {\r\n        parent: this._select,\r\n        enter: {transform},\r\n        update: {transform}\r\n      }).node())\r\n      .config({\r\n        height: d => d.y1 - d.y0,\r\n        labelBounds: (d, i, s) => {\r\n          const h = s.height;\r\n          let sh = Math.min(fontMax, (h - padding * 2) * 0.5);\r\n          if (sh < fontMin) sh = 0;\r\n          return [\r\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\r\n            {width: s.width, height: sh + padding * 2, x: -s.width / 2, y: h / 2 - sh - padding * 2}\r\n          ];\r\n        },\r\n        labelConfig: {\r\n          textAnchor: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"middle\" : \"start\";\r\n          },\r\n          verticalAlign: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"bottom\" : \"top\";\r\n          }\r\n        },\r\n        width: d => d.x1 - d.x0\r\n      })\r\n      .config(rectConfig)\r\n      .render());\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Applies the threshold algorithm for Treemaps.\r\n   * @param {Array} data The data to process.\r\n   * @private\r\n   */\r\n  _thresholdFunction(data) {\r\n    const aggs = this._aggs;\r\n    const drawDepth = this._drawDepth;\r\n    const groupBy = this._groupBy;\r\n    const threshold = this._threshold;\r\n    const thresholdKey = this._thresholdKey;\r\n\r\n    const totalSum = sum(data, thresholdKey);\r\n\r\n    if (threshold && thresholdKey) {\r\n      return thresholdByDepth(data, 0);\r\n    }\r\n\r\n    /**\r\n     * @memberof Treemap\r\n     * @desc Explores the data tree recursively and merges elements under the indicated threshold.\r\n     * @param {object[]} branchData The current subset of the dataset to work on.\r\n     * @param {number} depth The depth of the current branch.\r\n     * @private\r\n     */\r\n    function thresholdByDepth(branchData, depth) {\r\n      if (depth < drawDepth) {\r\n        return nest()\r\n          .key(groupBy[depth])\r\n          .entries(branchData)\r\n          .reduce((bulk, leaf) => {\r\n            const subBranchData = thresholdByDepth(leaf.values, depth + 1);\r\n            return bulk.concat(subBranchData);\r\n          }, []);\r\n      }\r\n\r\n      if (depth === drawDepth) {\r\n        const thresholdPercent = Math.min(1, Math.max(0, threshold(branchData)));\r\n\r\n        if (!isFinite(thresholdPercent) || isNaN(thresholdPercent)) return null;\r\n\r\n        const removedItems = [];\r\n        const branchDataCopy = branchData.slice();\r\n        const thresholdValue = thresholdPercent * totalSum;\r\n\r\n        let n = branchDataCopy.length;\r\n        while (n--) {\r\n          const datum = branchDataCopy[n];\r\n          if (thresholdKey(datum) < thresholdValue) {\r\n            const index = branchDataCopy.indexOf(datum);\r\n            branchDataCopy.splice(index, 1);\r\n            removedItems.push(datum);\r\n          }\r\n        }\r\n\r\n        if (removedItems.length > 0) {\r\n          const mergedItem = merge(removedItems, aggs);\r\n          mergedItem._isAggregation = true;\r\n          mergedItem._threshold = thresholdPercent;\r\n          branchDataCopy.push(mergedItem);\r\n        }\r\n\r\n        return branchDataCopy;\r\n      }\r\n\r\n      throw new Error(\"Depth is higher than the amount of grouping levels.\");\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\r\n      @param {Function|Number} [*value*]\r\n  */\r\n  layoutPadding(_) {\r\n    return arguments.length ? (this._layoutPadding = typeof _ === \"function\" ? _ : constant(_), this) : this._layoutPadding;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\r\n      @param {Array} [*comparator*]\r\n      @example\r\nfunction comparator(a, b) {\r\n  return b.value - a.value;\r\n}\r\n  */\r\n  sort(_) {\r\n    return arguments.length ? (this._sort = _, this) : this._sort;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\r\n      @param {Function|Number} [*value*]\r\n      @example\r\nfunction sum(d) {\r\n  return d.sum;\r\n}\r\n  */\r\n  sum(_) {\r\n    if (arguments.length) {\r\n      this._sum = typeof _ === \"function\" ? _ : accessor(_);\r\n      this._thresholdKey = this._sum;\r\n      return this;\r\n    }\r\n    else return this._sum;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc Sets the tiling method used when calcuating the size and position of the rectangles.\r\n\r\nCan either be a string referring to a d3-hierarchy [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling), or a custom function in the same format.\r\n      @param {String|Function} [*value* = \"squarify\"]\r\n  */\r\n  tile(_) {\r\n    return arguments.length\r\n      ? (this._tile = typeof _ === \"string\"\r\n        ? tileMethods[`treemap${_.charAt(0).toUpperCase()}${_.slice(1)}`] || treemapSquarify\r\n        : _, this)\r\n      : this._tile;\r\n  }\r\n\r\n}\r\n"],"names":["Pie","defaultLegend","_legend","config","arr","length","_filteredData","bind","_legendSort","a","b","_value","_shapeConfig","assign","ariaLabel","d","i","_pieData","index","_drawLabel","Path","labelConfig","fontResize","_innerRadius","_padPixel","_pie","pie","_sort","accessor","callback","height","_height","_margin","top","bottom","width","_width","left","right","outerRadius","min","pieData","padAngle","_padAngle","sort","value","forEach","__d3plus__","arcData","arc","innerRadius","transform","_shapes","push","data","select","elem","parent","_select","enter","update","node","id","_ids","join","x","y","label","configPrep","render","_","arguments","Viz","Donut","recursionCircles","values","h","Pack","_layoutPadding","_on","mouseenter","defaultMouseMoveLegend","event","ids","hoverData","hover","Object","keys","filter","key","every","includes","defaultMouseMoveShape","__d3plusTooltip__","_pack","pack","_packOpacity","constant","_shape","Circle","children","opacity","__d3plusOpacity__","_sum","diameter","Math","nestedData","nest","_drawDepth","_groupBy","entries","packData","padding","size","hierarchy","sum","descendants","_hover","s","_legendClass","Array","dataNest","bubble","map","Tree","_orient","_separation","_treeData","depth","fontColor","fill","stroke","strokeWidth","r","_tree","tree","that","treeData","separation","slice","flattenBranchData","branch","merge","l","_aggs","rBufferRoot","max","rBufferEnd","yExtent","extent","_labelHeight","_labelWidths","reduce","num","v","next","prev","yScale","scaleLinear","domain","range","val","elemObject","px","py","_label","textAnchor","verticalAlign","hitArea","w","labelBounds","tileMethods","treemapBinary","treemapDice","treemapSlice","treemapSliceDice","treemapSquarify","treemapResquarify","Treemap","_legendTooltip","tbody","rank","_rankData","indexOf","fontMax","fontMin","aggA","isAggregated","aggB","_thresholdKey","_tile","_tooltipConfig","_translate","formatAbbreviate","share","_locale","_treemap","treemap","round","leaf","_isAggregation","tmapData","tile","shapeData","extractLayout","undefined","x0","x1","y0","y1","total","rectConfig","Rect","sh","line","__d3plusParent__","aggs","drawDepth","groupBy","threshold","_threshold","thresholdKey","totalSum","thresholdByDepth","branchData","bulk","subBranchData","concat","thresholdPercent","isFinite","isNaN","removedItems","branchDataCopy","thresholdValue","n","datum","splice","mergedItem","Error","charAt","toUpperCase"],"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"}